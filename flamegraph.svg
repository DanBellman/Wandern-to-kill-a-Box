<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="333891"><g><title>qos_class_main (11,376 samples, 3.41%)</title><rect x="0.0078%" y="1061" width="3.4071%" height="15" fill="rgb(227,0,7)" fg:x="26" fg:w="11376"/><text x="0.2578%" y="1071.50">qos..</text></g><g><title>start_wqthread (11,376 samples, 3.41%)</title><rect x="0.0078%" y="1045" width="3.4071%" height="15" fill="rgb(217,0,24)" fg:x="26" fg:w="11376"/><text x="0.2578%" y="1055.50">sta..</text></g><g><title>dyld4::start(dyld4::KernelArgs*, void*, void*)::$_0::operator()() const (42 samples, 0.01%)</title><rect x="3.4149%" y="1045" width="0.0126%" height="15" fill="rgb(221,193,54)" fg:x="11402" fg:w="42"/><text x="3.6649%" y="1055.50"></text></g><g><title>dyld4::prepare(dyld4::APIs&amp;, mach_o::Header const*) (42 samples, 0.01%)</title><rect x="3.4149%" y="1029" width="0.0126%" height="15" fill="rgb(248,212,6)" fg:x="11402" fg:w="42"/><text x="3.6649%" y="1039.50"></text></g><g><title>bevy_app::app::App::add_boxed_plugin::_{{closure}} (116 samples, 0.03%)</title><rect x="3.4275%" y="917" width="0.0347%" height="15" fill="rgb(208,68,35)" fg:x="11444" fg:w="116"/><text x="3.6775%" y="927.50"></text></g><g><title>&lt;P as bevy_app::plugin::sealed::Plugins&lt;bevy_app::plugin::sealed::PluginGroupMarker&gt;&gt;::add_to_app (117 samples, 0.04%)</title><rect x="3.4275%" y="949" width="0.0350%" height="15" fill="rgb(232,128,0)" fg:x="11444" fg:w="117"/><text x="3.6775%" y="959.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (117 samples, 0.04%)</title><rect x="3.4275%" y="933" width="0.0350%" height="15" fill="rgb(207,160,47)" fg:x="11444" fg:w="117"/><text x="3.6775%" y="943.50"></text></g><g><title>&lt;P as bevy_app::plugin::sealed::Plugins&lt;bevy_app::plugin::sealed::PluginMarker&gt;&gt;::add_to_app (119 samples, 0.04%)</title><rect x="3.4275%" y="981" width="0.0356%" height="15" fill="rgb(228,23,34)" fg:x="11444" fg:w="119"/><text x="3.6775%" y="991.50"></text></g><g><title>bevy_app::app::App::add_boxed_plugin::_{{closure}} (119 samples, 0.04%)</title><rect x="3.4275%" y="965" width="0.0356%" height="15" fill="rgb(218,30,26)" fg:x="11444" fg:w="119"/><text x="3.6775%" y="975.50"></text></g><g><title>-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (40 samples, 0.01%)</title><rect x="3.4943%" y="853" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="11667" fg:w="40"/><text x="3.7443%" y="863.50"></text></g><g><title>-[NSWindow(NSEventRouting) sendEvent:] (59 samples, 0.02%)</title><rect x="3.4931%" y="869" width="0.0177%" height="15" fill="rgb(250,228,42)" fg:x="11663" fg:w="59"/><text x="3.7431%" y="879.50"></text></g><g><title>-[NSApplication terminate:] (34 samples, 0.01%)</title><rect x="3.5143%" y="773" width="0.0102%" height="15" fill="rgb(240,193,28)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="783.50"></text></g><g><title>-[NSNotificationCenter postNotificationName:object:userInfo:] (34 samples, 0.01%)</title><rect x="3.5143%" y="757" width="0.0102%" height="15" fill="rgb(216,20,37)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="767.50"></text></g><g><title>_CFXNotificationPost (34 samples, 0.01%)</title><rect x="3.5143%" y="741" width="0.0102%" height="15" fill="rgb(206,188,39)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="751.50"></text></g><g><title>_CFXRegistrationPost (34 samples, 0.01%)</title><rect x="3.5143%" y="725" width="0.0102%" height="15" fill="rgb(217,207,13)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="735.50"></text></g><g><title>___CFXRegistrationPost_block_invoke (34 samples, 0.01%)</title><rect x="3.5143%" y="709" width="0.0102%" height="15" fill="rgb(231,73,38)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="719.50"></text></g><g><title>__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (34 samples, 0.01%)</title><rect x="3.5143%" y="693" width="0.0102%" height="15" fill="rgb(225,20,46)" fg:x="11734" fg:w="34"/><text x="3.7643%" y="703.50"></text></g><g><title>-[NSMenu _performKeyEquivalentForItemAtIndex:] (35 samples, 0.01%)</title><rect x="3.5143%" y="837" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="11734" fg:w="35"/><text x="3.7643%" y="847.50"></text></g><g><title>_NSMenuPerformActionWithHighlighting (35 samples, 0.01%)</title><rect x="3.5143%" y="821" width="0.0105%" height="15" fill="rgb(221,200,47)" fg:x="11734" fg:w="35"/><text x="3.7643%" y="831.50"></text></g><g><title>-[NSMenuItem _corePerformAction] (35 samples, 0.01%)</title><rect x="3.5143%" y="805" width="0.0105%" height="15" fill="rgb(226,26,5)" fg:x="11734" fg:w="35"/><text x="3.7643%" y="815.50"></text></g><g><title>-[NSApplication(NSResponder) sendAction:to:from:] (35 samples, 0.01%)</title><rect x="3.5143%" y="789" width="0.0105%" height="15" fill="rgb(249,33,26)" fg:x="11734" fg:w="35"/><text x="3.7643%" y="799.50"></text></g><g><title>routeKeyEquivalent (37 samples, 0.01%)</title><rect x="3.5143%" y="869" width="0.0111%" height="15" fill="rgb(235,183,28)" fg:x="11734" fg:w="37"/><text x="3.7643%" y="879.50"></text></g><g><title>-[NSMenu performKeyEquivalent:] (37 samples, 0.01%)</title><rect x="3.5143%" y="853" width="0.0111%" height="15" fill="rgb(221,5,38)" fg:x="11734" fg:w="37"/><text x="3.7643%" y="863.50"></text></g><g><title>_routeMouseMovedEvent (44 samples, 0.01%)</title><rect x="3.5263%" y="821" width="0.0132%" height="15" fill="rgb(247,18,42)" fg:x="11774" fg:w="44"/><text x="3.7763%" y="831.50"></text></g><g><title>-[NSWindow(NSEventRouting) sendEvent:] (46 samples, 0.01%)</title><rect x="3.5260%" y="853" width="0.0138%" height="15" fill="rgb(241,131,45)" fg:x="11773" fg:w="46"/><text x="3.7760%" y="863.50"></text></g><g><title>-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (46 samples, 0.01%)</title><rect x="3.5260%" y="837" width="0.0138%" height="15" fill="rgb(249,31,29)" fg:x="11773" fg:w="46"/><text x="3.7760%" y="847.50"></text></g><g><title>routeMouseMovedEvent (49 samples, 0.01%)</title><rect x="3.5254%" y="869" width="0.0147%" height="15" fill="rgb(225,111,53)" fg:x="11771" fg:w="49"/><text x="3.7754%" y="879.50"></text></g><g><title>-[NSApplication(NSEventRouting) sendEvent:] (247 samples, 0.07%)</title><rect x="3.4673%" y="885" width="0.0740%" height="15" fill="rgb(238,160,17)" fg:x="11577" fg:w="247"/><text x="3.7173%" y="895.50"></text></g><g><title>-[NSApplication _handleEvent:] (262 samples, 0.08%)</title><rect x="3.4634%" y="917" width="0.0785%" height="15" fill="rgb(214,148,48)" fg:x="11564" fg:w="262"/><text x="3.7134%" y="927.50"></text></g><g><title>winit::platform_impl::macos::app::send_event (249 samples, 0.07%)</title><rect x="3.4673%" y="901" width="0.0746%" height="15" fill="rgb(232,36,49)" fg:x="11577" fg:w="249"/><text x="3.7173%" y="911.50"></text></g><g><title>mach_msg (65 samples, 0.02%)</title><rect x="3.5829%" y="709" width="0.0195%" height="15" fill="rgb(209,103,24)" fg:x="11963" fg:w="65"/><text x="3.8329%" y="719.50"></text></g><g><title>mach_msg_overwrite (65 samples, 0.02%)</title><rect x="3.5829%" y="693" width="0.0195%" height="15" fill="rgb(229,88,8)" fg:x="11963" fg:w="65"/><text x="3.8329%" y="703.50"></text></g><g><title>mach_msg2_internal (65 samples, 0.02%)</title><rect x="3.5829%" y="677" width="0.0195%" height="15" fill="rgb(213,181,19)" fg:x="11963" fg:w="65"/><text x="3.8329%" y="687.50"></text></g><g><title>mach_msg2_trap (64 samples, 0.02%)</title><rect x="3.5832%" y="661" width="0.0192%" height="15" fill="rgb(254,191,54)" fg:x="11964" fg:w="64"/><text x="3.8332%" y="671.50"></text></g><g><title>CA::Render::Encoder::send_message(unsigned int, unsigned int, unsigned int*, unsigned long) (68 samples, 0.02%)</title><rect x="3.5823%" y="741" width="0.0204%" height="15" fill="rgb(241,83,37)" fg:x="11961" fg:w="68"/><text x="3.8323%" y="751.50"></text></g><g><title>CA::Render::Message::send_message() (66 samples, 0.02%)</title><rect x="3.5829%" y="725" width="0.0198%" height="15" fill="rgb(233,36,39)" fg:x="11963" fg:w="66"/><text x="3.8329%" y="735.50"></text></g><g><title>CA::Context::commit_transaction(CA::Transaction*, double, double*) (146 samples, 0.04%)</title><rect x="3.5745%" y="757" width="0.0437%" height="15" fill="rgb(226,3,54)" fg:x="11935" fg:w="146"/><text x="3.8245%" y="767.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (165 samples, 0.05%)</title><rect x="3.5742%" y="805" width="0.0494%" height="15" fill="rgb(245,192,40)" fg:x="11934" fg:w="165"/><text x="3.8242%" y="815.50"></text></g><g><title>CA::Transaction::flush_as_runloop_observer(bool) (165 samples, 0.05%)</title><rect x="3.5742%" y="789" width="0.0494%" height="15" fill="rgb(238,167,29)" fg:x="11934" fg:w="165"/><text x="3.8242%" y="799.50"></text></g><g><title>CA::Transaction::commit() (164 samples, 0.05%)</title><rect x="3.5745%" y="773" width="0.0491%" height="15" fill="rgb(232,182,51)" fg:x="11935" fg:w="164"/><text x="3.8245%" y="783.50"></text></g><g><title>__CFRunLoopDoObservers (170 samples, 0.05%)</title><rect x="3.5733%" y="821" width="0.0509%" height="15" fill="rgb(231,60,39)" fg:x="11931" fg:w="170"/><text x="3.8233%" y="831.50"></text></g><g><title>-[NSApplication updateWindows] (80 samples, 0.02%)</title><rect x="3.6488%" y="741" width="0.0240%" height="15" fill="rgb(208,69,12)" fg:x="12183" fg:w="80"/><text x="3.8988%" y="751.50"></text></g><g><title>__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (93 samples, 0.03%)</title><rect x="3.6488%" y="757" width="0.0279%" height="15" fill="rgb(235,93,37)" fg:x="12183" fg:w="93"/><text x="3.8988%" y="767.50"></text></g><g><title>___NSRunLoopObserverCreateWithHandler_block_invoke (109 samples, 0.03%)</title><rect x="3.6488%" y="773" width="0.0326%" height="15" fill="rgb(213,116,39)" fg:x="12183" fg:w="109"/><text x="3.8988%" y="783.50"></text></g><g><title>&lt;bevy_ecs::change_detection::NonSendMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::init_state (45 samples, 0.01%)</title><rect x="3.7120%" y="709" width="0.0135%" height="15" fill="rgb(222,207,29)" fg:x="12394" fg:w="45"/><text x="3.9620%" y="719.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParam&gt;::init_state (59 samples, 0.02%)</title><rect x="3.7120%" y="725" width="0.0177%" height="15" fill="rgb(206,96,30)" fg:x="12394" fg:w="59"/><text x="3.9620%" y="735.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7) as bevy_ecs::system::system_param::SystemParam&gt;::init_state (42 samples, 0.01%)</title><rect x="3.7306%" y="725" width="0.0126%" height="15" fill="rgb(218,138,4)" fg:x="12456" fg:w="42"/><text x="3.9806%" y="735.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::init_state (71 samples, 0.02%)</title><rect x="3.7431%" y="725" width="0.0213%" height="15" fill="rgb(250,191,14)" fg:x="12498" fg:w="71"/><text x="3.9931%" y="735.50"></text></g><g><title>&lt;bevy_winit::state::WinitAppRunnerState&lt;T&gt; as winit::application::ApplicationHandler&lt;T&gt;&gt;::about_to_wait (86 samples, 0.03%)</title><rect x="3.7737%" y="725" width="0.0258%" height="15" fill="rgb(239,60,40)" fg:x="12600" fg:w="86"/><text x="4.0237%" y="735.50"></text></g><g><title>&lt;bevy_winit::state::WinitAppRunnerState&lt;T&gt; as winit::application::ApplicationHandler&lt;T&gt;&gt;::window_event (53 samples, 0.02%)</title><rect x="3.7994%" y="725" width="0.0159%" height="15" fill="rgb(206,27,48)" fg:x="12686" fg:w="53"/><text x="4.0494%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (66 samples, 0.02%)</title><rect x="3.8737%" y="613" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="12934" fg:w="66"/><text x="4.1237%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (149 samples, 0.04%)</title><rect x="3.8935%" y="613" width="0.0446%" height="15" fill="rgb(250,213,24)" fg:x="13000" fg:w="149"/><text x="4.1435%" y="623.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_resources_compatible (58 samples, 0.02%)</title><rect x="3.9483%" y="613" width="0.0174%" height="15" fill="rgb(247,123,22)" fg:x="13183" fg:w="58"/><text x="4.1983%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (375 samples, 0.11%)</title><rect x="3.8659%" y="629" width="0.1123%" height="15" fill="rgb(231,138,38)" fg:x="12908" fg:w="375"/><text x="4.1159%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::rebuild_active_access (53 samples, 0.02%)</title><rect x="3.9848%" y="629" width="0.0159%" height="15" fill="rgb(231,145,46)" fg:x="13305" fg:w="53"/><text x="4.2348%" y="639.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (68 samples, 0.02%)</title><rect x="4.0046%" y="613" width="0.0204%" height="15" fill="rgb(251,118,11)" fg:x="13371" fg:w="68"/><text x="4.2546%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (60 samples, 0.02%)</title><rect x="4.0331%" y="613" width="0.0180%" height="15" fill="rgb(217,147,25)" fg:x="13466" fg:w="60"/><text x="4.2831%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::should_run (171 samples, 0.05%)</title><rect x="4.0007%" y="629" width="0.0512%" height="15" fill="rgb(247,81,37)" fg:x="13358" fg:w="171"/><text x="4.2507%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (82 samples, 0.02%)</title><rect x="4.0519%" y="629" width="0.0246%" height="15" fill="rgb(209,12,38)" fg:x="13529" fg:w="82"/><text x="4.3019%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (37 samples, 0.01%)</title><rect x="4.0765%" y="629" width="0.0111%" height="15" fill="rgb(227,1,9)" fg:x="13611" fg:w="37"/><text x="4.3265%" y="639.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (114 samples, 0.03%)</title><rect x="4.1025%" y="565" width="0.0341%" height="15" fill="rgb(248,47,43)" fg:x="13698" fg:w="114"/><text x="4.3525%" y="575.50"></text></g><g><title>pthread_cond_signal (114 samples, 0.03%)</title><rect x="4.1025%" y="549" width="0.0341%" height="15" fill="rgb(221,10,30)" fg:x="13698" fg:w="114"/><text x="4.3525%" y="559.50"></text></g><g><title>__psynch_cvsignal (113 samples, 0.03%)</title><rect x="4.1028%" y="533" width="0.0338%" height="15" fill="rgb(210,229,1)" fg:x="13699" fg:w="113"/><text x="4.3528%" y="543.50"></text></g><g><title>alloc::task::raw_waker::wake (115 samples, 0.03%)</title><rect x="4.1025%" y="581" width="0.0344%" height="15" fill="rgb(222,148,37)" fg:x="13698" fg:w="115"/><text x="4.3525%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (199 samples, 0.06%)</title><rect x="4.1013%" y="597" width="0.0596%" height="15" fill="rgb(234,67,33)" fg:x="13694" fg:w="199"/><text x="4.3513%" y="607.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (476 samples, 0.14%)</title><rect x="4.1007%" y="613" width="0.1426%" height="15" fill="rgb(247,98,35)" fg:x="13692" fg:w="476"/><text x="4.3507%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (263 samples, 0.08%)</title><rect x="4.1645%" y="597" width="0.0788%" height="15" fill="rgb(247,138,52)" fg:x="13905" fg:w="263"/><text x="4.4145%" y="607.50"></text></g><g><title>szone_malloc_should_clear (240 samples, 0.07%)</title><rect x="4.2574%" y="597" width="0.0719%" height="15" fill="rgb(213,79,30)" fg:x="14215" fg:w="240"/><text x="4.5074%" y="607.50"></text></g><g><title>tiny_malloc_should_clear (220 samples, 0.07%)</title><rect x="4.2634%" y="581" width="0.0659%" height="15" fill="rgb(246,177,23)" fg:x="14235" fg:w="220"/><text x="4.5134%" y="591.50"></text></g><g><title>tiny_malloc_from_free_list (189 samples, 0.06%)</title><rect x="4.2727%" y="565" width="0.0566%" height="15" fill="rgb(230,62,27)" fg:x="14266" fg:w="189"/><text x="4.5227%" y="575.50"></text></g><g><title>tiny_free_list_add_ptr (60 samples, 0.02%)</title><rect x="4.3113%" y="549" width="0.0180%" height="15" fill="rgb(216,154,8)" fg:x="14395" fg:w="60"/><text x="4.5613%" y="559.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (262 samples, 0.08%)</title><rect x="4.2514%" y="613" width="0.0785%" height="15" fill="rgb(244,35,45)" fg:x="14195" fg:w="262"/><text x="4.5014%" y="623.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (591 samples, 0.18%)</title><rect x="4.3308%" y="597" width="0.1770%" height="15" fill="rgb(251,115,12)" fg:x="14460" fg:w="591"/><text x="4.5808%" y="607.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (576 samples, 0.17%)</title><rect x="4.3352%" y="581" width="0.1725%" height="15" fill="rgb(240,54,50)" fg:x="14475" fg:w="576"/><text x="4.5852%" y="591.50"></text></g><g><title>__psynch_mutexwait (568 samples, 0.17%)</title><rect x="4.3376%" y="565" width="0.1701%" height="15" fill="rgb(233,84,52)" fg:x="14483" fg:w="568"/><text x="4.5876%" y="575.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (633 samples, 0.19%)</title><rect x="4.3299%" y="613" width="0.1896%" height="15" fill="rgb(207,117,47)" fg:x="14457" fg:w="633"/><text x="4.5799%" y="623.50"></text></g><g><title>pthread_mutex_lock (39 samples, 0.01%)</title><rect x="4.5078%" y="597" width="0.0117%" height="15" fill="rgb(249,43,39)" fg:x="15051" fg:w="39"/><text x="4.7578%" y="607.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1,225 samples, 0.37%)</title><rect x="4.5194%" y="597" width="0.3669%" height="15" fill="rgb(209,38,44)" fg:x="15090" fg:w="1225"/><text x="4.7694%" y="607.50"></text></g><g><title>_pthread_mutex_firstfit_wake (1,214 samples, 0.36%)</title><rect x="4.5227%" y="581" width="0.3636%" height="15" fill="rgb(236,212,23)" fg:x="15101" fg:w="1214"/><text x="4.7727%" y="591.50"></text></g><g><title>__psynch_mutexdrop (1,212 samples, 0.36%)</title><rect x="4.5233%" y="565" width="0.3630%" height="15" fill="rgb(242,79,21)" fg:x="15103" fg:w="1212"/><text x="4.7733%" y="575.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (1,258 samples, 0.38%)</title><rect x="4.5194%" y="613" width="0.3768%" height="15" fill="rgb(211,96,35)" fg:x="15090" fg:w="1258"/><text x="4.7694%" y="623.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (2,695 samples, 0.81%)</title><rect x="4.0906%" y="629" width="0.8071%" height="15" fill="rgb(253,215,40)" fg:x="13658" fg:w="2695"/><text x="4.3406%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.02%)</title><rect x="4.9088%" y="629" width="0.0216%" height="15" fill="rgb(211,81,21)" fg:x="16390" fg:w="72"/><text x="5.1588%" y="639.50"></text></g><g><title>_platform_memmove (65 samples, 0.02%)</title><rect x="4.9109%" y="613" width="0.0195%" height="15" fill="rgb(208,190,38)" fg:x="16397" fg:w="65"/><text x="5.1609%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (3,685 samples, 1.10%)</title><rect x="3.8462%" y="645" width="1.1037%" height="15" fill="rgb(235,213,38)" fg:x="12842" fg:w="3685"/><text x="4.0962%" y="655.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (52 samples, 0.02%)</title><rect x="4.9588%" y="613" width="0.0156%" height="15" fill="rgb(237,122,38)" fg:x="16557" fg:w="52"/><text x="5.2088%" y="623.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (126 samples, 0.04%)</title><rect x="4.9525%" y="629" width="0.0377%" height="15" fill="rgb(244,218,35)" fg:x="16536" fg:w="126"/><text x="5.2025%" y="639.50"></text></g><g><title>_platform_memset (51 samples, 0.02%)</title><rect x="5.0388%" y="581" width="0.0153%" height="15" fill="rgb(240,68,47)" fg:x="16824" fg:w="51"/><text x="5.2888%" y="591.50"></text></g><g><title>tiny_free_list_add_ptr (43 samples, 0.01%)</title><rect x="5.0840%" y="565" width="0.0129%" height="15" fill="rgb(210,16,53)" fg:x="16975" fg:w="43"/><text x="5.3340%" y="575.50"></text></g><g><title>free_tiny (299 samples, 0.09%)</title><rect x="5.0148%" y="597" width="0.0896%" height="15" fill="rgb(235,124,12)" fg:x="16744" fg:w="299"/><text x="5.2648%" y="607.50"></text></g><g><title>tiny_free_no_lock (167 samples, 0.05%)</title><rect x="5.0543%" y="581" width="0.0500%" height="15" fill="rgb(224,169,11)" fg:x="16876" fg:w="167"/><text x="5.3043%" y="591.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (378 samples, 0.11%)</title><rect x="4.9926%" y="613" width="0.1132%" height="15" fill="rgb(250,166,2)" fg:x="16670" fg:w="378"/><text x="5.2426%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (439 samples, 0.13%)</title><rect x="5.1068%" y="613" width="0.1315%" height="15" fill="rgb(242,216,29)" fg:x="17051" fg:w="439"/><text x="5.3568%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (827 samples, 0.25%)</title><rect x="4.9911%" y="629" width="0.2477%" height="15" fill="rgb(230,116,27)" fg:x="16665" fg:w="827"/><text x="5.2411%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (974 samples, 0.29%)</title><rect x="4.9498%" y="645" width="0.2917%" height="15" fill="rgb(228,99,48)" fg:x="16527" fg:w="974"/><text x="5.1998%" y="655.50"></text></g><g><title>__psynch_cvwait (1,018 samples, 0.30%)</title><rect x="5.2880%" y="597" width="0.3049%" height="15" fill="rgb(253,11,6)" fg:x="17656" fg:w="1018"/><text x="5.5380%" y="607.50"></text></g><g><title>_pthread_cond_wait (1,035 samples, 0.31%)</title><rect x="5.2859%" y="613" width="0.3100%" height="15" fill="rgb(247,143,39)" fg:x="17649" fg:w="1035"/><text x="5.5359%" y="623.50"></text></g><g><title>parking::Inner::park (1,104 samples, 0.33%)</title><rect x="5.2661%" y="629" width="0.3306%" height="15" fill="rgb(236,97,10)" fg:x="17583" fg:w="1104"/><text x="5.5161%" y="639.50"></text></g><g><title>bevy_ecs::world::World::run_schedule::_{{closure}} (5,850 samples, 1.75%)</title><rect x="3.8450%" y="677" width="1.7521%" height="15" fill="rgb(233,208,19)" fg:x="12838" fg:w="5850"/><text x="4.0950%" y="687.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (5,850 samples, 1.75%)</title><rect x="3.8450%" y="661" width="1.7521%" height="15" fill="rgb(216,164,2)" fg:x="12838" fg:w="5850"/><text x="4.0950%" y="671.50"></text></g><g><title>parking::Parker::park (1,106 samples, 0.33%)</title><rect x="5.2658%" y="645" width="0.3312%" height="15" fill="rgb(220,129,5)" fg:x="17582" fg:w="1106"/><text x="5.5158%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (5,985 samples, 1.79%)</title><rect x="3.8285%" y="693" width="1.7925%" height="15" fill="rgb(242,17,10)" fg:x="12783" fg:w="5985"/><text x="4.0785%" y="703.50">&lt;..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (42 samples, 0.01%)</title><rect x="5.6213%" y="693" width="0.0126%" height="15" fill="rgb(242,107,0)" fg:x="18769" fg:w="42"/><text x="5.8713%" y="703.50"></text></g><g><title>alloc::task::raw_waker::wake (91 samples, 0.03%)</title><rect x="5.6411%" y="597" width="0.0273%" height="15" fill="rgb(251,28,31)" fg:x="18835" fg:w="91"/><text x="5.8911%" y="607.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (86 samples, 0.03%)</title><rect x="5.6426%" y="581" width="0.0258%" height="15" fill="rgb(233,223,10)" fg:x="18840" fg:w="86"/><text x="5.8926%" y="591.50"></text></g><g><title>pthread_cond_signal (86 samples, 0.03%)</title><rect x="5.6426%" y="565" width="0.0258%" height="15" fill="rgb(215,21,27)" fg:x="18840" fg:w="86"/><text x="5.8926%" y="575.50"></text></g><g><title>__psynch_cvsignal (83 samples, 0.02%)</title><rect x="5.6435%" y="549" width="0.0249%" height="15" fill="rgb(232,23,21)" fg:x="18843" fg:w="83"/><text x="5.8935%" y="559.50"></text></g><g><title>event_listener::Event::notify_additional (104 samples, 0.03%)</title><rect x="5.6387%" y="677" width="0.0311%" height="15" fill="rgb(244,5,23)" fg:x="18827" fg:w="104"/><text x="5.8887%" y="687.50"></text></g><g><title>event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (104 samples, 0.03%)</title><rect x="5.6387%" y="661" width="0.0311%" height="15" fill="rgb(226,81,46)" fg:x="18827" fg:w="104"/><text x="5.8887%" y="671.50"></text></g><g><title>event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify::_{{closure}} (102 samples, 0.03%)</title><rect x="5.6393%" y="645" width="0.0305%" height="15" fill="rgb(247,70,30)" fg:x="18829" fg:w="102"/><text x="5.8893%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake (101 samples, 0.03%)</title><rect x="5.6396%" y="629" width="0.0302%" height="15" fill="rgb(212,68,19)" fg:x="18830" fg:w="101"/><text x="5.8896%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (100 samples, 0.03%)</title><rect x="5.6399%" y="613" width="0.0299%" height="15" fill="rgb(240,187,13)" fg:x="18831" fg:w="100"/><text x="5.8899%" y="623.50"></text></g><g><title>async_channel::Send&lt;T&gt;::wait (117 samples, 0.04%)</title><rect x="5.6357%" y="693" width="0.0350%" height="15" fill="rgb(223,113,26)" fg:x="18817" fg:w="117"/><text x="5.8857%" y="703.50"></text></g><g><title>alloc::task::raw_waker::wake (50 samples, 0.01%)</title><rect x="5.6791%" y="661" width="0.0150%" height="15" fill="rgb(206,192,2)" fg:x="18962" fg:w="50"/><text x="5.9291%" y="671.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (50 samples, 0.01%)</title><rect x="5.6791%" y="645" width="0.0150%" height="15" fill="rgb(241,108,4)" fg:x="18962" fg:w="50"/><text x="5.9291%" y="655.50"></text></g><g><title>pthread_cond_signal (50 samples, 0.01%)</title><rect x="5.6791%" y="629" width="0.0150%" height="15" fill="rgb(247,173,49)" fg:x="18962" fg:w="50"/><text x="5.9291%" y="639.50"></text></g><g><title>__psynch_cvsignal (50 samples, 0.01%)</title><rect x="5.6791%" y="613" width="0.0150%" height="15" fill="rgb(224,114,35)" fg:x="18962" fg:w="50"/><text x="5.9291%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (62 samples, 0.02%)</title><rect x="5.6791%" y="677" width="0.0186%" height="15" fill="rgb(245,159,27)" fg:x="18962" fg:w="62"/><text x="5.9291%" y="687.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (94 samples, 0.03%)</title><rect x="5.6722%" y="693" width="0.0282%" height="15" fill="rgb(245,172,44)" fg:x="18939" fg:w="94"/><text x="5.9222%" y="703.50"></text></g><g><title>async_executor::State::run::_{{closure}} (38 samples, 0.01%)</title><rect x="5.7004%" y="693" width="0.0114%" height="15" fill="rgb(236,23,11)" fg:x="19033" fg:w="38"/><text x="5.9504%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (84 samples, 0.03%)</title><rect x="5.7144%" y="677" width="0.0252%" height="15" fill="rgb(205,117,38)" fg:x="19080" fg:w="84"/><text x="5.9644%" y="687.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (118 samples, 0.04%)</title><rect x="5.7117%" y="693" width="0.0353%" height="15" fill="rgb(237,72,25)" fg:x="19071" fg:w="118"/><text x="5.9617%" y="703.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (46 samples, 0.01%)</title><rect x="5.7480%" y="645" width="0.0138%" height="15" fill="rgb(244,70,9)" fg:x="19192" fg:w="46"/><text x="5.9980%" y="655.50"></text></g><g><title>pthread_cond_signal (46 samples, 0.01%)</title><rect x="5.7480%" y="629" width="0.0138%" height="15" fill="rgb(217,125,39)" fg:x="19192" fg:w="46"/><text x="5.9980%" y="639.50"></text></g><g><title>__psynch_cvsignal (45 samples, 0.01%)</title><rect x="5.7483%" y="613" width="0.0135%" height="15" fill="rgb(235,36,10)" fg:x="19193" fg:w="45"/><text x="5.9983%" y="623.50"></text></g><g><title>alloc::task::raw_waker::wake (50 samples, 0.01%)</title><rect x="5.7471%" y="661" width="0.0150%" height="15" fill="rgb(251,123,47)" fg:x="19189" fg:w="50"/><text x="5.9971%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (54 samples, 0.02%)</title><rect x="5.7471%" y="677" width="0.0162%" height="15" fill="rgb(221,13,13)" fg:x="19189" fg:w="54"/><text x="5.9971%" y="687.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (55 samples, 0.02%)</title><rect x="5.7471%" y="693" width="0.0165%" height="15" fill="rgb(238,131,9)" fg:x="19189" fg:w="55"/><text x="5.9971%" y="703.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}} (53 samples, 0.02%)</title><rect x="5.7755%" y="693" width="0.0159%" height="15" fill="rgb(211,50,8)" fg:x="19284" fg:w="53"/><text x="6.0255%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::run&lt;!,bevy_tasks::task_pool::TaskPool::execute_global_scope&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt;,bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_render::pipelined_rendering::PipelinedRenderingPlugin as bevy_app::plugin::Plugin&gt;::cleanup::{{closure}}::{{closure}},core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt;&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (53 samples, 0.02%)</title><rect x="5.7755%" y="677" width="0.0159%" height="15" fill="rgb(245,182,24)" fg:x="19284" fg:w="53"/><text x="6.0255%" y="687.50"></text></g><g><title>__psynch_cvwait (125 samples, 0.04%)</title><rect x="5.8055%" y="645" width="0.0374%" height="15" fill="rgb(242,14,37)" fg:x="19384" fg:w="125"/><text x="6.0555%" y="655.50"></text></g><g><title>parking::Parker::park (132 samples, 0.04%)</title><rect x="5.8040%" y="693" width="0.0395%" height="15" fill="rgb(246,228,12)" fg:x="19379" fg:w="132"/><text x="6.0540%" y="703.50"></text></g><g><title>parking::Inner::park (132 samples, 0.04%)</title><rect x="5.8040%" y="677" width="0.0395%" height="15" fill="rgb(213,55,15)" fg:x="19379" fg:w="132"/><text x="6.0540%" y="687.50"></text></g><g><title>_pthread_cond_wait (129 samples, 0.04%)</title><rect x="5.8049%" y="661" width="0.0386%" height="15" fill="rgb(209,9,3)" fg:x="19382" fg:w="129"/><text x="6.0549%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (6,748 samples, 2.02%)</title><rect x="3.8285%" y="709" width="2.0210%" height="15" fill="rgb(230,59,30)" fg:x="12783" fg:w="6748"/><text x="4.0785%" y="719.50">&lt;..</text></g><g><title>&lt;bevy_ecs::system::combinator::CombinatorSystem&lt;Func,A,B&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (46 samples, 0.01%)</title><rect x="5.9313%" y="517" width="0.0138%" height="15" fill="rgb(209,121,21)" fg:x="19804" fg:w="46"/><text x="6.1813%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (37 samples, 0.01%)</title><rect x="5.9507%" y="517" width="0.0111%" height="15" fill="rgb(220,109,13)" fg:x="19869" fg:w="37"/><text x="6.2007%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (70 samples, 0.02%)</title><rect x="5.9618%" y="517" width="0.0210%" height="15" fill="rgb(232,18,1)" fg:x="19906" fg:w="70"/><text x="6.2118%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (143 samples, 0.04%)</title><rect x="5.9828%" y="517" width="0.0428%" height="15" fill="rgb(215,41,42)" fg:x="19976" fg:w="143"/><text x="6.2328%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (72 samples, 0.02%)</title><rect x="6.0268%" y="517" width="0.0216%" height="15" fill="rgb(224,123,36)" fg:x="20123" fg:w="72"/><text x="6.2768%" y="527.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_resources_compatible (45 samples, 0.01%)</title><rect x="6.0568%" y="517" width="0.0135%" height="15" fill="rgb(240,125,3)" fg:x="20223" fg:w="45"/><text x="6.3068%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44 samples, 0.01%)</title><rect x="6.0762%" y="517" width="0.0132%" height="15" fill="rgb(205,98,50)" fg:x="20288" fg:w="44"/><text x="6.3262%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (591 samples, 0.18%)</title><rect x="5.9193%" y="533" width="0.1770%" height="15" fill="rgb(205,185,37)" fg:x="19764" fg:w="591"/><text x="6.1693%" y="543.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (70 samples, 0.02%)</title><rect x="6.1131%" y="517" width="0.0210%" height="15" fill="rgb(238,207,15)" fg:x="20411" fg:w="70"/><text x="6.3631%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::readonly_run_unsafe (61 samples, 0.02%)</title><rect x="6.1409%" y="501" width="0.0183%" height="15" fill="rgb(213,199,42)" fg:x="20504" fg:w="61"/><text x="6.3909%" y="511.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::evaluate_and_fold_conditions::_{{closure}} (81 samples, 0.02%)</title><rect x="6.1388%" y="517" width="0.0243%" height="15" fill="rgb(235,201,11)" fg:x="20497" fg:w="81"/><text x="6.3888%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (39 samples, 0.01%)</title><rect x="6.1652%" y="517" width="0.0117%" height="15" fill="rgb(207,46,11)" fg:x="20585" fg:w="39"/><text x="6.4152%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::should_run (229 samples, 0.07%)</title><rect x="6.1095%" y="533" width="0.0686%" height="15" fill="rgb(241,35,35)" fg:x="20399" fg:w="229"/><text x="6.3595%" y="543.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (99 samples, 0.03%)</title><rect x="6.1796%" y="533" width="0.0297%" height="15" fill="rgb(243,32,47)" fg:x="20633" fg:w="99"/><text x="6.4296%" y="543.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (41 samples, 0.01%)</title><rect x="6.2092%" y="533" width="0.0123%" height="15" fill="rgb(247,202,23)" fg:x="20732" fg:w="41"/><text x="6.4592%" y="543.50"></text></g><g><title>__psynch_cvsignal (298 samples, 0.09%)</title><rect x="6.2362%" y="437" width="0.0893%" height="15" fill="rgb(219,102,11)" fg:x="20822" fg:w="298"/><text x="6.4862%" y="447.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (306 samples, 0.09%)</title><rect x="6.2341%" y="469" width="0.0916%" height="15" fill="rgb(243,110,44)" fg:x="20815" fg:w="306"/><text x="6.4841%" y="479.50"></text></g><g><title>pthread_cond_signal (306 samples, 0.09%)</title><rect x="6.2341%" y="453" width="0.0916%" height="15" fill="rgb(222,74,54)" fg:x="20815" fg:w="306"/><text x="6.4841%" y="463.50"></text></g><g><title>alloc::task::raw_waker::wake (310 samples, 0.09%)</title><rect x="6.2335%" y="485" width="0.0928%" height="15" fill="rgb(216,99,12)" fg:x="20813" fg:w="310"/><text x="6.4835%" y="495.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (391 samples, 0.12%)</title><rect x="6.2332%" y="501" width="0.1171%" height="15" fill="rgb(226,22,26)" fg:x="20812" fg:w="391"/><text x="6.4832%" y="511.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (710 samples, 0.21%)</title><rect x="6.2326%" y="517" width="0.2126%" height="15" fill="rgb(217,163,10)" fg:x="20810" fg:w="710"/><text x="6.4826%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (295 samples, 0.09%)</title><rect x="6.3569%" y="501" width="0.0884%" height="15" fill="rgb(213,25,53)" fg:x="21225" fg:w="295"/><text x="6.6069%" y="511.50"></text></g><g><title>szone_malloc_should_clear (201 samples, 0.06%)</title><rect x="6.4596%" y="501" width="0.0602%" height="15" fill="rgb(252,105,26)" fg:x="21568" fg:w="201"/><text x="6.7096%" y="511.50"></text></g><g><title>tiny_malloc_should_clear (182 samples, 0.05%)</title><rect x="6.4653%" y="485" width="0.0545%" height="15" fill="rgb(220,39,43)" fg:x="21587" fg:w="182"/><text x="6.7153%" y="495.50"></text></g><g><title>tiny_malloc_from_free_list (137 samples, 0.04%)</title><rect x="6.4788%" y="469" width="0.0410%" height="15" fill="rgb(229,68,48)" fg:x="21632" fg:w="137"/><text x="6.7288%" y="479.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (222 samples, 0.07%)</title><rect x="6.4536%" y="517" width="0.0665%" height="15" fill="rgb(252,8,32)" fg:x="21548" fg:w="222"/><text x="6.7036%" y="527.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (962 samples, 0.29%)</title><rect x="6.5210%" y="501" width="0.2881%" height="15" fill="rgb(223,20,43)" fg:x="21773" fg:w="962"/><text x="6.7710%" y="511.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (952 samples, 0.29%)</title><rect x="6.5240%" y="485" width="0.2851%" height="15" fill="rgb(229,81,49)" fg:x="21783" fg:w="952"/><text x="6.7740%" y="495.50"></text></g><g><title>__psynch_mutexwait (941 samples, 0.28%)</title><rect x="6.5273%" y="469" width="0.2818%" height="15" fill="rgb(236,28,36)" fg:x="21794" fg:w="941"/><text x="6.7773%" y="479.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (1,004 samples, 0.30%)</title><rect x="6.5201%" y="517" width="0.3007%" height="15" fill="rgb(249,185,26)" fg:x="21770" fg:w="1004"/><text x="6.7701%" y="527.50"></text></g><g><title>pthread_mutex_lock (39 samples, 0.01%)</title><rect x="6.8091%" y="501" width="0.0117%" height="15" fill="rgb(249,174,33)" fg:x="22735" fg:w="39"/><text x="7.0591%" y="511.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1,110 samples, 0.33%)</title><rect x="6.8211%" y="501" width="0.3324%" height="15" fill="rgb(233,201,37)" fg:x="22775" fg:w="1110"/><text x="7.0711%" y="511.50"></text></g><g><title>_pthread_mutex_firstfit_wake (1,096 samples, 0.33%)</title><rect x="6.8253%" y="485" width="0.3283%" height="15" fill="rgb(221,78,26)" fg:x="22789" fg:w="1096"/><text x="7.0753%" y="495.50"></text></g><g><title>__psynch_mutexdrop (1,095 samples, 0.33%)</title><rect x="6.8256%" y="469" width="0.3280%" height="15" fill="rgb(250,127,30)" fg:x="22790" fg:w="1095"/><text x="7.0756%" y="479.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (1,139 samples, 0.34%)</title><rect x="6.8208%" y="517" width="0.3411%" height="15" fill="rgb(230,49,44)" fg:x="22774" fg:w="1139"/><text x="7.0708%" y="527.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (3,133 samples, 0.94%)</title><rect x="6.2239%" y="533" width="0.9383%" height="15" fill="rgb(229,67,23)" fg:x="20781" fg:w="3133"/><text x="6.4739%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (102 samples, 0.03%)</title><rect x="7.1829%" y="533" width="0.0305%" height="15" fill="rgb(249,83,47)" fg:x="23983" fg:w="102"/><text x="7.4329%" y="543.50"></text></g><g><title>_platform_memmove (90 samples, 0.03%)</title><rect x="7.1865%" y="517" width="0.0270%" height="15" fill="rgb(215,43,3)" fg:x="23995" fg:w="90"/><text x="7.4365%" y="527.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (4,543 samples, 1.36%)</title><rect x="5.8887%" y="549" width="1.3606%" height="15" fill="rgb(238,154,13)" fg:x="19662" fg:w="4543"/><text x="6.1387%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (38 samples, 0.01%)</title><rect x="7.2539%" y="517" width="0.0114%" height="15" fill="rgb(219,56,2)" fg:x="24220" fg:w="38"/><text x="7.5039%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_deferred::_{{closure}} (66 samples, 0.02%)</title><rect x="7.2521%" y="533" width="0.0198%" height="15" fill="rgb(233,0,4)" fg:x="24214" fg:w="66"/><text x="7.5021%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (86 samples, 0.03%)</title><rect x="7.2494%" y="549" width="0.0258%" height="15" fill="rgb(235,30,7)" fg:x="24205" fg:w="86"/><text x="7.4994%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (42 samples, 0.01%)</title><rect x="7.3051%" y="341" width="0.0126%" height="15" fill="rgb(250,79,13)" fg:x="24391" fg:w="42"/><text x="7.5551%" y="351.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (44 samples, 0.01%)</title><rect x="7.3332%" y="325" width="0.0132%" height="15" fill="rgb(211,146,34)" fg:x="24485" fg:w="44"/><text x="7.5832%" y="335.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (46 samples, 0.01%)</title><rect x="7.3614%" y="309" width="0.0138%" height="15" fill="rgb(228,22,38)" fg:x="24579" fg:w="46"/><text x="7.6114%" y="319.50"></text></g><g><title>_pthread_mutex_firstfit_wake (45 samples, 0.01%)</title><rect x="7.3617%" y="293" width="0.0135%" height="15" fill="rgb(235,168,5)" fg:x="24580" fg:w="45"/><text x="7.6117%" y="303.50"></text></g><g><title>__psynch_mutexdrop (45 samples, 0.01%)</title><rect x="7.3617%" y="277" width="0.0135%" height="15" fill="rgb(221,155,16)" fg:x="24580" fg:w="45"/><text x="7.6117%" y="287.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (143 samples, 0.04%)</title><rect x="7.3329%" y="341" width="0.0428%" height="15" fill="rgb(215,215,53)" fg:x="24484" fg:w="143"/><text x="7.5829%" y="351.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (49 samples, 0.01%)</title><rect x="7.3611%" y="325" width="0.0147%" height="15" fill="rgb(223,4,10)" fg:x="24578" fg:w="49"/><text x="7.6111%" y="335.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (271 samples, 0.08%)</title><rect x="7.3030%" y="357" width="0.0812%" height="15" fill="rgb(234,103,6)" fg:x="24384" fg:w="271"/><text x="7.5530%" y="367.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (57 samples, 0.02%)</title><rect x="7.3889%" y="341" width="0.0171%" height="15" fill="rgb(227,97,0)" fg:x="24671" fg:w="57"/><text x="7.6389%" y="351.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (55 samples, 0.02%)</title><rect x="7.4069%" y="325" width="0.0165%" height="15" fill="rgb(234,150,53)" fg:x="24731" fg:w="55"/><text x="7.6569%" y="335.50"></text></g><g><title>free_tiny (41 samples, 0.01%)</title><rect x="7.4111%" y="309" width="0.0123%" height="15" fill="rgb(228,201,54)" fg:x="24745" fg:w="41"/><text x="7.6611%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (61 samples, 0.02%)</title><rect x="7.4234%" y="325" width="0.0183%" height="15" fill="rgb(222,22,37)" fg:x="24786" fg:w="61"/><text x="7.6734%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (121 samples, 0.04%)</title><rect x="7.4063%" y="341" width="0.0362%" height="15" fill="rgb(237,53,32)" fg:x="24729" fg:w="121"/><text x="7.6563%" y="351.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (185 samples, 0.06%)</title><rect x="7.3874%" y="357" width="0.0554%" height="15" fill="rgb(233,25,53)" fg:x="24666" fg:w="185"/><text x="7.6374%" y="367.50"></text></g><g><title>&lt;avian2d::dynamics::solver::SolverPlugin as bevy_app::plugin::Plugin&gt;::build::_{{closure}} (129 samples, 0.04%)</title><rect x="7.4725%" y="117" width="0.0386%" height="15" fill="rgb(210,40,34)" fg:x="24950" fg:w="129"/><text x="7.7225%" y="127.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (45 samples, 0.01%)</title><rect x="7.5375%" y="85" width="0.0135%" height="15" fill="rgb(241,220,44)" fg:x="25167" fg:w="45"/><text x="7.7875%" y="95.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (93 samples, 0.03%)</title><rect x="7.5315%" y="117" width="0.0279%" height="15" fill="rgb(235,28,35)" fg:x="25147" fg:w="93"/><text x="7.7815%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (73 samples, 0.02%)</title><rect x="7.5375%" y="101" width="0.0219%" height="15" fill="rgb(210,56,17)" fg:x="25167" fg:w="73"/><text x="7.7875%" y="111.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (39 samples, 0.01%)</title><rect x="7.5794%" y="101" width="0.0117%" height="15" fill="rgb(224,130,29)" fg:x="25307" fg:w="39"/><text x="7.8294%" y="111.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (94 samples, 0.03%)</title><rect x="7.5734%" y="117" width="0.0282%" height="15" fill="rgb(235,212,8)" fg:x="25287" fg:w="94"/><text x="7.8234%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.01%)</title><rect x="7.6067%" y="101" width="0.0108%" height="15" fill="rgb(223,33,50)" fg:x="25398" fg:w="36"/><text x="7.8567%" y="111.50"></text></g><g><title>async_executor::State::run::_{{closure}} (88 samples, 0.03%)</title><rect x="7.6016%" y="117" width="0.0264%" height="15" fill="rgb(219,149,13)" fg:x="25381" fg:w="88"/><text x="7.8516%" y="127.50"></text></g><g><title>&lt;avian2d::dynamics::rigid_body::RigidBody as core::cmp::PartialEq&gt;::eq (35 samples, 0.01%)</title><rect x="7.6729%" y="37" width="0.0105%" height="15" fill="rgb(250,156,29)" fg:x="25619" fg:w="35"/><text x="7.9229%" y="47.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::cmp::PartialEq&gt;::eq (66 samples, 0.02%)</title><rect x="7.6875%" y="37" width="0.0198%" height="15" fill="rgb(216,193,19)" fg:x="25668" fg:w="66"/><text x="7.9375%" y="47.50"></text></g><g><title>avian2d::dynamics::integrator::integrate_velocities::_{{closure}} (39 samples, 0.01%)</title><rect x="7.7109%" y="37" width="0.0117%" height="15" fill="rgb(216,135,14)" fg:x="25746" fg:w="39"/><text x="7.9609%" y="47.50"></text></g><g><title>bevy_ecs::query::par_iter::QueryParIter&lt;D,F&gt;::for_each_init::_{{closure}} (40 samples, 0.01%)</title><rect x="7.7322%" y="37" width="0.0120%" height="15" fill="rgb(241,47,5)" fg:x="25817" fg:w="40"/><text x="7.9822%" y="47.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (240 samples, 0.07%)</title><rect x="7.6729%" y="53" width="0.0719%" height="15" fill="rgb(233,42,35)" fg:x="25619" fg:w="240"/><text x="7.9229%" y="63.50"></text></g><g><title>bevy_ecs::query::par_iter::QueryParIter&lt;D,F&gt;::for_each::_{{closure}} (66 samples, 0.02%)</title><rect x="7.7447%" y="53" width="0.0198%" height="15" fill="rgb(231,13,6)" fg:x="25859" fg:w="66"/><text x="7.9947%" y="63.50"></text></g><g><title>bevy_ecs::query::par_iter::QueryParIter&lt;D,F&gt;::for_each_init::_{{closure}} (83 samples, 0.02%)</title><rect x="7.7645%" y="53" width="0.0249%" height="15" fill="rgb(207,181,40)" fg:x="25925" fg:w="83"/><text x="8.0145%" y="63.50"></text></g><g><title>__sincosf_stret (54 samples, 0.02%)</title><rect x="7.7972%" y="37" width="0.0162%" height="15" fill="rgb(254,173,49)" fg:x="26034" fg:w="54"/><text x="8.0472%" y="47.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (562 samples, 0.17%)</title><rect x="7.6453%" y="69" width="0.1683%" height="15" fill="rgb(221,1,38)" fg:x="25527" fg:w="562"/><text x="7.8953%" y="79.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::sin (81 samples, 0.02%)</title><rect x="7.7894%" y="53" width="0.0243%" height="15" fill="rgb(206,124,46)" fg:x="26008" fg:w="81"/><text x="8.0394%" y="63.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}}::_{{closure}}::_{{closure}} (636 samples, 0.19%)</title><rect x="7.6378%" y="85" width="0.1905%" height="15" fill="rgb(249,21,11)" fg:x="25502" fg:w="636"/><text x="7.8878%" y="95.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (675 samples, 0.20%)</title><rect x="7.6294%" y="101" width="0.2022%" height="15" fill="rgb(222,201,40)" fg:x="25474" fg:w="675"/><text x="7.8794%" y="111.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (734 samples, 0.22%)</title><rect x="7.6282%" y="117" width="0.2198%" height="15" fill="rgb(235,61,29)" fg:x="25470" fg:w="734"/><text x="7.8782%" y="127.50"></text></g><g><title>__psynch_cvsignal (130 samples, 0.04%)</title><rect x="7.8505%" y="37" width="0.0389%" height="15" fill="rgb(219,207,3)" fg:x="26212" fg:w="130"/><text x="8.1005%" y="47.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (138 samples, 0.04%)</title><rect x="7.8487%" y="69" width="0.0413%" height="15" fill="rgb(222,56,46)" fg:x="26206" fg:w="138"/><text x="8.0987%" y="79.50"></text></g><g><title>pthread_cond_signal (138 samples, 0.04%)</title><rect x="7.8487%" y="53" width="0.0413%" height="15" fill="rgb(239,76,54)" fg:x="26206" fg:w="138"/><text x="8.0987%" y="63.50"></text></g><g><title>alloc::task::raw_waker::wake (140 samples, 0.04%)</title><rect x="7.8484%" y="85" width="0.0419%" height="15" fill="rgb(231,124,27)" fg:x="26205" fg:w="140"/><text x="8.0984%" y="95.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (149 samples, 0.04%)</title><rect x="7.8484%" y="101" width="0.0446%" height="15" fill="rgb(249,195,6)" fg:x="26205" fg:w="149"/><text x="8.0984%" y="111.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (175 samples, 0.05%)</title><rect x="7.8481%" y="117" width="0.0524%" height="15" fill="rgb(237,174,47)" fg:x="26204" fg:w="175"/><text x="8.0981%" y="127.50"></text></g><g><title>&lt;avian2d::dynamics::rigid_body::RigidBody as core::cmp::PartialEq&gt;::eq (166 samples, 0.05%)</title><rect x="7.9328%" y="101" width="0.0497%" height="15" fill="rgb(206,201,31)" fg:x="26487" fg:w="166"/><text x="8.1828%" y="111.50"></text></g><g><title>&lt;bevy_ecs::change_detection::Mut&lt;T&gt; as core::ops::deref::Deref&gt;::deref (584 samples, 0.17%)</title><rect x="7.9834%" y="101" width="0.1749%" height="15" fill="rgb(231,57,52)" fg:x="26656" fg:w="584"/><text x="8.2334%" y="111.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (48 samples, 0.01%)</title><rect x="8.1601%" y="101" width="0.0144%" height="15" fill="rgb(248,177,22)" fg:x="27246" fg:w="48"/><text x="8.4101%" y="111.50"></text></g><g><title>_platform_memmove (911 samples, 0.27%)</title><rect x="8.1877%" y="101" width="0.2728%" height="15" fill="rgb(215,211,37)" fg:x="27338" fg:w="911"/><text x="8.4377%" y="111.50"></text></g><g><title>avian2d::dynamics::rigid_body::world_query::RigidBodyQueryItem::effective_inverse_mass (38 samples, 0.01%)</title><rect x="8.4749%" y="101" width="0.0114%" height="15" fill="rgb(241,128,51)" fg:x="28297" fg:w="38"/><text x="8.7249%" y="111.50"></text></g><g><title>avian2d::dynamics::rigid_body::world_query::RigidBodyQueryItem::velocity_at_point (55 samples, 0.02%)</title><rect x="8.4863%" y="101" width="0.0165%" height="15" fill="rgb(227,165,31)" fg:x="28335" fg:w="55"/><text x="8.7363%" y="111.50"></text></g><g><title>avian2d::dynamics::solver::contact::ContactConstraint::solve (385 samples, 0.12%)</title><rect x="8.5028%" y="101" width="0.1153%" height="15" fill="rgb(228,167,24)" fg:x="28390" fg:w="385"/><text x="8.7528%" y="111.50"></text></g><g><title>avian2d::dynamics::solver::contact::normal_part::ContactNormalPart::solve_impulse (46 samples, 0.01%)</title><rect x="8.6181%" y="101" width="0.0138%" height="15" fill="rgb(228,143,12)" fg:x="28775" fg:w="46"/><text x="8.8681%" y="111.50"></text></g><g><title>avian2d::dynamics::solver::solve_contacts (2,546 samples, 0.76%)</title><rect x="7.9101%" y="117" width="0.7625%" height="15" fill="rgb(249,149,8)" fg:x="26411" fg:w="2546"/><text x="8.1601%" y="127.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (75 samples, 0.02%)</title><rect x="8.6501%" y="101" width="0.0225%" height="15" fill="rgb(243,35,44)" fg:x="28882" fg:w="75"/><text x="8.9001%" y="111.50"></text></g><g><title>&lt;bevy_ecs::change_detection::Mut&lt;T&gt; as core::ops::deref::Deref&gt;::deref (312 samples, 0.09%)</title><rect x="8.7211%" y="101" width="0.0934%" height="15" fill="rgb(246,89,9)" fg:x="29119" fg:w="312"/><text x="8.9711%" y="111.50"></text></g><g><title>_platform_memmove (483 samples, 0.14%)</title><rect x="8.8196%" y="101" width="0.1447%" height="15" fill="rgb(233,213,13)" fg:x="29448" fg:w="483"/><text x="9.0696%" y="111.50"></text></g><g><title>avian2d::dynamics::solver::warm_start (1,086 samples, 0.33%)</title><rect x="8.6726%" y="117" width="0.3253%" height="15" fill="rgb(233,141,41)" fg:x="28957" fg:w="1086"/><text x="8.9226%" y="127.50"></text></g><g><title>avian2d::dynamics::solver::warm_start (50 samples, 0.01%)</title><rect x="8.9829%" y="101" width="0.0150%" height="15" fill="rgb(239,167,4)" fg:x="29993" fg:w="50"/><text x="9.2329%" y="111.50"></text></g><g><title>avian2d::dynamics::solver::contact::ContactConstraint::warm_start (35 samples, 0.01%)</title><rect x="8.9874%" y="85" width="0.0105%" height="15" fill="rgb(209,217,16)" fg:x="30008" fg:w="35"/><text x="9.2374%" y="95.50"></text></g><g><title>avian2d::dynamics::solver::xpbd::project_angular_velocity (42 samples, 0.01%)</title><rect x="8.9978%" y="117" width="0.0126%" height="15" fill="rgb(219,88,35)" fg:x="30043" fg:w="42"/><text x="9.2478%" y="127.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::next (36 samples, 0.01%)</title><rect x="9.0164%" y="117" width="0.0108%" height="15" fill="rgb(220,193,23)" fg:x="30105" fg:w="36"/><text x="9.2664%" y="127.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (169 samples, 0.05%)</title><rect x="9.0452%" y="85" width="0.0506%" height="15" fill="rgb(230,90,52)" fg:x="30201" fg:w="169"/><text x="9.2952%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (267 samples, 0.08%)</title><rect x="9.0958%" y="85" width="0.0800%" height="15" fill="rgb(252,106,19)" fg:x="30370" fg:w="267"/><text x="9.3458%" y="95.50"></text></g><g><title>core::bool::_&lt;impl bool&gt;::then (570 samples, 0.17%)</title><rect x="9.1757%" y="85" width="0.1707%" height="15" fill="rgb(206,74,20)" fg:x="30637" fg:w="570"/><text x="9.4257%" y="95.50"></text></g><g><title>0x11bc89d9f (2,128 samples, 0.64%)</title><rect x="9.0446%" y="101" width="0.6373%" height="15" fill="rgb(230,138,44)" fg:x="30199" fg:w="2128"/><text x="9.2946%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (1,119 samples, 0.34%)</title><rect x="9.3468%" y="85" width="0.3351%" height="15" fill="rgb(235,182,43)" fg:x="31208" fg:w="1119"/><text x="9.5968%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_impl (2,551 samples, 0.76%)</title><rect x="9.6828%" y="85" width="0.7640%" height="15" fill="rgb(242,16,51)" fg:x="32330" fg:w="2551"/><text x="9.9328%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_mut_inner (36 samples, 0.01%)</title><rect x="10.4468%" y="85" width="0.0108%" height="15" fill="rgb(248,9,4)" fg:x="34881" fg:w="36"/><text x="10.6968%" y="95.50"></text></g><g><title>0x11df430bf (2,653 samples, 0.79%)</title><rect x="9.6828%" y="101" width="0.7946%" height="15" fill="rgb(210,31,22)" fg:x="32330" fg:w="2653"/><text x="9.9328%" y="111.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (66 samples, 0.02%)</title><rect x="10.4576%" y="85" width="0.0198%" height="15" fill="rgb(239,54,39)" fg:x="34917" fg:w="66"/><text x="10.7076%" y="95.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (139 samples, 0.04%)</title><rect x="10.4783%" y="85" width="0.0416%" height="15" fill="rgb(230,99,41)" fg:x="34986" fg:w="139"/><text x="10.7283%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (174 samples, 0.05%)</title><rect x="10.5199%" y="85" width="0.0521%" height="15" fill="rgb(253,106,12)" fg:x="35125" fg:w="174"/><text x="10.7699%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (54 samples, 0.02%)</title><rect x="10.5720%" y="85" width="0.0162%" height="15" fill="rgb(213,46,41)" fg:x="35299" fg:w="54"/><text x="10.8220%" y="95.50"></text></g><g><title>avian2d::dynamics::rigid_body::world_query::_::_&lt;impl bevy_ecs::query::world_query::WorldQuery for avian2d::dynamics::rigid_body::world_query::RigidBodyQuery&gt;::set_archetype (40 samples, 0.01%)</title><rect x="10.5897%" y="85" width="0.0120%" height="15" fill="rgb(215,133,35)" fg:x="35358" fg:w="40"/><text x="10.8397%" y="95.50"></text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;T&gt;::matches_component_set (184 samples, 0.06%)</title><rect x="10.6023%" y="85" width="0.0551%" height="15" fill="rgb(213,28,5)" fg:x="35400" fg:w="184"/><text x="10.8523%" y="95.50"></text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;mut T&gt;::matches_component_set (66 samples, 0.02%)</title><rect x="10.6574%" y="85" width="0.0198%" height="15" fill="rgb(215,77,49)" fg:x="35584" fg:w="66"/><text x="10.9074%" y="95.50"></text></g><g><title>bevy_ecs::storage::sparse_set::ImmutableSparseSet&lt;I,V&gt;::get (55 samples, 0.02%)</title><rect x="10.6789%" y="85" width="0.0165%" height="15" fill="rgb(248,100,22)" fg:x="35656" fg:w="55"/><text x="10.9289%" y="95.50"></text></g><g><title>bevy_ecs::storage::thin_array_ptr::ThinArrayPtr&lt;T&gt;::as_slice (37 samples, 0.01%)</title><rect x="10.6954%" y="85" width="0.0111%" height="15" fill="rgb(208,67,9)" fg:x="35711" fg:w="37"/><text x="10.9454%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (302 samples, 0.09%)</title><rect x="10.7065%" y="85" width="0.0904%" height="15" fill="rgb(219,133,21)" fg:x="35748" fg:w="302"/><text x="10.9565%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (77 samples, 0.02%)</title><rect x="10.7969%" y="85" width="0.0231%" height="15" fill="rgb(246,46,29)" fg:x="36050" fg:w="77"/><text x="11.0469%" y="95.50"></text></g><g><title>0x11df68f4f (1,184 samples, 0.35%)</title><rect x="10.4774%" y="101" width="0.3546%" height="15" fill="rgb(246,185,52)" fg:x="34983" fg:w="1184"/><text x="10.7274%" y="111.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (37 samples, 0.01%)</title><rect x="10.8209%" y="85" width="0.0111%" height="15" fill="rgb(252,136,11)" fg:x="36130" fg:w="37"/><text x="11.0709%" y="95.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::Has&lt;T&gt; as bevy_ecs::query::world_query::WorldQuery&gt;::set_archetype (87 samples, 0.03%)</title><rect x="10.8398%" y="85" width="0.0261%" height="15" fill="rgb(219,138,53)" fg:x="36193" fg:w="87"/><text x="11.0898%" y="95.50"></text></g><g><title>0x14d9247bf (253 samples, 0.08%)</title><rect x="10.8398%" y="101" width="0.0758%" height="15" fill="rgb(211,51,23)" fg:x="36193" fg:w="253"/><text x="11.0898%" y="111.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (144 samples, 0.04%)</title><rect x="10.8724%" y="85" width="0.0431%" height="15" fill="rgb(247,221,28)" fg:x="36302" fg:w="144"/><text x="11.1224%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (94 samples, 0.03%)</title><rect x="10.9203%" y="85" width="0.0282%" height="15" fill="rgb(251,222,45)" fg:x="36462" fg:w="94"/><text x="11.1703%" y="95.50"></text></g><g><title>0x14db91dff (239 samples, 0.07%)</title><rect x="10.9155%" y="101" width="0.0716%" height="15" fill="rgb(217,162,53)" fg:x="36446" fg:w="239"/><text x="11.1655%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (108 samples, 0.03%)</title><rect x="10.9548%" y="85" width="0.0323%" height="15" fill="rgb(229,93,14)" fg:x="36577" fg:w="108"/><text x="11.2048%" y="95.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::Has&lt;T&gt; as bevy_ecs::query::world_query::WorldQuery&gt;::set_archetype (71 samples, 0.02%)</title><rect x="10.9871%" y="85" width="0.0213%" height="15" fill="rgb(209,67,49)" fg:x="36685" fg:w="71"/><text x="11.2371%" y="95.50"></text></g><g><title>0x14e26617f (781 samples, 0.23%)</title><rect x="10.9871%" y="101" width="0.2339%" height="15" fill="rgb(213,87,29)" fg:x="36685" fg:w="781"/><text x="11.2371%" y="111.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (710 samples, 0.21%)</title><rect x="11.0084%" y="85" width="0.2126%" height="15" fill="rgb(205,151,52)" fg:x="36756" fg:w="710"/><text x="11.2584%" y="95.50"></text></g><g><title>0x14e4279ff (36 samples, 0.01%)</title><rect x="11.2228%" y="101" width="0.0108%" height="15" fill="rgb(253,215,39)" fg:x="37472" fg:w="36"/><text x="11.4728%" y="111.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (49 samples, 0.01%)</title><rect x="11.2360%" y="85" width="0.0147%" height="15" fill="rgb(221,220,41)" fg:x="37516" fg:w="49"/><text x="11.4860%" y="95.50"></text></g><g><title>0x14e5467ff (137 samples, 0.04%)</title><rect x="11.2336%" y="101" width="0.0410%" height="15" fill="rgb(218,133,21)" fg:x="37508" fg:w="137"/><text x="11.4836%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (70 samples, 0.02%)</title><rect x="11.2537%" y="85" width="0.0210%" height="15" fill="rgb(221,193,43)" fg:x="37575" fg:w="70"/><text x="11.5037%" y="95.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::Has&lt;T&gt; as bevy_ecs::query::world_query::WorldQuery&gt;::set_archetype (50 samples, 0.01%)</title><rect x="11.2746%" y="85" width="0.0150%" height="15" fill="rgb(240,128,52)" fg:x="37645" fg:w="50"/><text x="11.5246%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (222 samples, 0.07%)</title><rect x="11.2896%" y="85" width="0.0665%" height="15" fill="rgb(253,114,12)" fg:x="37695" fg:w="222"/><text x="11.5396%" y="95.50"></text></g><g><title>core::bool::_&lt;impl bool&gt;::then (38 samples, 0.01%)</title><rect x="11.3561%" y="85" width="0.0114%" height="15" fill="rgb(215,223,47)" fg:x="37917" fg:w="38"/><text x="11.6061%" y="95.50"></text></g><g><title>0x14e77dfff (658 samples, 0.20%)</title><rect x="11.2746%" y="101" width="0.1971%" height="15" fill="rgb(248,225,23)" fg:x="37645" fg:w="658"/><text x="11.5246%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (348 samples, 0.10%)</title><rect x="11.3675%" y="85" width="0.1042%" height="15" fill="rgb(250,108,0)" fg:x="37955" fg:w="348"/><text x="11.6175%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (94 samples, 0.03%)</title><rect x="11.5810%" y="85" width="0.0282%" height="15" fill="rgb(228,208,7)" fg:x="38668" fg:w="94"/><text x="11.8310%" y="95.50"></text></g><g><title>avian2d::dynamics::rigid_body::world_query::_::_&lt;impl bevy_ecs::query::world_query::WorldQuery for avian2d::dynamics::rigid_body::world_query::RigidBodyQuery&gt;::set_archetype (37 samples, 0.01%)</title><rect x="11.6104%" y="85" width="0.0111%" height="15" fill="rgb(244,45,10)" fg:x="38766" fg:w="37"/><text x="11.8604%" y="95.50"></text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;T&gt;::matches_component_set (161 samples, 0.05%)</title><rect x="11.6251%" y="85" width="0.0482%" height="15" fill="rgb(207,125,25)" fg:x="38815" fg:w="161"/><text x="11.8751%" y="95.50"></text></g><g><title>bevy_ecs::storage::thin_array_ptr::ThinArrayPtr&lt;T&gt;::as_slice (37 samples, 0.01%)</title><rect x="11.6876%" y="85" width="0.0111%" height="15" fill="rgb(210,195,18)" fg:x="39024" fg:w="37"/><text x="11.9376%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (46 samples, 0.01%)</title><rect x="11.6987%" y="85" width="0.0138%" height="15" fill="rgb(249,80,12)" fg:x="39061" fg:w="46"/><text x="11.9487%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_mut_inner (53 samples, 0.02%)</title><rect x="11.7125%" y="85" width="0.0159%" height="15" fill="rgb(221,65,9)" fg:x="39107" fg:w="53"/><text x="11.9625%" y="95.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_mut (534 samples, 0.16%)</title><rect x="11.5783%" y="101" width="0.1599%" height="15" fill="rgb(235,49,36)" fg:x="38659" fg:w="534"/><text x="11.8283%" y="111.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_mut (9,215 samples, 2.76%)</title><rect x="9.0392%" y="117" width="2.7599%" height="15" fill="rgb(225,32,20)" fg:x="30181" fg:w="9215"/><text x="9.2892%" y="127.50">be..</text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_mut_inner (203 samples, 0.06%)</title><rect x="11.7383%" y="101" width="0.0608%" height="15" fill="rgb(215,141,46)" fg:x="39193" fg:w="203"/><text x="11.9883%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::run&lt;!,bevy_tasks::task_pool::TaskPool::execute_global_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;&amp;mut [avian2d::data_structures::graph::Edge&lt;avian2d::collision::contact_types::ContactPair&gt;] as bevy_tasks::slice::ParallelSliceMut&lt;avian2d::data_structures::graph::Edge&lt;avian2d::collision::contact_types::ContactPair&gt;&gt;&gt;::par_chunk_map_mut&lt;avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;avian2d::collision::collider::parry::Collider&gt;::update_contacts&lt;()&gt;::{{closure}},()&gt;::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (52 samples, 0.02%)</title><rect x="11.8065%" y="101" width="0.0156%" height="15" fill="rgb(250,160,47)" fg:x="39421" fg:w="52"/><text x="12.0565%" y="111.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}} (53 samples, 0.02%)</title><rect x="11.8065%" y="117" width="0.0159%" height="15" fill="rgb(216,222,40)" fg:x="39421" fg:w="53"/><text x="12.0565%" y="127.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (34 samples, 0.01%)</title><rect x="11.8233%" y="117" width="0.0102%" height="15" fill="rgb(234,217,39)" fg:x="39477" fg:w="34"/><text x="12.0733%" y="127.50"></text></g><g><title>_pthread_cond_wait (87 samples, 0.03%)</title><rect x="11.8392%" y="85" width="0.0261%" height="15" fill="rgb(207,178,40)" fg:x="39530" fg:w="87"/><text x="12.0892%" y="95.50"></text></g><g><title>__psynch_cvwait (87 samples, 0.03%)</title><rect x="11.8392%" y="69" width="0.0261%" height="15" fill="rgb(221,136,13)" fg:x="39530" fg:w="87"/><text x="12.0892%" y="79.50"></text></g><g><title>parking::Parker::park (94 samples, 0.03%)</title><rect x="11.8386%" y="117" width="0.0282%" height="15" fill="rgb(249,199,10)" fg:x="39528" fg:w="94"/><text x="12.0886%" y="127.50"></text></g><g><title>parking::Inner::park (94 samples, 0.03%)</title><rect x="11.8386%" y="101" width="0.0282%" height="15" fill="rgb(249,222,13)" fg:x="39528" fg:w="94"/><text x="12.0886%" y="111.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::atan2 (94 samples, 0.03%)</title><rect x="11.8667%" y="117" width="0.0282%" height="15" fill="rgb(244,185,38)" fg:x="39622" fg:w="94"/><text x="12.1167%" y="127.50"></text></g><g><title>atan2f (67 samples, 0.02%)</title><rect x="11.8748%" y="101" width="0.0201%" height="15" fill="rgb(236,202,9)" fg:x="39649" fg:w="67"/><text x="12.1248%" y="111.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (43 samples, 0.01%)</title><rect x="11.8949%" y="117" width="0.0129%" height="15" fill="rgb(250,229,37)" fg:x="39716" fg:w="43"/><text x="12.1449%" y="127.50"></text></g><g><title>szone_malloc_should_clear (40 samples, 0.01%)</title><rect x="11.8958%" y="101" width="0.0120%" height="15" fill="rgb(206,174,23)" fg:x="39719" fg:w="40"/><text x="12.1458%" y="111.50"></text></g><g><title>tiny_malloc_should_clear (38 samples, 0.01%)</title><rect x="11.8964%" y="85" width="0.0114%" height="15" fill="rgb(211,33,43)" fg:x="39721" fg:w="38"/><text x="12.1464%" y="95.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (14,877 samples, 4.46%)</title><rect x="7.4656%" y="133" width="4.4556%" height="15" fill="rgb(245,58,50)" fg:x="24927" fg:w="14877"/><text x="7.7156%" y="143.50">bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (14,889 samples, 4.46%)</title><rect x="7.4623%" y="149" width="4.4592%" height="15" fill="rgb(244,68,36)" fg:x="24916" fg:w="14889"/><text x="7.7123%" y="159.50">&lt;bevy..</text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (38 samples, 0.01%)</title><rect x="11.9216%" y="149" width="0.0114%" height="15" fill="rgb(232,229,15)" fg:x="39805" fg:w="38"/><text x="12.1716%" y="159.50"></text></g><g><title>avian2d::dynamics::solver::schedule::run_substep_schedule::_{{closure}} (14,962 samples, 4.48%)</title><rect x="7.4614%" y="181" width="4.4811%" height="15" fill="rgb(254,30,23)" fg:x="24913" fg:w="14962"/><text x="7.7114%" y="191.50">avian..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (14,962 samples, 4.48%)</title><rect x="7.4614%" y="165" width="4.4811%" height="15" fill="rgb(235,160,14)" fg:x="24913" fg:w="14962"/><text x="7.7114%" y="175.50">bevy_..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (15,003 samples, 4.49%)</title><rect x="7.4590%" y="213" width="4.4934%" height="15" fill="rgb(212,155,44)" fg:x="24905" fg:w="15003"/><text x="7.7090%" y="223.50">bevy_..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (15,002 samples, 4.49%)</title><rect x="7.4593%" y="197" width="4.4931%" height="15" fill="rgb(226,2,50)" fg:x="24906" fg:w="15002"/><text x="7.7093%" y="207.50">bevy_..</text></g><g><title>avian2d::collision::collider::backend::update_aabb (39 samples, 0.01%)</title><rect x="11.9653%" y="181" width="0.0117%" height="15" fill="rgb(234,177,6)" fg:x="39951" fg:w="39"/><text x="12.2153%" y="191.50"></text></g><g><title>0x14e6559ff (61 samples, 0.02%)</title><rect x="11.9638%" y="197" width="0.0183%" height="15" fill="rgb(217,24,9)" fg:x="39946" fg:w="61"/><text x="12.2138%" y="207.50"></text></g><g><title>&lt;avian2d::collision::collider::parry::Collider as avian2d::collision::collider::AnyCollider&gt;::aabb_with_context (88 samples, 0.03%)</title><rect x="11.9931%" y="197" width="0.0264%" height="15" fill="rgb(220,13,46)" fg:x="40044" fg:w="88"/><text x="12.2431%" y="207.50"></text></g><g><title>&lt;avian2d::data_structures::graph::NodeIndex as core::cmp::PartialEq&gt;::eq (7,575 samples, 2.27%)</title><rect x="12.0195%" y="197" width="2.2687%" height="15" fill="rgb(239,221,27)" fg:x="40132" fg:w="7575"/><text x="12.2695%" y="207.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (231 samples, 0.07%)</title><rect x="14.3295%" y="197" width="0.0692%" height="15" fill="rgb(222,198,25)" fg:x="47845" fg:w="231"/><text x="14.5795%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.03%)</title><rect x="14.4011%" y="197" width="0.0252%" height="15" fill="rgb(211,99,13)" fg:x="48084" fg:w="84"/><text x="14.6511%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (609 samples, 0.18%)</title><rect x="14.4320%" y="197" width="0.1824%" height="15" fill="rgb(232,111,31)" fg:x="48187" fg:w="609"/><text x="14.6820%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (409 samples, 0.12%)</title><rect x="14.6144%" y="197" width="0.1225%" height="15" fill="rgb(245,82,37)" fg:x="48796" fg:w="409"/><text x="14.8644%" y="207.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5,F6) as bevy_ecs::query::world_query::WorldQuery&gt;::set_archetype (35 samples, 0.01%)</title><rect x="14.7461%" y="165" width="0.0105%" height="15" fill="rgb(227,149,46)" fg:x="49236" fg:w="35"/><text x="14.9961%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (142 samples, 0.04%)</title><rect x="14.7443%" y="181" width="0.0425%" height="15" fill="rgb(218,36,50)" fg:x="49230" fg:w="142"/><text x="14.9943%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (225 samples, 0.07%)</title><rect x="14.7431%" y="197" width="0.0674%" height="15" fill="rgb(226,80,48)" fg:x="49226" fg:w="225"/><text x="14.9931%" y="207.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (42 samples, 0.01%)</title><rect x="14.7979%" y="181" width="0.0126%" height="15" fill="rgb(238,224,15)" fg:x="49409" fg:w="42"/><text x="15.0479%" y="191.50"></text></g><g><title>avian2d::collision::broad_phase::sweep_and_prune (1,443 samples, 0.43%)</title><rect x="14.8168%" y="197" width="0.4322%" height="15" fill="rgb(241,136,10)" fg:x="49472" fg:w="1443"/><text x="15.0668%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (35 samples, 0.01%)</title><rect x="15.2861%" y="133" width="0.0105%" height="15" fill="rgb(208,32,45)" fg:x="51039" fg:w="35"/><text x="15.5361%" y="143.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="15.2861%" y="117" width="0.0105%" height="15" fill="rgb(207,135,9)" fg:x="51039" fg:w="35"/><text x="15.5361%" y="127.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (35 samples, 0.01%)</title><rect x="15.2861%" y="101" width="0.0105%" height="15" fill="rgb(206,86,44)" fg:x="51039" fg:w="35"/><text x="15.5361%" y="111.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.01%)</title><rect x="15.2819%" y="149" width="0.0150%" height="15" fill="rgb(245,177,15)" fg:x="51025" fg:w="50"/><text x="15.5319%" y="159.50"></text></g><g><title>parry2d::query::contact_manifolds::contact_manifolds_convex_ball::contact_manifold_convex_ball_shapes (34 samples, 0.01%)</title><rect x="15.3394%" y="101" width="0.0102%" height="15" fill="rgb(206,64,50)" fg:x="51217" fg:w="34"/><text x="15.5894%" y="111.50"></text></g><g><title>&lt;parry2d::query::default_query_dispatcher::DefaultQueryDispatcher as parry2d::query::query_dispatcher::PersistentQueryDispatcher&lt;ManifoldData,ContactData&gt;&gt;::contact_manifolds (103 samples, 0.03%)</title><rect x="15.3191%" y="117" width="0.0308%" height="15" fill="rgb(234,36,40)" fg:x="51149" fg:w="103"/><text x="15.5691%" y="127.50"></text></g><g><title>avian2d::collision::collider::parry::contact_query::contact_manifolds (130 samples, 0.04%)</title><rect x="15.3188%" y="133" width="0.0389%" height="15" fill="rgb(213,64,8)" fg:x="51148" fg:w="130"/><text x="15.5688%" y="143.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::atan2 (45 samples, 0.01%)</title><rect x="15.3655%" y="133" width="0.0135%" height="15" fill="rgb(210,75,36)" fg:x="51304" fg:w="45"/><text x="15.6155%" y="143.50"></text></g><g><title>atan2f (38 samples, 0.01%)</title><rect x="15.3676%" y="117" width="0.0114%" height="15" fill="rgb(229,88,21)" fg:x="51311" fg:w="38"/><text x="15.6176%" y="127.50"></text></g><g><title>szone_malloc_should_clear (216 samples, 0.06%)</title><rect x="15.3960%" y="117" width="0.0647%" height="15" fill="rgb(252,204,47)" fg:x="51406" fg:w="216"/><text x="15.6460%" y="127.50"></text></g><g><title>tiny_malloc_should_clear (202 samples, 0.06%)</title><rect x="15.4002%" y="101" width="0.0605%" height="15" fill="rgb(208,77,27)" fg:x="51420" fg:w="202"/><text x="15.6502%" y="111.50"></text></g><g><title>tiny_malloc_from_free_list (69 samples, 0.02%)</title><rect x="15.4401%" y="85" width="0.0207%" height="15" fill="rgb(221,76,26)" fg:x="51553" fg:w="69"/><text x="15.6901%" y="95.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (305 samples, 0.09%)</title><rect x="15.3853%" y="133" width="0.0913%" height="15" fill="rgb(225,139,18)" fg:x="51370" fg:w="305"/><text x="15.6353%" y="143.50"></text></g><g><title>tiny_malloc_should_clear (53 samples, 0.02%)</title><rect x="15.4607%" y="117" width="0.0159%" height="15" fill="rgb(230,137,11)" fg:x="51622" fg:w="53"/><text x="15.7107%" y="127.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (66 samples, 0.02%)</title><rect x="15.4766%" y="133" width="0.0198%" height="15" fill="rgb(212,28,1)" fg:x="51675" fg:w="66"/><text x="15.7266%" y="143.50"></text></g><g><title>free_tiny (36 samples, 0.01%)</title><rect x="15.4856%" y="117" width="0.0108%" height="15" fill="rgb(248,164,17)" fg:x="51705" fg:w="36"/><text x="15.7356%" y="127.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update_contacts::_{{closure}}::_{{closure}} (636 samples, 0.19%)</title><rect x="15.3071%" y="149" width="0.1905%" height="15" fill="rgb(222,171,42)" fg:x="51109" fg:w="636"/><text x="15.5571%" y="159.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get (46 samples, 0.01%)</title><rect x="15.5060%" y="133" width="0.0138%" height="15" fill="rgb(243,84,45)" fg:x="51773" fg:w="46"/><text x="15.7560%" y="143.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get (119 samples, 0.04%)</title><rect x="15.4982%" y="149" width="0.0356%" height="15" fill="rgb(252,49,23)" fg:x="51747" fg:w="119"/><text x="15.7482%" y="159.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_impl (55 samples, 0.02%)</title><rect x="15.5590%" y="133" width="0.0165%" height="15" fill="rgb(215,19,7)" fg:x="51950" fg:w="55"/><text x="15.8090%" y="143.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_inner (193 samples, 0.06%)</title><rect x="15.5338%" y="149" width="0.0578%" height="15" fill="rgb(238,81,41)" fg:x="51866" fg:w="193"/><text x="15.7838%" y="159.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (35 samples, 0.01%)</title><rect x="15.5943%" y="149" width="0.0105%" height="15" fill="rgb(210,199,37)" fg:x="52068" fg:w="35"/><text x="15.8443%" y="159.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (95 samples, 0.03%)</title><rect x="15.6048%" y="149" width="0.0285%" height="15" fill="rgb(244,192,49)" fg:x="52103" fg:w="95"/><text x="15.8548%" y="159.50"></text></g><g><title>free_tiny (72 samples, 0.02%)</title><rect x="15.6117%" y="133" width="0.0216%" height="15" fill="rgb(226,211,11)" fg:x="52126" fg:w="72"/><text x="15.8617%" y="143.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (1,224 samples, 0.37%)</title><rect x="15.2700%" y="165" width="0.3666%" height="15" fill="rgb(236,162,54)" fg:x="50985" fg:w="1224"/><text x="15.5200%" y="175.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1,228 samples, 0.37%)</title><rect x="15.2697%" y="181" width="0.3678%" height="15" fill="rgb(220,229,9)" fg:x="50984" fg:w="1228"/><text x="15.5197%" y="191.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (55 samples, 0.02%)</title><rect x="15.6605%" y="165" width="0.0165%" height="15" fill="rgb(250,87,22)" fg:x="52289" fg:w="55"/><text x="15.9105%" y="175.50"></text></g><g><title>core::slice::sort::stable::sort (84 samples, 0.03%)</title><rect x="15.6605%" y="181" width="0.0252%" height="15" fill="rgb(239,43,17)" fg:x="52289" fg:w="84"/><text x="15.9105%" y="191.50"></text></g><g><title>tiny_free_list_add_ptr (38 samples, 0.01%)</title><rect x="15.7530%" y="133" width="0.0114%" height="15" fill="rgb(231,177,25)" fg:x="52598" fg:w="38"/><text x="16.0030%" y="143.50"></text></g><g><title>free_tiny (194 samples, 0.06%)</title><rect x="15.7117%" y="165" width="0.0581%" height="15" fill="rgb(219,179,1)" fg:x="52460" fg:w="194"/><text x="15.9617%" y="175.50"></text></g><g><title>tiny_free_no_lock (113 samples, 0.03%)</title><rect x="15.7360%" y="149" width="0.0338%" height="15" fill="rgb(238,219,53)" fg:x="52541" fg:w="113"/><text x="15.9860%" y="159.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (250 samples, 0.07%)</title><rect x="15.6961%" y="181" width="0.0749%" height="15" fill="rgb(232,167,36)" fg:x="52408" fg:w="250"/><text x="15.9461%" y="191.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update (1,737 samples, 0.52%)</title><rect x="15.2511%" y="197" width="0.5202%" height="15" fill="rgb(244,19,51)" fg:x="50922" fg:w="1737"/><text x="15.5011%" y="207.50"></text></g><g><title>avian2d::data_structures::graph::UnGraph&lt;N,E&gt;::find_edge (6,861 samples, 2.05%)</title><rect x="15.7722%" y="197" width="2.0549%" height="15" fill="rgb(224,6,22)" fg:x="52662" fg:w="6861"/><text x="16.0222%" y="207.50">a..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.03%)</title><rect x="17.8498%" y="165" width="0.0285%" height="15" fill="rgb(224,145,5)" fg:x="59599" fg:w="95"/><text x="18.0998%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (114 samples, 0.03%)</title><rect x="17.8498%" y="181" width="0.0341%" height="15" fill="rgb(234,130,49)" fg:x="59599" fg:w="114"/><text x="18.0998%" y="191.50"></text></g><g><title>core::ptr::write (37 samples, 0.01%)</title><rect x="17.8981%" y="181" width="0.0111%" height="15" fill="rgb(254,6,2)" fg:x="59760" fg:w="37"/><text x="18.1481%" y="191.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (35 samples, 0.01%)</title><rect x="17.9112%" y="165" width="0.0105%" height="15" fill="rgb(208,96,46)" fg:x="59804" fg:w="35"/><text x="18.1612%" y="175.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (35 samples, 0.01%)</title><rect x="17.9112%" y="149" width="0.0105%" height="15" fill="rgb(239,3,39)" fg:x="59804" fg:w="35"/><text x="18.1612%" y="159.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (70 samples, 0.02%)</title><rect x="17.9274%" y="149" width="0.0210%" height="15" fill="rgb(233,210,1)" fg:x="59858" fg:w="70"/><text x="18.1774%" y="159.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (70 samples, 0.02%)</title><rect x="17.9274%" y="133" width="0.0210%" height="15" fill="rgb(244,137,37)" fg:x="59858" fg:w="70"/><text x="18.1774%" y="143.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (109 samples, 0.03%)</title><rect x="17.9535%" y="133" width="0.0326%" height="15" fill="rgb(240,136,2)" fg:x="59945" fg:w="109"/><text x="18.2035%" y="143.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (108 samples, 0.03%)</title><rect x="17.9538%" y="117" width="0.0323%" height="15" fill="rgb(239,18,37)" fg:x="59946" fg:w="108"/><text x="18.2038%" y="127.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (111 samples, 0.03%)</title><rect x="17.9918%" y="117" width="0.0332%" height="15" fill="rgb(218,185,22)" fg:x="60073" fg:w="111"/><text x="18.2418%" y="127.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (111 samples, 0.03%)</title><rect x="17.9918%" y="101" width="0.0332%" height="15" fill="rgb(225,218,4)" fg:x="60073" fg:w="111"/><text x="18.2418%" y="111.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (137 samples, 0.04%)</title><rect x="18.0289%" y="101" width="0.0410%" height="15" fill="rgb(230,182,32)" fg:x="60197" fg:w="137"/><text x="18.2789%" y="111.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (137 samples, 0.04%)</title><rect x="18.0289%" y="85" width="0.0410%" height="15" fill="rgb(242,56,43)" fg:x="60197" fg:w="137"/><text x="18.2789%" y="95.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (97 samples, 0.03%)</title><rect x="18.0760%" y="85" width="0.0291%" height="15" fill="rgb(233,99,24)" fg:x="60354" fg:w="97"/><text x="18.3260%" y="95.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (97 samples, 0.03%)</title><rect x="18.0760%" y="69" width="0.0291%" height="15" fill="rgb(234,209,42)" fg:x="60354" fg:w="97"/><text x="18.3260%" y="79.50"></text></g><g><title>parry2d::partitioning::qbvh::build::CenterDataSplitter::split_dataset_wo_workspace (90 samples, 0.03%)</title><rect x="18.1143%" y="69" width="0.0270%" height="15" fill="rgb(227,7,12)" fg:x="60482" fg:w="90"/><text x="18.3643%" y="79.50"></text></g><g><title>parry2d::partitioning::qbvh::utils::split_indices_wrt_dim (89 samples, 0.03%)</title><rect x="18.1146%" y="53" width="0.0267%" height="15" fill="rgb(245,203,43)" fg:x="60483" fg:w="89"/><text x="18.3646%" y="63.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::clear_and_rebuild_with_splitter (923 samples, 0.28%)</title><rect x="17.9097%" y="181" width="0.2764%" height="15" fill="rgb(238,205,33)" fg:x="59799" fg:w="923"/><text x="18.1597%" y="191.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (883 samples, 0.26%)</title><rect x="17.9217%" y="165" width="0.2645%" height="15" fill="rgb(231,56,7)" fg:x="59839" fg:w="883"/><text x="18.1717%" y="175.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (794 samples, 0.24%)</title><rect x="17.9484%" y="149" width="0.2378%" height="15" fill="rgb(244,186,29)" fg:x="59928" fg:w="794"/><text x="18.1984%" y="159.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (668 samples, 0.20%)</title><rect x="17.9861%" y="133" width="0.2001%" height="15" fill="rgb(234,111,31)" fg:x="60054" fg:w="668"/><text x="18.2361%" y="143.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (538 samples, 0.16%)</title><rect x="18.0250%" y="117" width="0.1611%" height="15" fill="rgb(241,149,10)" fg:x="60184" fg:w="538"/><text x="18.2750%" y="127.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (388 samples, 0.12%)</title><rect x="18.0700%" y="101" width="0.1162%" height="15" fill="rgb(249,206,44)" fg:x="60334" fg:w="388"/><text x="18.3200%" y="111.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (271 samples, 0.08%)</title><rect x="18.1050%" y="85" width="0.0812%" height="15" fill="rgb(251,153,30)" fg:x="60451" fg:w="271"/><text x="18.3550%" y="95.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (150 samples, 0.04%)</title><rect x="18.1412%" y="69" width="0.0449%" height="15" fill="rgb(239,152,38)" fg:x="60572" fg:w="150"/><text x="18.3912%" y="79.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (88 samples, 0.03%)</title><rect x="18.1598%" y="53" width="0.0264%" height="15" fill="rgb(249,139,47)" fg:x="60634" fg:w="88"/><text x="18.4098%" y="63.50"></text></g><g><title>parry2d::partitioning::qbvh::build::_&lt;impl parry2d::partitioning::qbvh::qbvh::Qbvh&lt;LeafData&gt;&gt;::do_recurse_build_generic (35 samples, 0.01%)</title><rect x="18.1757%" y="37" width="0.0105%" height="15" fill="rgb(244,64,35)" fg:x="60687" fg:w="35"/><text x="18.4257%" y="47.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::atan2 (77 samples, 0.02%)</title><rect x="18.1862%" y="181" width="0.0231%" height="15" fill="rgb(216,46,15)" fg:x="60722" fg:w="77"/><text x="18.4362%" y="191.50"></text></g><g><title>atan2f (63 samples, 0.02%)</title><rect x="18.1904%" y="165" width="0.0189%" height="15" fill="rgb(250,74,19)" fg:x="60736" fg:w="63"/><text x="18.4404%" y="175.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::sin (41 samples, 0.01%)</title><rect x="18.2092%" y="181" width="0.0123%" height="15" fill="rgb(249,42,33)" fg:x="60799" fg:w="41"/><text x="18.4592%" y="191.50"></text></g><g><title>__sincosf_stret (39 samples, 0.01%)</title><rect x="18.2098%" y="165" width="0.0117%" height="15" fill="rgb(242,149,17)" fg:x="60801" fg:w="39"/><text x="18.4598%" y="175.50"></text></g><g><title>free_medium (45 samples, 0.01%)</title><rect x="18.2236%" y="165" width="0.0135%" height="15" fill="rgb(244,29,21)" fg:x="60847" fg:w="45"/><text x="18.4736%" y="175.50"></text></g><g><title>mvm_madvise_free_plat (44 samples, 0.01%)</title><rect x="18.2239%" y="149" width="0.0132%" height="15" fill="rgb(220,130,37)" fg:x="60848" fg:w="44"/><text x="18.4739%" y="159.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (44 samples, 0.01%)</title><rect x="18.2239%" y="133" width="0.0132%" height="15" fill="rgb(211,67,2)" fg:x="60848" fg:w="44"/><text x="18.4739%" y="143.50"></text></g><g><title>madvise (44 samples, 0.01%)</title><rect x="18.2239%" y="117" width="0.0132%" height="15" fill="rgb(235,68,52)" fg:x="60848" fg:w="44"/><text x="18.4739%" y="127.50"></text></g><g><title>avian2d::spatial_query::update_spatial_query_pipeline (1,345 samples, 0.40%)</title><rect x="17.8346%" y="197" width="0.4028%" height="15" fill="rgb(246,142,3)" fg:x="59548" fg:w="1345"/><text x="18.0846%" y="207.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (48 samples, 0.01%)</title><rect x="18.2230%" y="181" width="0.0144%" height="15" fill="rgb(241,25,7)" fg:x="60845" fg:w="48"/><text x="18.4730%" y="191.50"></text></g><g><title>core::intrinsics::unlikely (524 samples, 0.16%)</title><rect x="18.2602%" y="197" width="0.1569%" height="15" fill="rgb(242,119,39)" fg:x="60969" fg:w="524"/><text x="18.5102%" y="207.50"></text></g><g><title>core::ops::function::FnMut::call_mut (216 samples, 0.06%)</title><rect x="18.4198%" y="197" width="0.0647%" height="15" fill="rgb(241,98,45)" fg:x="61502" fg:w="216"/><text x="18.6698%" y="207.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::atan2 (66 samples, 0.02%)</title><rect x="18.5036%" y="197" width="0.0198%" height="15" fill="rgb(254,28,30)" fg:x="61782" fg:w="66"/><text x="18.7536%" y="207.50"></text></g><g><title>atan2f (64 samples, 0.02%)</title><rect x="18.5042%" y="181" width="0.0192%" height="15" fill="rgb(241,142,54)" fg:x="61784" fg:w="64"/><text x="18.7542%" y="191.50"></text></g><g><title>__sincosf_stret (48 samples, 0.01%)</title><rect x="18.5279%" y="181" width="0.0144%" height="15" fill="rgb(222,85,15)" fg:x="61863" fg:w="48"/><text x="18.7779%" y="191.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::sin (64 samples, 0.02%)</title><rect x="18.5234%" y="197" width="0.0192%" height="15" fill="rgb(210,85,47)" fg:x="61848" fg:w="64"/><text x="18.7734%" y="207.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (37,044 samples, 11.09%)</title><rect x="7.4545%" y="229" width="11.0946%" height="15" fill="rgb(224,206,25)" fg:x="24890" fg:w="37044"/><text x="7.7045%" y="239.50">&lt;bevy_ecs::sched..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (22,026 samples, 6.60%)</title><rect x="11.9524%" y="213" width="6.5968%" height="15" fill="rgb(243,201,19)" fg:x="39908" fg:w="22026"/><text x="12.2024%" y="223.50">bevy_ecs:..</text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (74 samples, 0.02%)</title><rect x="18.5492%" y="229" width="0.0222%" height="15" fill="rgb(236,59,4)" fg:x="61934" fg:w="74"/><text x="18.7992%" y="239.50"></text></g><g><title>bevy_ecs::world::command_queue::CommandQueue::apply (50 samples, 0.01%)</title><rect x="18.5758%" y="213" width="0.0150%" height="15" fill="rgb(254,179,45)" fg:x="62023" fg:w="50"/><text x="18.8258%" y="223.50"></text></g><g><title>bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (50 samples, 0.01%)</title><rect x="18.5758%" y="197" width="0.0150%" height="15" fill="rgb(226,14,10)" fg:x="62023" fg:w="50"/><text x="18.8258%" y="207.50"></text></g><g><title>bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor::apply_deferred (58 samples, 0.02%)</title><rect x="18.5749%" y="229" width="0.0174%" height="15" fill="rgb(244,27,41)" fg:x="62020" fg:w="58"/><text x="18.8249%" y="239.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (37,194 samples, 11.14%)</title><rect x="7.4545%" y="245" width="11.1396%" height="15" fill="rgb(235,35,32)" fg:x="24890" fg:w="37194"/><text x="7.7045%" y="255.50">bevy_ecs::schedu..</text></g><g><title>avian2d::schedule::run_physics_schedule::_{{closure}} (37,203 samples, 11.14%)</title><rect x="7.4536%" y="261" width="11.1423%" height="15" fill="rgb(218,68,31)" fg:x="24887" fg:w="37203"/><text x="7.7036%" y="271.50">avian2d::schedul..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}}::_{{closure}} (37,230 samples, 11.15%)</title><rect x="7.4524%" y="309" width="11.1503%" height="15" fill="rgb(207,120,37)" fg:x="24883" fg:w="37230"/><text x="7.7024%" y="319.50">bevy_ecs::schedu..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (37,230 samples, 11.15%)</title><rect x="7.4524%" y="293" width="11.1503%" height="15" fill="rgb(227,98,0)" fg:x="24883" fg:w="37230"/><text x="7.7024%" y="303.50">bevy_ecs::schedu..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (37,229 samples, 11.15%)</title><rect x="7.4527%" y="277" width="11.1500%" height="15" fill="rgb(207,7,3)" fg:x="24884" fg:w="37229"/><text x="7.7027%" y="287.50">bevy_ecs::system..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (34 samples, 0.01%)</title><rect x="18.6064%" y="277" width="0.0102%" height="15" fill="rgb(206,98,19)" fg:x="62125" fg:w="34"/><text x="18.8564%" y="287.50"></text></g><g><title>alloc::task::raw_waker::wake (37 samples, 0.01%)</title><rect x="18.6258%" y="229" width="0.0111%" height="15" fill="rgb(217,5,26)" fg:x="62190" fg:w="37"/><text x="18.8758%" y="239.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (37 samples, 0.01%)</title><rect x="18.6258%" y="213" width="0.0111%" height="15" fill="rgb(235,190,38)" fg:x="62190" fg:w="37"/><text x="18.8758%" y="223.50"></text></g><g><title>pthread_cond_signal (37 samples, 0.01%)</title><rect x="18.6258%" y="197" width="0.0111%" height="15" fill="rgb(247,86,24)" fg:x="62190" fg:w="37"/><text x="18.8758%" y="207.50"></text></g><g><title>__psynch_cvsignal (37 samples, 0.01%)</title><rect x="18.6258%" y="181" width="0.0111%" height="15" fill="rgb(205,101,16)" fg:x="62190" fg:w="37"/><text x="18.8758%" y="191.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (40 samples, 0.01%)</title><rect x="18.6258%" y="245" width="0.0120%" height="15" fill="rgb(246,168,33)" fg:x="62190" fg:w="40"/><text x="18.8758%" y="255.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (45 samples, 0.01%)</title><rect x="18.6258%" y="261" width="0.0135%" height="15" fill="rgb(231,114,1)" fg:x="62190" fg:w="45"/><text x="18.8758%" y="271.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (87 samples, 0.03%)</title><rect x="18.6252%" y="277" width="0.0261%" height="15" fill="rgb(207,184,53)" fg:x="62188" fg:w="87"/><text x="18.8752%" y="287.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (169 samples, 0.05%)</title><rect x="18.6028%" y="293" width="0.0506%" height="15" fill="rgb(224,95,51)" fg:x="62113" fg:w="169"/><text x="18.8528%" y="303.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_deferred::_{{closure}} (35 samples, 0.01%)</title><rect x="18.6537%" y="293" width="0.0105%" height="15" fill="rgb(212,188,45)" fg:x="62283" fg:w="35"/><text x="18.9037%" y="303.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}} (206 samples, 0.06%)</title><rect x="18.6028%" y="309" width="0.0617%" height="15" fill="rgb(223,154,38)" fg:x="62113" fg:w="206"/><text x="18.8528%" y="319.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (37,439 samples, 11.21%)</title><rect x="7.4524%" y="325" width="11.2129%" height="15" fill="rgb(251,22,52)" fg:x="24883" fg:w="37439"/><text x="7.7024%" y="335.50">async_task::raw::..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (37,463 samples, 11.22%)</title><rect x="7.4518%" y="341" width="11.2201%" height="15" fill="rgb(229,209,22)" fg:x="24881" fg:w="37463"/><text x="7.7018%" y="351.50">async_task::runna..</text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::_{{closure}}::_{{closure}}::_{{closure}} (37,482 samples, 11.23%)</title><rect x="7.4470%" y="357" width="11.2258%" height="15" fill="rgb(234,138,34)" fg:x="24865" fg:w="37482"/><text x="7.6970%" y="367.50">bevy_tasks::task_..</text></g><g><title>__psynch_cvwait (605 samples, 0.18%)</title><rect x="18.6914%" y="309" width="0.1812%" height="15" fill="rgb(212,95,11)" fg:x="62409" fg:w="605"/><text x="18.9414%" y="319.50"></text></g><g><title>_pthread_cond_wait (619 samples, 0.19%)</title><rect x="18.6905%" y="325" width="0.1854%" height="15" fill="rgb(240,179,47)" fg:x="62406" fg:w="619"/><text x="18.9405%" y="335.50"></text></g><g><title>bevy_ecs::world::World::try_run_schedule::_{{closure}} (38,651 samples, 11.58%)</title><rect x="7.3018%" y="389" width="11.5759%" height="15" fill="rgb(240,163,11)" fg:x="24380" fg:w="38651"/><text x="7.5518%" y="399.50">bevy_ecs::world::..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (38,651 samples, 11.58%)</title><rect x="7.3018%" y="373" width="11.5759%" height="15" fill="rgb(236,37,12)" fg:x="24380" fg:w="38651"/><text x="7.5518%" y="383.50">bevy_ecs::schedul..</text></g><g><title>parking::Parker::park (661 samples, 0.20%)</title><rect x="18.6797%" y="357" width="0.1980%" height="15" fill="rgb(232,164,16)" fg:x="62370" fg:w="661"/><text x="18.9297%" y="367.50"></text></g><g><title>parking::Inner::park (661 samples, 0.20%)</title><rect x="18.6797%" y="341" width="0.1980%" height="15" fill="rgb(244,205,15)" fg:x="62370" fg:w="661"/><text x="18.9297%" y="351.50"></text></g><g><title>bevy_ecs::world::World::try_run_schedule (38,671 samples, 11.58%)</title><rect x="7.2991%" y="405" width="11.5819%" height="15" fill="rgb(223,117,47)" fg:x="24371" fg:w="38671"/><text x="7.5491%" y="415.50">bevy_ecs::world::..</text></g><g><title>core::ops::function::FnMut::call_mut (38,674 samples, 11.58%)</title><rect x="7.2985%" y="421" width="11.5828%" height="15" fill="rgb(244,107,35)" fg:x="24369" fg:w="38674"/><text x="7.5485%" y="431.50">core::ops::functi..</text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (38,677 samples, 11.58%)</title><rect x="7.2979%" y="469" width="11.5837%" height="15" fill="rgb(205,140,8)" fg:x="24367" fg:w="38677"/><text x="7.5479%" y="479.50">&lt;bevy_ecs::schedu..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (38,677 samples, 11.58%)</title><rect x="7.2979%" y="453" width="11.5837%" height="15" fill="rgb(228,84,46)" fg:x="24367" fg:w="38677"/><text x="7.5479%" y="463.50">bevy_ecs::schedul..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (38,676 samples, 11.58%)</title><rect x="7.2982%" y="437" width="11.5834%" height="15" fill="rgb(254,188,9)" fg:x="24368" fg:w="38676"/><text x="7.5482%" y="447.50">bevy_ecs::system:..</text></g><g><title>bevy_time::fixed::run_fixed_main_schedule::_{{closure}} (38,683 samples, 11.59%)</title><rect x="7.2979%" y="501" width="11.5855%" height="15" fill="rgb(206,112,54)" fg:x="24367" fg:w="38683"/><text x="7.5479%" y="511.50">bevy_time::fixed:..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (38,683 samples, 11.59%)</title><rect x="7.2979%" y="485" width="11.5855%" height="15" fill="rgb(216,84,49)" fg:x="24367" fg:w="38683"/><text x="7.5479%" y="495.50">bevy_ecs::schedul..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (38,730 samples, 11.60%)</title><rect x="7.2844%" y="533" width="11.5996%" height="15" fill="rgb(214,194,35)" fg:x="24322" fg:w="38730"/><text x="7.5344%" y="543.50">bevy_ecs::schedul..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (38,730 samples, 11.60%)</title><rect x="7.2844%" y="517" width="11.5996%" height="15" fill="rgb(249,28,3)" fg:x="24322" fg:w="38730"/><text x="7.5344%" y="527.50">bevy_ecs::system:..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (90 samples, 0.03%)</title><rect x="18.8840%" y="533" width="0.0270%" height="15" fill="rgb(222,56,52)" fg:x="63052" fg:w="90"/><text x="19.1340%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (38,841 samples, 11.63%)</title><rect x="7.2784%" y="549" width="11.6328%" height="15" fill="rgb(245,217,50)" fg:x="24302" fg:w="38841"/><text x="7.5284%" y="559.50">&lt;bevy_ecs::schedu..</text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::name (36 samples, 0.01%)</title><rect x="18.9119%" y="533" width="0.0108%" height="15" fill="rgb(213,201,24)" fg:x="63145" fg:w="36"/><text x="19.1619%" y="543.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (70 samples, 0.02%)</title><rect x="18.9113%" y="549" width="0.0210%" height="15" fill="rgb(248,116,28)" fg:x="63143" fg:w="70"/><text x="19.1613%" y="559.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (223 samples, 0.07%)</title><rect x="18.9655%" y="517" width="0.0668%" height="15" fill="rgb(219,72,43)" fg:x="63324" fg:w="223"/><text x="19.2155%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (51 samples, 0.02%)</title><rect x="19.0406%" y="517" width="0.0153%" height="15" fill="rgb(209,138,14)" fg:x="63575" fg:w="51"/><text x="19.2906%" y="527.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (452 samples, 0.14%)</title><rect x="18.9415%" y="533" width="0.1354%" height="15" fill="rgb(222,18,33)" fg:x="63244" fg:w="452"/><text x="19.1915%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="19.1005%" y="501" width="0.0105%" height="15" fill="rgb(213,199,7)" fg:x="63775" fg:w="35"/><text x="19.3505%" y="511.50"></text></g><g><title>_szone_free (64 samples, 0.02%)</title><rect x="19.1287%" y="501" width="0.0192%" height="15" fill="rgb(250,110,10)" fg:x="63869" fg:w="64"/><text x="19.3787%" y="511.50"></text></g><g><title>_os_unfair_lock_lock_slow (77 samples, 0.02%)</title><rect x="19.2108%" y="485" width="0.0231%" height="15" fill="rgb(248,123,6)" fg:x="64143" fg:w="77"/><text x="19.4608%" y="495.50"></text></g><g><title>__ulock_wait2 (62 samples, 0.02%)</title><rect x="19.2153%" y="469" width="0.0186%" height="15" fill="rgb(206,91,31)" fg:x="64158" fg:w="62"/><text x="19.4653%" y="479.50"></text></g><g><title>_platform_memset (134 samples, 0.04%)</title><rect x="19.2338%" y="485" width="0.0401%" height="15" fill="rgb(211,154,13)" fg:x="64220" fg:w="134"/><text x="19.4838%" y="495.50"></text></g><g><title>get_tiny_previous_free_msize (39 samples, 0.01%)</title><rect x="19.3428%" y="469" width="0.0117%" height="15" fill="rgb(225,148,7)" fg:x="64584" fg:w="39"/><text x="19.5928%" y="479.50"></text></g><g><title>tiny_free_list_add_ptr (173 samples, 0.05%)</title><rect x="19.3545%" y="469" width="0.0518%" height="15" fill="rgb(220,160,43)" fg:x="64623" fg:w="173"/><text x="19.6045%" y="479.50"></text></g><g><title>free_tiny (902 samples, 0.27%)</title><rect x="19.1524%" y="501" width="0.2701%" height="15" fill="rgb(213,52,39)" fg:x="63948" fg:w="902"/><text x="19.4024%" y="511.50"></text></g><g><title>tiny_free_no_lock (486 samples, 0.15%)</title><rect x="19.2769%" y="485" width="0.1456%" height="15" fill="rgb(243,137,7)" fg:x="64364" fg:w="486"/><text x="19.5269%" y="495.50"></text></g><g><title>tiny_free_list_remove_ptr (54 samples, 0.02%)</title><rect x="19.4063%" y="469" width="0.0162%" height="15" fill="rgb(230,79,13)" fg:x="64796" fg:w="54"/><text x="19.6563%" y="479.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (1,130 samples, 0.34%)</title><rect x="19.0892%" y="517" width="0.3384%" height="15" fill="rgb(247,105,23)" fg:x="63737" fg:w="1130"/><text x="19.3392%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,233 samples, 0.37%)</title><rect x="19.4297%" y="517" width="0.3693%" height="15" fill="rgb(223,179,41)" fg:x="64874" fg:w="1233"/><text x="19.6797%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (2,404 samples, 0.72%)</title><rect x="19.0811%" y="533" width="0.7200%" height="15" fill="rgb(218,9,34)" fg:x="63710" fg:w="2404"/><text x="19.3311%" y="543.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,902 samples, 0.87%)</title><rect x="18.9343%" y="549" width="0.8691%" height="15" fill="rgb(222,106,8)" fg:x="63220" fg:w="2902"/><text x="19.1843%" y="559.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (38 samples, 0.01%)</title><rect x="19.8316%" y="517" width="0.0114%" height="15" fill="rgb(211,220,0)" fg:x="66216" fg:w="38"/><text x="20.0816%" y="527.50"></text></g><g><title>async_executor::Ticker::runnable::_{{closure}}::_{{closure}} (67 samples, 0.02%)</title><rect x="19.8283%" y="533" width="0.0201%" height="15" fill="rgb(229,52,16)" fg:x="66205" fg:w="67"/><text x="20.0783%" y="543.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (72 samples, 0.02%)</title><rect x="19.8490%" y="533" width="0.0216%" height="15" fill="rgb(212,155,18)" fg:x="66274" fg:w="72"/><text x="20.0990%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (55 samples, 0.02%)</title><rect x="19.8733%" y="517" width="0.0165%" height="15" fill="rgb(242,21,14)" fg:x="66355" fg:w="55"/><text x="20.1233%" y="527.50"></text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (50 samples, 0.01%)</title><rect x="19.9095%" y="453" width="0.0150%" height="15" fill="rgb(222,19,48)" fg:x="66476" fg:w="50"/><text x="20.1595%" y="463.50"></text></g><g><title>bevy_ecs::system::system::System::run (110 samples, 0.03%)</title><rect x="19.8933%" y="469" width="0.0329%" height="15" fill="rgb(232,45,27)" fg:x="66422" fg:w="110"/><text x="20.1433%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (70 samples, 0.02%)</title><rect x="19.9314%" y="453" width="0.0210%" height="15" fill="rgb(249,103,42)" fg:x="66549" fg:w="70"/><text x="20.1814%" y="463.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (202 samples, 0.06%)</title><rect x="19.8924%" y="485" width="0.0605%" height="15" fill="rgb(246,81,33)" fg:x="66419" fg:w="202"/><text x="20.1424%" y="495.50"></text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (89 samples, 0.03%)</title><rect x="19.9263%" y="469" width="0.0267%" height="15" fill="rgb(252,33,42)" fg:x="66532" fg:w="89"/><text x="20.1763%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}}::_{{closure}} (204 samples, 0.06%)</title><rect x="19.8921%" y="501" width="0.0611%" height="15" fill="rgb(209,212,41)" fg:x="66418" fg:w="204"/><text x="20.1421%" y="511.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="19.9778%" y="469" width="0.0207%" height="15" fill="rgb(207,154,6)" fg:x="66704" fg:w="69"/><text x="20.2278%" y="479.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (72 samples, 0.02%)</title><rect x="20.0077%" y="469" width="0.0216%" height="15" fill="rgb(223,64,47)" fg:x="66804" fg:w="72"/><text x="20.2577%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (62 samples, 0.02%)</title><rect x="20.0107%" y="453" width="0.0186%" height="15" fill="rgb(211,161,38)" fg:x="66814" fg:w="62"/><text x="20.2607%" y="463.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (88 samples, 0.03%)</title><rect x="20.0904%" y="453" width="0.0264%" height="15" fill="rgb(219,138,40)" fg:x="67080" fg:w="88"/><text x="20.3404%" y="463.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (160 samples, 0.05%)</title><rect x="20.1179%" y="453" width="0.0479%" height="15" fill="rgb(241,228,46)" fg:x="67172" fg:w="160"/><text x="20.3679%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (181 samples, 0.05%)</title><rect x="20.1671%" y="453" width="0.0542%" height="15" fill="rgb(223,209,38)" fg:x="67336" fg:w="181"/><text x="20.4171%" y="463.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_components_compatible (50 samples, 0.01%)</title><rect x="20.2300%" y="453" width="0.0150%" height="15" fill="rgb(236,164,45)" fg:x="67546" fg:w="50"/><text x="20.4800%" y="463.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_resources_compatible (178 samples, 0.05%)</title><rect x="20.2449%" y="453" width="0.0533%" height="15" fill="rgb(231,15,5)" fg:x="67596" fg:w="178"/><text x="20.4949%" y="463.50"></text></g><g><title>core::cmp::Ord::min (48 samples, 0.01%)</title><rect x="20.2991%" y="453" width="0.0144%" height="15" fill="rgb(252,35,15)" fg:x="67777" fg:w="48"/><text x="20.5491%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (203 samples, 0.06%)</title><rect x="20.3135%" y="453" width="0.0608%" height="15" fill="rgb(248,181,18)" fg:x="67825" fg:w="203"/><text x="20.5635%" y="463.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (1,165 samples, 0.35%)</title><rect x="20.0533%" y="469" width="0.3489%" height="15" fill="rgb(233,39,42)" fg:x="66956" fg:w="1165"/><text x="20.3033%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::finish_system_and_handle_dependents (68 samples, 0.02%)</title><rect x="20.4022%" y="469" width="0.0204%" height="15" fill="rgb(238,110,33)" fg:x="68121" fg:w="68"/><text x="20.6522%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::rebuild_active_access (72 samples, 0.02%)</title><rect x="20.4225%" y="469" width="0.0216%" height="15" fill="rgb(233,195,10)" fg:x="68189" fg:w="72"/><text x="20.6725%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (64 samples, 0.02%)</title><rect x="20.4675%" y="453" width="0.0192%" height="15" fill="rgb(254,105,3)" fg:x="68339" fg:w="64"/><text x="20.7175%" y="463.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::readonly_run_unsafe (86 samples, 0.03%)</title><rect x="20.4968%" y="437" width="0.0258%" height="15" fill="rgb(221,225,9)" fg:x="68437" fg:w="86"/><text x="20.7468%" y="447.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::evaluate_and_fold_conditions::_{{closure}} (101 samples, 0.03%)</title><rect x="20.4935%" y="453" width="0.0302%" height="15" fill="rgb(224,227,45)" fg:x="68426" fg:w="101"/><text x="20.7435%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (85 samples, 0.03%)</title><rect x="20.5271%" y="453" width="0.0255%" height="15" fill="rgb(229,198,43)" fg:x="68538" fg:w="85"/><text x="20.7771%" y="463.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::should_run (363 samples, 0.11%)</title><rect x="20.4441%" y="469" width="0.1087%" height="15" fill="rgb(206,209,35)" fg:x="68261" fg:w="363"/><text x="20.6941%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (151 samples, 0.05%)</title><rect x="20.5558%" y="469" width="0.0452%" height="15" fill="rgb(245,195,53)" fg:x="68634" fg:w="151"/><text x="20.8058%" y="479.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (50 samples, 0.01%)</title><rect x="20.6154%" y="453" width="0.0150%" height="15" fill="rgb(240,92,26)" fg:x="68833" fg:w="50"/><text x="20.8654%" y="463.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (122 samples, 0.04%)</title><rect x="20.6010%" y="469" width="0.0365%" height="15" fill="rgb(207,40,23)" fg:x="68785" fg:w="122"/><text x="20.8510%" y="479.50"></text></g><g><title>__psynch_cvsignal (603 samples, 0.18%)</title><rect x="20.6780%" y="373" width="0.1806%" height="15" fill="rgb(223,111,35)" fg:x="69042" fg:w="603"/><text x="20.9280%" y="383.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (627 samples, 0.19%)</title><rect x="20.6732%" y="405" width="0.1878%" height="15" fill="rgb(229,147,28)" fg:x="69026" fg:w="627"/><text x="20.9232%" y="415.50"></text></g><g><title>pthread_cond_signal (625 samples, 0.19%)</title><rect x="20.6738%" y="389" width="0.1872%" height="15" fill="rgb(211,29,28)" fg:x="69028" fg:w="625"/><text x="20.9238%" y="399.50"></text></g><g><title>alloc::task::raw_waker::wake (643 samples, 0.19%)</title><rect x="20.6696%" y="421" width="0.1926%" height="15" fill="rgb(228,72,33)" fg:x="69014" fg:w="643"/><text x="20.9196%" y="431.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (784 samples, 0.23%)</title><rect x="20.6693%" y="437" width="0.2348%" height="15" fill="rgb(205,214,31)" fg:x="69013" fg:w="784"/><text x="20.9193%" y="447.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (1,248 samples, 0.37%)</title><rect x="20.6678%" y="453" width="0.3738%" height="15" fill="rgb(224,111,15)" fg:x="69008" fg:w="1248"/><text x="20.9178%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (433 samples, 0.13%)</title><rect x="20.9119%" y="437" width="0.1297%" height="15" fill="rgb(253,21,26)" fg:x="69823" fg:w="433"/><text x="21.1619%" y="447.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (277 samples, 0.08%)</title><rect x="21.0572%" y="453" width="0.0830%" height="15" fill="rgb(245,139,43)" fg:x="70308" fg:w="277"/><text x="21.3072%" y="463.50"></text></g><g><title>szone_malloc_should_clear (251 samples, 0.08%)</title><rect x="21.0650%" y="437" width="0.0752%" height="15" fill="rgb(252,170,7)" fg:x="70334" fg:w="251"/><text x="21.3150%" y="447.50"></text></g><g><title>tiny_malloc_should_clear (230 samples, 0.07%)</title><rect x="21.0712%" y="421" width="0.0689%" height="15" fill="rgb(231,118,14)" fg:x="70355" fg:w="230"/><text x="21.3212%" y="431.50"></text></g><g><title>tiny_malloc_from_free_list (170 samples, 0.05%)</title><rect x="21.0892%" y="405" width="0.0509%" height="15" fill="rgb(238,83,0)" fg:x="70415" fg:w="170"/><text x="21.3392%" y="415.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1,462 samples, 0.44%)</title><rect x="21.1407%" y="437" width="0.4379%" height="15" fill="rgb(221,39,39)" fg:x="70587" fg:w="1462"/><text x="21.3907%" y="447.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (1,441 samples, 0.43%)</title><rect x="21.1470%" y="421" width="0.4316%" height="15" fill="rgb(222,119,46)" fg:x="70608" fg:w="1441"/><text x="21.3970%" y="431.50"></text></g><g><title>__psynch_mutexwait (1,414 samples, 0.42%)</title><rect x="21.1551%" y="405" width="0.4235%" height="15" fill="rgb(222,165,49)" fg:x="70635" fg:w="1414"/><text x="21.4051%" y="415.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (1,523 samples, 0.46%)</title><rect x="21.1401%" y="453" width="0.4561%" height="15" fill="rgb(219,113,52)" fg:x="70585" fg:w="1523"/><text x="21.3901%" y="463.50"></text></g><g><title>pthread_mutex_lock (59 samples, 0.02%)</title><rect x="21.5786%" y="437" width="0.0177%" height="15" fill="rgb(214,7,15)" fg:x="72049" fg:w="59"/><text x="21.8286%" y="447.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (2,119 samples, 0.63%)</title><rect x="21.5969%" y="437" width="0.6346%" height="15" fill="rgb(235,32,4)" fg:x="72110" fg:w="2119"/><text x="21.8469%" y="447.50"></text></g><g><title>_pthread_mutex_firstfit_wake (2,097 samples, 0.63%)</title><rect x="21.6035%" y="421" width="0.6280%" height="15" fill="rgb(238,90,54)" fg:x="72132" fg:w="2097"/><text x="21.8535%" y="431.50"></text></g><g><title>__psynch_mutexdrop (2,095 samples, 0.63%)</title><rect x="21.6041%" y="405" width="0.6275%" height="15" fill="rgb(213,208,19)" fg:x="72134" fg:w="2095"/><text x="21.8541%" y="415.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (2,169 samples, 0.65%)</title><rect x="21.5963%" y="453" width="0.6496%" height="15" fill="rgb(233,156,4)" fg:x="72108" fg:w="2169"/><text x="21.8463%" y="463.50"></text></g><g><title>pthread_mutex_unlock (48 samples, 0.01%)</title><rect x="22.2315%" y="437" width="0.0144%" height="15" fill="rgb(207,194,5)" fg:x="74229" fg:w="48"/><text x="22.4815%" y="447.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (5,339 samples, 1.60%)</title><rect x="20.6478%" y="469" width="1.5990%" height="15" fill="rgb(206,111,30)" fg:x="68941" fg:w="5339"/><text x="20.8978%" y="479.50"></text></g><g><title>core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (58 samples, 0.02%)</title><rect x="22.2594%" y="469" width="0.0174%" height="15" fill="rgb(243,70,54)" fg:x="74322" fg:w="58"/><text x="22.5094%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (170 samples, 0.05%)</title><rect x="22.2767%" y="469" width="0.0509%" height="15" fill="rgb(242,28,8)" fg:x="74380" fg:w="170"/><text x="22.5267%" y="479.50"></text></g><g><title>_platform_memmove (139 samples, 0.04%)</title><rect x="22.2860%" y="453" width="0.0416%" height="15" fill="rgb(219,106,18)" fg:x="74411" fg:w="139"/><text x="22.5360%" y="463.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (106 samples, 0.03%)</title><rect x="22.3567%" y="469" width="0.0317%" height="15" fill="rgb(244,222,10)" fg:x="74647" fg:w="106"/><text x="22.6067%" y="479.50"></text></g><g><title>_platform_memset (88 samples, 0.03%)</title><rect x="22.3621%" y="453" width="0.0264%" height="15" fill="rgb(236,179,52)" fg:x="74665" fg:w="88"/><text x="22.6121%" y="463.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (35 samples, 0.01%)</title><rect x="22.4031%" y="469" width="0.0105%" height="15" fill="rgb(213,23,39)" fg:x="74802" fg:w="35"/><text x="22.6531%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (8,204 samples, 2.46%)</title><rect x="19.9607%" y="485" width="2.4571%" height="15" fill="rgb(238,48,10)" fg:x="66647" fg:w="8204"/><text x="20.2107%" y="495.50">be..</text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (134 samples, 0.04%)</title><rect x="22.4295%" y="469" width="0.0401%" height="15" fill="rgb(251,196,23)" fg:x="74890" fg:w="134"/><text x="22.6795%" y="479.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::from_states_uninitialized (36 samples, 0.01%)</title><rect x="22.4975%" y="437" width="0.0108%" height="15" fill="rgb(250,152,24)" fg:x="75117" fg:w="36"/><text x="22.7475%" y="447.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::new_archetype_internal (38 samples, 0.01%)</title><rect x="22.5112%" y="421" width="0.0114%" height="15" fill="rgb(209,150,17)" fg:x="75163" fg:w="38"/><text x="22.7612%" y="431.50"></text></g><g><title>&lt;&amp;usize as core::ops::bit::BitAnd&lt;usize&gt;&gt;::bitand (35 samples, 0.01%)</title><rect x="22.5229%" y="405" width="0.0105%" height="15" fill="rgb(234,202,34)" fg:x="75202" fg:w="35"/><text x="22.7729%" y="415.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.02%)</title><rect x="22.5385%" y="405" width="0.0159%" height="15" fill="rgb(253,148,53)" fg:x="75254" fg:w="53"/><text x="22.7885%" y="415.50"></text></g><g><title>szone_realloc (64 samples, 0.02%)</title><rect x="22.5657%" y="325" width="0.0192%" height="15" fill="rgb(218,129,16)" fg:x="75345" fg:w="64"/><text x="22.8157%" y="335.50"></text></g><g><title>_malloc_zone_realloc (68 samples, 0.02%)</title><rect x="22.5648%" y="341" width="0.0204%" height="15" fill="rgb(216,85,19)" fg:x="75342" fg:w="68"/><text x="22.8148%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (76 samples, 0.02%)</title><rect x="22.5643%" y="389" width="0.0228%" height="15" fill="rgb(235,228,7)" fg:x="75340" fg:w="76"/><text x="22.8143%" y="399.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (74 samples, 0.02%)</title><rect x="22.5648%" y="373" width="0.0222%" height="15" fill="rgb(245,175,0)" fg:x="75342" fg:w="74"/><text x="22.8148%" y="383.50"></text></g><g><title>_realloc (74 samples, 0.02%)</title><rect x="22.5648%" y="357" width="0.0222%" height="15" fill="rgb(208,168,36)" fg:x="75342" fg:w="74"/><text x="22.8148%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (87 samples, 0.03%)</title><rect x="22.5613%" y="405" width="0.0261%" height="15" fill="rgb(246,171,24)" fg:x="75330" fg:w="87"/><text x="22.8113%" y="415.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::matches_component_set::_{{closure}} (48 samples, 0.01%)</title><rect x="22.5873%" y="405" width="0.0144%" height="15" fill="rgb(215,142,24)" fg:x="75417" fg:w="48"/><text x="22.8373%" y="415.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetypes_unsafe_world_cell (354 samples, 0.11%)</title><rect x="22.5226%" y="421" width="0.1060%" height="15" fill="rgb(250,187,7)" fg:x="75201" fg:w="354"/><text x="22.7726%" y="431.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetypes (425 samples, 0.13%)</title><rect x="22.5082%" y="437" width="0.1273%" height="15" fill="rgb(228,66,33)" fg:x="75153" fg:w="425"/><text x="22.7582%" y="447.50"></text></g><g><title>bevy_pbr::light::check_dir_light_mesh_visibility::_{{closure}}::_{{closure}} (37 samples, 0.01%)</title><rect x="22.6577%" y="437" width="0.0111%" height="15" fill="rgb(234,215,21)" fg:x="75652" fg:w="37"/><text x="22.9077%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (44 samples, 0.01%)</title><rect x="22.6700%" y="437" width="0.0132%" height="15" fill="rgb(222,191,20)" fg:x="75693" fg:w="44"/><text x="22.9200%" y="447.50"></text></g><g><title>bevy_ecs::world::command_queue::CommandQueue::apply (715 samples, 0.21%)</title><rect x="22.4741%" y="469" width="0.2141%" height="15" fill="rgb(245,79,54)" fg:x="75039" fg:w="715"/><text x="22.7241%" y="479.50"></text></g><g><title>bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (706 samples, 0.21%)</title><rect x="22.4768%" y="453" width="0.2114%" height="15" fill="rgb(240,10,37)" fg:x="75048" fg:w="706"/><text x="22.7268%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (69 samples, 0.02%)</title><rect x="22.6924%" y="469" width="0.0207%" height="15" fill="rgb(214,192,32)" fg:x="75768" fg:w="69"/><text x="22.9424%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_deferred::_{{closure}} (986 samples, 0.30%)</title><rect x="22.4190%" y="485" width="0.2953%" height="15" fill="rgb(209,36,54)" fg:x="74855" fg:w="986"/><text x="22.6690%" y="495.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}} (9,237 samples, 2.77%)</title><rect x="19.9532%" y="501" width="2.7665%" height="15" fill="rgb(220,10,11)" fg:x="66622" fg:w="9237"/><text x="20.2032%" y="511.50">be..</text></g><g><title>bevy_app::task_pool_plugin::tick_global_task_pools (87 samples, 0.03%)</title><rect x="22.7245%" y="469" width="0.0261%" height="15" fill="rgb(221,106,17)" fg:x="75875" fg:w="87"/><text x="22.9745%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (128 samples, 0.04%)</title><rect x="22.7197%" y="501" width="0.0383%" height="15" fill="rgb(251,142,44)" fg:x="75859" fg:w="128"/><text x="22.9697%" y="511.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (127 samples, 0.04%)</title><rect x="22.7200%" y="485" width="0.0380%" height="15" fill="rgb(238,13,15)" fg:x="75860" fg:w="127"/><text x="22.9700%" y="495.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (37 samples, 0.01%)</title><rect x="22.7616%" y="469" width="0.0111%" height="15" fill="rgb(208,107,27)" fg:x="75999" fg:w="37"/><text x="23.0116%" y="479.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::rebuild_active_access (45 samples, 0.01%)</title><rect x="22.7748%" y="469" width="0.0135%" height="15" fill="rgb(205,136,37)" fg:x="76043" fg:w="45"/><text x="23.0248%" y="479.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (35 samples, 0.01%)</title><rect x="22.8050%" y="453" width="0.0105%" height="15" fill="rgb(250,205,27)" fg:x="76144" fg:w="35"/><text x="23.0550%" y="463.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (126 samples, 0.04%)</title><rect x="22.7943%" y="469" width="0.0377%" height="15" fill="rgb(210,80,43)" fg:x="76108" fg:w="126"/><text x="23.0443%" y="479.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (55 samples, 0.02%)</title><rect x="22.8155%" y="453" width="0.0165%" height="15" fill="rgb(247,160,36)" fg:x="76179" fg:w="55"/><text x="23.0655%" y="463.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (55 samples, 0.02%)</title><rect x="22.8155%" y="437" width="0.0165%" height="15" fill="rgb(234,13,49)" fg:x="76179" fg:w="55"/><text x="23.0655%" y="447.50"></text></g><g><title>_pthread_mutex_firstfit_wake (55 samples, 0.02%)</title><rect x="22.8155%" y="421" width="0.0165%" height="15" fill="rgb(234,122,0)" fg:x="76179" fg:w="55"/><text x="23.0655%" y="431.50"></text></g><g><title>__psynch_mutexdrop (55 samples, 0.02%)</title><rect x="22.8155%" y="405" width="0.0165%" height="15" fill="rgb(207,146,38)" fg:x="76179" fg:w="55"/><text x="23.0655%" y="415.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (302 samples, 0.09%)</title><rect x="22.7580%" y="485" width="0.0904%" height="15" fill="rgb(207,177,25)" fg:x="75987" fg:w="302"/><text x="23.0080%" y="495.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (303 samples, 0.09%)</title><rect x="22.7580%" y="501" width="0.0907%" height="15" fill="rgb(211,178,42)" fg:x="75987" fg:w="303"/><text x="23.0080%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (9,950 samples, 2.98%)</title><rect x="19.8897%" y="517" width="2.9800%" height="15" fill="rgb(230,69,54)" fg:x="66410" fg:w="9950"/><text x="20.1397%" y="527.50">asy..</text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69 samples, 0.02%)</title><rect x="22.8491%" y="501" width="0.0207%" height="15" fill="rgb(214,135,41)" fg:x="76291" fg:w="69"/><text x="23.0991%" y="511.50"></text></g><g><title>free_tiny (58 samples, 0.02%)</title><rect x="22.8524%" y="485" width="0.0174%" height="15" fill="rgb(237,67,25)" fg:x="76302" fg:w="58"/><text x="23.1024%" y="495.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (125 samples, 0.04%)</title><rect x="22.8802%" y="485" width="0.0374%" height="15" fill="rgb(222,189,50)" fg:x="76395" fg:w="125"/><text x="23.1302%" y="495.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (124 samples, 0.04%)</title><rect x="22.8805%" y="469" width="0.0371%" height="15" fill="rgb(245,148,34)" fg:x="76396" fg:w="124"/><text x="23.1305%" y="479.50"></text></g><g><title>__psynch_mutexwait (123 samples, 0.04%)</title><rect x="22.8808%" y="453" width="0.0368%" height="15" fill="rgb(222,29,6)" fg:x="76397" fg:w="123"/><text x="23.1308%" y="463.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (134 samples, 0.04%)</title><rect x="22.8790%" y="501" width="0.0401%" height="15" fill="rgb(221,189,43)" fg:x="76391" fg:w="134"/><text x="23.1290%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (166 samples, 0.05%)</title><rect x="22.8709%" y="517" width="0.0497%" height="15" fill="rgb(207,36,27)" fg:x="76364" fg:w="166"/><text x="23.1209%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (115 samples, 0.03%)</title><rect x="22.9222%" y="517" width="0.0344%" height="15" fill="rgb(217,90,24)" fg:x="76535" fg:w="115"/><text x="23.1722%" y="527.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (10,313 samples, 3.09%)</title><rect x="19.8730%" y="533" width="3.0887%" height="15" fill="rgb(224,66,35)" fg:x="66354" fg:w="10313"/><text x="20.1230%" y="543.50">asy..</text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::_{{closure}}::_{{closure}}::_{{closure}} (10,513 samples, 3.15%)</title><rect x="19.8217%" y="549" width="3.1486%" height="15" fill="rgb(221,13,50)" fg:x="66183" fg:w="10513"/><text x="20.0717%" y="559.50">bev..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (54 samples, 0.02%)</title><rect x="22.9710%" y="549" width="0.0162%" height="15" fill="rgb(236,68,49)" fg:x="76698" fg:w="54"/><text x="23.2210%" y="559.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (44 samples, 0.01%)</title><rect x="22.9892%" y="549" width="0.0132%" height="15" fill="rgb(229,146,28)" fg:x="76759" fg:w="44"/><text x="23.2392%" y="559.50"></text></g><g><title>__psynch_cvwait (5,625 samples, 1.68%)</title><rect x="23.1177%" y="501" width="1.6847%" height="15" fill="rgb(225,31,38)" fg:x="77188" fg:w="5625"/><text x="23.3677%" y="511.50"></text></g><g><title>pthread_mutex_lock (52 samples, 0.02%)</title><rect x="24.8060%" y="501" width="0.0156%" height="15" fill="rgb(250,208,3)" fg:x="82825" fg:w="52"/><text x="25.0560%" y="511.50"></text></g><g><title>_pthread_cond_wait (5,761 samples, 1.73%)</title><rect x="23.1010%" y="517" width="1.7254%" height="15" fill="rgb(246,54,23)" fg:x="77132" fg:w="5761"/><text x="23.3510%" y="527.50"></text></g><g><title>parking::Inner::park (6,015 samples, 1.80%)</title><rect x="23.0279%" y="533" width="1.8015%" height="15" fill="rgb(243,76,11)" fg:x="76888" fg:w="6015"/><text x="23.2779%" y="543.50">p..</text></g><g><title>parking::Parker::park (6,023 samples, 1.80%)</title><rect x="23.0261%" y="549" width="1.8039%" height="15" fill="rgb(245,21,50)" fg:x="76882" fg:w="6023"/><text x="23.2761%" y="559.50">p..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (63,276 samples, 18.95%)</title><rect x="5.8816%" y="565" width="18.9511%" height="15" fill="rgb(228,9,43)" fg:x="19638" fg:w="63276"/><text x="6.1316%" y="575.50">bevy_ecs::schedule::schedule::..</text></g><g><title>bevy_ecs::world::World::try_run_schedule::_{{closure}} (63,278 samples, 18.95%)</title><rect x="5.8813%" y="581" width="18.9517%" height="15" fill="rgb(208,100,47)" fg:x="19637" fg:w="63278"/><text x="6.1313%" y="591.50">bevy_ecs::world::World::try_ru..</text></g><g><title>&lt;dyn bevy_ecs::schedule::set::ScheduleLabel as bevy_ecs::intern::Internable&gt;::ref_hash (45 samples, 0.01%)</title><rect x="24.8356%" y="565" width="0.0135%" height="15" fill="rgb(232,26,8)" fg:x="82924" fg:w="45"/><text x="25.0856%" y="575.50"></text></g><g><title>bevy_ecs::world::World::try_schedule_scope (107 samples, 0.03%)</title><rect x="24.8330%" y="581" width="0.0320%" height="15" fill="rgb(216,166,38)" fg:x="82915" fg:w="107"/><text x="25.0830%" y="591.50"></text></g><g><title>core::ptr::write (36 samples, 0.01%)</title><rect x="24.8542%" y="565" width="0.0108%" height="15" fill="rgb(251,202,51)" fg:x="82986" fg:w="36"/><text x="25.1042%" y="575.50"></text></g><g><title>_platform_memmove (35 samples, 0.01%)</title><rect x="24.8545%" y="549" width="0.0105%" height="15" fill="rgb(254,216,34)" fg:x="82987" fg:w="35"/><text x="25.1045%" y="559.50"></text></g><g><title>bevy_ecs::world::World::try_run_schedule (63,469 samples, 19.01%)</title><rect x="5.8624%" y="597" width="19.0089%" height="15" fill="rgb(251,32,27)" fg:x="19574" fg:w="63469"/><text x="6.1124%" y="607.50">bevy_ecs::world::World::try_ru..</text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (63,485 samples, 19.01%)</title><rect x="5.8594%" y="661" width="19.0137%" height="15" fill="rgb(208,127,28)" fg:x="19564" fg:w="63485"/><text x="6.1094%" y="671.50">&lt;bevy_ecs::schedule::executor:..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (63,484 samples, 19.01%)</title><rect x="5.8597%" y="645" width="19.0134%" height="15" fill="rgb(224,137,22)" fg:x="19565" fg:w="63484"/><text x="6.1097%" y="655.50">bevy_ecs::schedule::executor::..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (63,483 samples, 19.01%)</title><rect x="5.8600%" y="629" width="19.0131%" height="15" fill="rgb(254,70,32)" fg:x="19566" fg:w="63483"/><text x="6.1100%" y="639.50">bevy_ecs::system::system::Syst..</text></g><g><title>core::ops::function::FnMut::call_mut (63,482 samples, 19.01%)</title><rect x="5.8603%" y="613" width="19.0128%" height="15" fill="rgb(229,75,37)" fg:x="19567" fg:w="63482"/><text x="6.1103%" y="623.50">core::ops::function::FnMut::ca..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (63,506 samples, 19.02%)</title><rect x="5.8582%" y="677" width="19.0200%" height="15" fill="rgb(252,64,23)" fg:x="19560" fg:w="63506"/><text x="6.1082%" y="687.50">bevy_ecs::schedule::schedule::..</text></g><g><title>bevy_ecs::world::World::run_schedule::_{{closure}} (63,507 samples, 19.02%)</title><rect x="5.8582%" y="693" width="19.0203%" height="15" fill="rgb(232,162,48)" fg:x="19560" fg:w="63507"/><text x="6.1082%" y="703.50">bevy_ecs::world::World::run_sc..</text></g><g><title>bevy_app::sub_app::SubApps::update (63,524 samples, 19.03%)</title><rect x="5.8564%" y="709" width="19.0254%" height="15" fill="rgb(246,160,12)" fg:x="19554" fg:w="63524"/><text x="6.1064%" y="719.50">bevy_app::sub_app::SubApps::up..</text></g><g><title>bevy_app::app::App::update (70,296 samples, 21.05%)</title><rect x="3.8285%" y="725" width="21.0536%" height="15" fill="rgb(247,166,0)" fg:x="12783" fg:w="70296"/><text x="4.0785%" y="735.50">bevy_app::app::App::update</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (53 samples, 0.02%)</title><rect x="24.9030%" y="677" width="0.0159%" height="15" fill="rgb(249,219,21)" fg:x="83149" fg:w="53"/><text x="25.1530%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (56 samples, 0.02%)</title><rect x="24.9024%" y="693" width="0.0168%" height="15" fill="rgb(205,209,3)" fg:x="83147" fg:w="56"/><text x="25.1524%" y="703.50"></text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;mut T&gt;::update_component_access (66 samples, 0.02%)</title><rect x="24.9006%" y="725" width="0.0198%" height="15" fill="rgb(243,44,1)" fg:x="83141" fg:w="66"/><text x="25.1506%" y="735.50"></text></g><g><title>fixedbitset::FixedBitSet::grow (63 samples, 0.02%)</title><rect x="24.9015%" y="709" width="0.0189%" height="15" fill="rgb(206,159,16)" fg:x="83144" fg:w="63"/><text x="25.1515%" y="719.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::new_archetype_internal (63 samples, 0.02%)</title><rect x="24.9453%" y="725" width="0.0189%" height="15" fill="rgb(244,77,30)" fg:x="83290" fg:w="63"/><text x="25.1953%" y="735.50"></text></g><g><title>_malloc_zone_realloc (35 samples, 0.01%)</title><rect x="25.0088%" y="613" width="0.0105%" height="15" fill="rgb(218,69,12)" fg:x="83502" fg:w="35"/><text x="25.2588%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (41 samples, 0.01%)</title><rect x="25.0076%" y="661" width="0.0123%" height="15" fill="rgb(212,87,7)" fg:x="83498" fg:w="41"/><text x="25.2576%" y="671.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (37 samples, 0.01%)</title><rect x="25.0088%" y="645" width="0.0111%" height="15" fill="rgb(245,114,25)" fg:x="83502" fg:w="37"/><text x="25.2588%" y="655.50"></text></g><g><title>_realloc (37 samples, 0.01%)</title><rect x="25.0088%" y="629" width="0.0111%" height="15" fill="rgb(210,61,42)" fg:x="83502" fg:w="37"/><text x="25.2588%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (42 samples, 0.01%)</title><rect x="25.0076%" y="677" width="0.0126%" height="15" fill="rgb(211,52,33)" fg:x="83498" fg:w="42"/><text x="25.2576%" y="687.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetype_component_access::_{{closure}} (46 samples, 0.01%)</title><rect x="25.0070%" y="709" width="0.0138%" height="15" fill="rgb(234,58,33)" fg:x="83496" fg:w="46"/><text x="25.2570%" y="719.50"></text></g><g><title>fixedbitset::FixedBitSet::grow (45 samples, 0.01%)</title><rect x="25.0073%" y="693" width="0.0135%" height="15" fill="rgb(220,115,36)" fg:x="83497" fg:w="45"/><text x="25.2573%" y="703.50"></text></g><g><title>fixedbitset::FixedBitSet::grow (38 samples, 0.01%)</title><rect x="25.0330%" y="709" width="0.0114%" height="15" fill="rgb(243,153,54)" fg:x="83583" fg:w="38"/><text x="25.2830%" y="719.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::new_with_access (270 samples, 0.08%)</title><rect x="24.9647%" y="725" width="0.0809%" height="15" fill="rgb(251,47,18)" fg:x="83355" fg:w="270"/><text x="25.2147%" y="735.50"></text></g><g><title>bevy_ecs::system::system_param::init_query_param (56 samples, 0.02%)</title><rect x="25.0681%" y="725" width="0.0168%" height="15" fill="rgb(242,102,42)" fg:x="83700" fg:w="56"/><text x="25.3181%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (34 samples, 0.01%)</title><rect x="25.0747%" y="709" width="0.0102%" height="15" fill="rgb(234,31,38)" fg:x="83722" fg:w="34"/><text x="25.3247%" y="719.50"></text></g><g><title>bevy_winit::state::WinitAppRunnerState&lt;T&gt;::redraw_requested (37 samples, 0.01%)</title><rect x="25.0890%" y="725" width="0.0111%" height="15" fill="rgb(221,117,51)" fg:x="83770" fg:w="37"/><text x="25.3390%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_ecs::system::commands::_::FetchState,bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,&amp;mut bevy_window::window::Window,core::option::Option&lt;&amp;bevy_window::raw_handle::RawHandleWrapperHolder&gt;),bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt;&gt;,bevy_ecs::event::writer::_::FetchState&lt;bevy_window::event::WindowCreated&gt;,bevy_ecs::component::ComponentId,bevy_ecs::component::ComponentId,bevy_ecs::component::ComponentId,bevy_ecs::component::ComponentId,bevy_ecs::component::ComponentId)&gt; (49 samples, 0.01%)</title><rect x="25.1340%" y="725" width="0.0147%" height="15" fill="rgb(212,20,18)" fg:x="83920" fg:w="49"/><text x="25.3840%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37 samples, 0.01%)</title><rect x="25.1375%" y="709" width="0.0111%" height="15" fill="rgb(245,133,36)" fg:x="83932" fg:w="37"/><text x="25.3875%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::query::access::FilteredAccessSet&lt;bevy_ecs::component::ComponentId&gt;&gt; (36 samples, 0.01%)</title><rect x="25.1507%" y="709" width="0.0108%" height="15" fill="rgb(212,6,19)" fg:x="83976" fg:w="36"/><text x="25.4007%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemState&lt;(bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::winit_windows::WinitWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_winit::state::CustomCursorCache&gt;,bevy_ecs::system::query::Query&lt;(bevy_ecs::entity::Entity,&amp;mut bevy_winit::state::PendingCursor),bevy_ecs::query::filter::Changed&lt;bevy_winit::state::PendingCursor&gt;&gt;)&gt;&gt; (65 samples, 0.02%)</title><rect x="25.1501%" y="725" width="0.0195%" height="15" fill="rgb(218,1,36)" fg:x="83974" fg:w="65"/><text x="25.4001%" y="735.50"></text></g><g><title>free_tiny (38 samples, 0.01%)</title><rect x="25.1732%" y="677" width="0.0114%" height="15" fill="rgb(246,84,54)" fg:x="84051" fg:w="38"/><text x="25.4232%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::query::access::FilteredAccessSet&lt;bevy_ecs::component::ComponentId&gt;&gt; (49 samples, 0.01%)</title><rect x="25.1702%" y="709" width="0.0147%" height="15" fill="rgb(242,110,6)" fg:x="84041" fg:w="49"/><text x="25.4202%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (40 samples, 0.01%)</title><rect x="25.1729%" y="693" width="0.0120%" height="15" fill="rgb(214,47,5)" fg:x="84050" fg:w="40"/><text x="25.4229%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemState&lt;(bevy_ecs::change_detection::Res&lt;bevy_winit::winit_config::WinitSettings&gt;,bevy_ecs::system::query::Query&lt;(bevy_ecs::entity::Entity,&amp;bevy_window::window::Window)&gt;)&gt;&gt; (74 samples, 0.02%)</title><rect x="25.1696%" y="725" width="0.0222%" height="15" fill="rgb(218,159,25)" fg:x="84039" fg:w="74"/><text x="25.4196%" y="735.50"></text></g><g><title>free_tiny (75 samples, 0.02%)</title><rect x="25.2091%" y="677" width="0.0225%" height="15" fill="rgb(215,211,28)" fg:x="84171" fg:w="75"/><text x="25.4591%" y="687.50"></text></g><g><title>tiny_free_no_lock (42 samples, 0.01%)</title><rect x="25.2190%" y="661" width="0.0126%" height="15" fill="rgb(238,59,32)" fg:x="84204" fg:w="42"/><text x="25.4690%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::query::access::FilteredAccessSet&lt;bevy_ecs::component::ComponentId&gt;&gt; (110 samples, 0.03%)</title><rect x="25.1989%" y="709" width="0.0329%" height="15" fill="rgb(226,82,3)" fg:x="84137" fg:w="110"/><text x="25.4489%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (89 samples, 0.03%)</title><rect x="25.2052%" y="693" width="0.0267%" height="15" fill="rgb(240,164,32)" fg:x="84158" fg:w="89"/><text x="25.4552%" y="703.50"></text></g><g><title>free_tiny (42 samples, 0.01%)</title><rect x="25.2328%" y="693" width="0.0126%" height="15" fill="rgb(232,46,7)" fg:x="84250" fg:w="42"/><text x="25.4828%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemState&lt;(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;(bevy_ecs::entity::Entity,&amp;mut bevy_window::window::Window,core::option::Option&lt;&amp;bevy_window::raw_handle::RawHandleWrapperHolder&gt;),bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt;&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::WindowCreated&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::winit_windows::WinitWindows&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::accessibility::AccessKitAdapters&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_winit::accessibility::WinitActionRequestHandlers&gt;,bevy_ecs::change_detection::Res&lt;bevy_a11y::AccessibilityRequested&gt;,bevy_ecs::change_detection::Res&lt;bevy_winit::winit_monitors::WinitMonitors&gt;)&gt;&gt; (158 samples, 0.05%)</title><rect x="25.1983%" y="725" width="0.0473%" height="15" fill="rgb(229,129,53)" fg:x="84135" fg:w="158"/><text x="25.4483%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (46 samples, 0.01%)</title><rect x="25.2319%" y="709" width="0.0138%" height="15" fill="rgb(234,188,29)" fg:x="84247" fg:w="46"/><text x="25.4819%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (36 samples, 0.01%)</title><rect x="25.2597%" y="725" width="0.0108%" height="15" fill="rgb(246,141,4)" fg:x="84340" fg:w="36"/><text x="25.5097%" y="735.50"></text></g><g><title>mach_msg (84 samples, 0.03%)</title><rect x="25.2780%" y="693" width="0.0252%" height="15" fill="rgb(229,23,39)" fg:x="84401" fg:w="84"/><text x="25.5280%" y="703.50"></text></g><g><title>mach_msg_overwrite (84 samples, 0.03%)</title><rect x="25.2780%" y="677" width="0.0252%" height="15" fill="rgb(206,12,3)" fg:x="84401" fg:w="84"/><text x="25.5280%" y="687.50"></text></g><g><title>mach_msg2_internal (81 samples, 0.02%)</title><rect x="25.2789%" y="661" width="0.0243%" height="15" fill="rgb(252,226,20)" fg:x="84404" fg:w="81"/><text x="25.5289%" y="671.50"></text></g><g><title>mach_msg2_trap (81 samples, 0.02%)</title><rect x="25.2789%" y="645" width="0.0243%" height="15" fill="rgb(216,123,35)" fg:x="84404" fg:w="81"/><text x="25.5289%" y="655.50"></text></g><g><title>winit::platform_impl::macos::observer::RunLoop::wakeup (101 samples, 0.03%)</title><rect x="25.2735%" y="725" width="0.0302%" height="15" fill="rgb(212,68,40)" fg:x="84386" fg:w="101"/><text x="25.5235%" y="735.50"></text></g><g><title>CFRunLoopWakeUp (101 samples, 0.03%)</title><rect x="25.2735%" y="709" width="0.0302%" height="15" fill="rgb(254,125,32)" fg:x="84386" fg:w="101"/><text x="25.5235%" y="719.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (72,316 samples, 21.66%)</title><rect x="3.6458%" y="789" width="21.6586%" height="15" fill="rgb(253,97,22)" fg:x="12173" fg:w="72316"/><text x="3.8958%" y="799.50">__CFRUNLOOP_IS_CALLING_OUT_TO_AN_O..</text></g><g><title>winit::platform_impl::macos::observer::control_flow_end_handler (72,128 samples, 21.60%)</title><rect x="3.7021%" y="773" width="21.6023%" height="15" fill="rgb(241,101,14)" fg:x="12361" fg:w="72128"/><text x="3.9521%" y="783.50">winit::platform_impl::macos::obser..</text></g><g><title>winit::platform_impl::macos::app_state::ApplicationDelegate::handle_event (72,114 samples, 21.60%)</title><rect x="3.7063%" y="757" width="21.5981%" height="15" fill="rgb(238,103,29)" fg:x="12375" fg:w="72114"/><text x="3.9563%" y="767.50">winit::platform_impl::macos::app_s..</text></g><g><title>winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (72,108 samples, 21.60%)</title><rect x="3.7081%" y="741" width="21.5963%" height="15" fill="rgb(233,195,47)" fg:x="12381" fg:w="72108"/><text x="3.9581%" y="751.50">winit::platform_impl::macos::event..</text></g><g><title>__CFRunLoopDoObservers (72,382 samples, 21.68%)</title><rect x="3.6350%" y="805" width="21.6783%" height="15" fill="rgb(246,218,30)" fg:x="12137" fg:w="72382"/><text x="3.8850%" y="815.50">__CFRunLoopDoObservers</text></g><g><title>mach_msg (75 samples, 0.02%)</title><rect x="25.3214%" y="789" width="0.0225%" height="15" fill="rgb(219,145,47)" fg:x="84546" fg:w="75"/><text x="25.5714%" y="799.50"></text></g><g><title>mach_msg_overwrite (75 samples, 0.02%)</title><rect x="25.3214%" y="773" width="0.0225%" height="15" fill="rgb(243,12,26)" fg:x="84546" fg:w="75"/><text x="25.5714%" y="783.50"></text></g><g><title>mach_msg2_internal (75 samples, 0.02%)</title><rect x="25.3214%" y="757" width="0.0225%" height="15" fill="rgb(214,87,16)" fg:x="84546" fg:w="75"/><text x="25.5714%" y="767.50"></text></g><g><title>mach_msg2_trap (75 samples, 0.02%)</title><rect x="25.3214%" y="741" width="0.0225%" height="15" fill="rgb(208,99,42)" fg:x="84546" fg:w="75"/><text x="25.5714%" y="751.50"></text></g><g><title>__CFRunLoopServiceMachPort (82 samples, 0.02%)</title><rect x="25.3208%" y="805" width="0.0246%" height="15" fill="rgb(253,99,2)" fg:x="84544" fg:w="82"/><text x="25.5708%" y="815.50"></text></g><g><title>__kdebug_trace64 (54 samples, 0.02%)</title><rect x="25.3526%" y="805" width="0.0162%" height="15" fill="rgb(220,168,23)" fg:x="84650" fg:w="54"/><text x="25.6026%" y="815.50"></text></g><g><title>mach_port_insert_member (52 samples, 0.02%)</title><rect x="25.3801%" y="805" width="0.0156%" height="15" fill="rgb(242,38,24)" fg:x="84742" fg:w="52"/><text x="25.6301%" y="815.50"></text></g><g><title>_kernelrpc_mach_port_insert_member_trap (51 samples, 0.02%)</title><rect x="25.3804%" y="789" width="0.0153%" height="15" fill="rgb(225,182,9)" fg:x="84743" fg:w="51"/><text x="25.6304%" y="799.50"></text></g><g><title>__CFRunLoopRun (72,696 samples, 21.77%)</title><rect x="3.6245%" y="821" width="21.7724%" height="15" fill="rgb(243,178,37)" fg:x="12102" fg:w="72696"/><text x="3.8745%" y="831.50">__CFRunLoopRun</text></g><g><title>CFRunLoopRunSpecific (72,877 samples, 21.83%)</title><rect x="3.5727%" y="837" width="21.8266%" height="15" fill="rgb(232,139,19)" fg:x="11929" fg:w="72877"/><text x="3.8227%" y="847.50">CFRunLoopRunSpecific</text></g><g><title>CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (44 samples, 0.01%)</title><rect x="25.4032%" y="789" width="0.0132%" height="15" fill="rgb(225,201,24)" fg:x="84819" fg:w="44"/><text x="25.6532%" y="799.50"></text></g><g><title>_NotifyEventLoopObservers (60 samples, 0.02%)</title><rect x="25.4026%" y="837" width="0.0180%" height="15" fill="rgb(221,47,46)" fg:x="84817" fg:w="60"/><text x="25.6526%" y="847.50"></text></g><g><title>MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (60 samples, 0.02%)</title><rect x="25.4026%" y="821" width="0.0180%" height="15" fill="rgb(249,23,13)" fg:x="84817" fg:w="60"/><text x="25.6526%" y="831.50"></text></g><g><title>Convert1CGEvent(unsigned char) (60 samples, 0.02%)</title><rect x="25.4026%" y="805" width="0.0180%" height="15" fill="rgb(219,9,5)" fg:x="84817" fg:w="60"/><text x="25.6526%" y="815.50"></text></g><g><title>RunCurrentEventLoopInMode (72,949 samples, 21.85%)</title><rect x="3.5727%" y="853" width="21.8481%" height="15" fill="rgb(254,171,16)" fg:x="11929" fg:w="72949"/><text x="3.8227%" y="863.50">RunCurrentEventLoopInMode</text></g><g><title>ReceiveNextEventCommon (72,982 samples, 21.86%)</title><rect x="3.5691%" y="869" width="21.8580%" height="15" fill="rgb(230,171,20)" fg:x="11917" fg:w="72982"/><text x="3.8191%" y="879.50">ReceiveNextEventCommon</text></g><g><title>_BlockUntilNextEventMatchingListInModeWithFilter (72,985 samples, 21.86%)</title><rect x="3.5685%" y="885" width="21.8589%" height="15" fill="rgb(210,71,41)" fg:x="11915" fg:w="72985"/><text x="3.8185%" y="895.50">_BlockUntilNextEventMatchingListInM..</text></g><g><title>_DPSNextEvent (73,013 samples, 21.87%)</title><rect x="3.5616%" y="901" width="21.8673%" height="15" fill="rgb(206,173,20)" fg:x="11892" fg:w="73013"/><text x="3.8116%" y="911.50">_DPSNextEvent</text></g><g><title>_LSCopyFrontApplication (38 samples, 0.01%)</title><rect x="25.4400%" y="885" width="0.0114%" height="15" fill="rgb(233,88,34)" fg:x="84942" fg:w="38"/><text x="25.6900%" y="895.50"></text></g><g><title>_NS_SetBasicPasteTelemetry (70 samples, 0.02%)</title><rect x="25.4361%" y="901" width="0.0210%" height="15" fill="rgb(223,209,46)" fg:x="84929" fg:w="70"/><text x="25.6861%" y="911.50"></text></g><g><title>-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (73,192 samples, 21.92%)</title><rect x="3.5422%" y="917" width="21.9209%" height="15" fill="rgb(250,43,18)" fg:x="11827" fg:w="73192"/><text x="3.7922%" y="927.50">-[NSApplication(NSEventRouting) _ne..</text></g><g><title>&lt;() as objc2::encode::EncodeArguments&gt;::__invoke (73,459 samples, 22.00%)</title><rect x="3.4631%" y="949" width="22.0009%" height="15" fill="rgb(208,13,10)" fg:x="11563" fg:w="73459"/><text x="3.7131%" y="959.50">&lt;() as objc2::encode::EncodeArgumen..</text></g><g><title>-[NSApplication run] (73,459 samples, 22.00%)</title><rect x="3.4631%" y="933" width="22.0009%" height="15" fill="rgb(212,200,36)" fg:x="11563" fg:w="73459"/><text x="3.7131%" y="943.50">-[NSApplication run]</text></g><g><title>BoxSlayer2d::main (73,480 samples, 22.01%)</title><rect x="3.4631%" y="981" width="22.0072%" height="15" fill="rgb(225,90,30)" fg:x="11563" fg:w="73480"/><text x="3.7131%" y="991.50">BoxSlayer2d::main</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (73,480 samples, 22.01%)</title><rect x="3.4631%" y="965" width="22.0072%" height="15" fill="rgb(236,182,39)" fg:x="11563" fg:w="73480"/><text x="3.7131%" y="975.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>start (73,642 samples, 22.06%)</title><rect x="3.4149%" y="1061" width="22.0557%" height="15" fill="rgb(212,144,35)" fg:x="11402" fg:w="73642"/><text x="3.6649%" y="1071.50">start</text></g><g><title>main (73,600 samples, 22.04%)</title><rect x="3.4275%" y="1045" width="22.0431%" height="15" fill="rgb(228,63,44)" fg:x="11444" fg:w="73600"/><text x="3.6775%" y="1055.50">main</text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (73,600 samples, 22.04%)</title><rect x="3.4275%" y="1029" width="22.0431%" height="15" fill="rgb(228,109,6)" fg:x="11444" fg:w="73600"/><text x="3.6775%" y="1039.50">core::ops::function::impls::_&lt;impl ..</text></g><g><title>std::rt::lang_start::_{{closure}} (73,600 samples, 22.04%)</title><rect x="3.4275%" y="1013" width="22.0431%" height="15" fill="rgb(238,117,24)" fg:x="11444" fg:w="73600"/><text x="3.6775%" y="1023.50">std::rt::lang_start::_{{closure}}</text></g><g><title>core::ops::function::FnOnce::call_once (73,600 samples, 22.04%)</title><rect x="3.4275%" y="997" width="22.0431%" height="15" fill="rgb(242,26,26)" fg:x="11444" fg:w="73600"/><text x="3.6775%" y="1007.50">core::ops::function::FnOnce::call_o..</text></g><g><title>_dispatch_kevent_mach_msg_recv (41 samples, 0.01%)</title><rect x="25.5925%" y="997" width="0.0123%" height="15" fill="rgb(221,92,48)" fg:x="85451" fg:w="41"/><text x="25.8425%" y="1007.50"></text></g><g><title>szone_malloc_should_clear (84 samples, 0.03%)</title><rect x="25.6527%" y="933" width="0.0252%" height="15" fill="rgb(209,209,32)" fg:x="85652" fg:w="84"/><text x="25.9027%" y="943.50"></text></g><g><title>tiny_malloc_should_clear (80 samples, 0.02%)</title><rect x="25.6539%" y="917" width="0.0240%" height="15" fill="rgb(221,70,22)" fg:x="85656" fg:w="80"/><text x="25.9039%" y="927.50"></text></g><g><title>tiny_malloc_from_free_list (56 samples, 0.02%)</title><rect x="25.6611%" y="901" width="0.0168%" height="15" fill="rgb(248,145,5)" fg:x="85680" fg:w="56"/><text x="25.9111%" y="911.50"></text></g><g><title>class_createInstance (112 samples, 0.03%)</title><rect x="25.6452%" y="949" width="0.0335%" height="15" fill="rgb(226,116,26)" fg:x="85627" fg:w="112"/><text x="25.8952%" y="959.50"></text></g><g><title>_os_object_alloc_realized (119 samples, 0.04%)</title><rect x="25.6434%" y="965" width="0.0356%" height="15" fill="rgb(244,5,17)" fg:x="85621" fg:w="119"/><text x="25.8934%" y="975.50"></text></g><g><title>dispatch_mach_msg_create (137 samples, 0.04%)</title><rect x="25.6389%" y="981" width="0.0410%" height="15" fill="rgb(252,159,33)" fg:x="85606" fg:w="137"/><text x="25.8889%" y="991.50"></text></g><g><title>_dispatch_mach_merge_msg (232 samples, 0.07%)</title><rect x="25.6131%" y="997" width="0.0695%" height="15" fill="rgb(206,71,0)" fg:x="85520" fg:w="232"/><text x="25.8631%" y="1007.50"></text></g><g><title>_dispatch_event_loop_merge (510 samples, 0.15%)</title><rect x="25.5455%" y="1013" width="0.1527%" height="15" fill="rgb(233,118,54)" fg:x="85294" fg:w="510"/><text x="25.7955%" y="1023.50"></text></g><g><title>tiny_free_list_add_ptr (55 samples, 0.02%)</title><rect x="25.9213%" y="869" width="0.0165%" height="15" fill="rgb(234,83,48)" fg:x="86549" fg:w="55"/><text x="26.1713%" y="879.50"></text></g><g><title>free_tiny (302 samples, 0.09%)</title><rect x="25.8501%" y="901" width="0.0904%" height="15" fill="rgb(228,3,54)" fg:x="86311" fg:w="302"/><text x="26.1001%" y="911.50"></text></g><g><title>tiny_free_no_lock (161 samples, 0.05%)</title><rect x="25.8923%" y="885" width="0.0482%" height="15" fill="rgb(226,155,13)" fg:x="86452" fg:w="161"/><text x="26.1423%" y="895.50"></text></g><g><title>_object_remove_associations (130 samples, 0.04%)</title><rect x="25.9471%" y="869" width="0.0389%" height="15" fill="rgb(241,28,37)" fg:x="86635" fg:w="130"/><text x="26.1971%" y="879.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (93 samples, 0.03%)</title><rect x="25.9582%" y="853" width="0.0279%" height="15" fill="rgb(233,93,10)" fg:x="86672" fg:w="93"/><text x="26.2082%" y="863.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (84 samples, 0.03%)</title><rect x="25.9609%" y="837" width="0.0252%" height="15" fill="rgb(225,113,19)" fg:x="86681" fg:w="84"/><text x="26.2109%" y="847.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (177 samples, 0.05%)</title><rect x="25.9438%" y="885" width="0.0530%" height="15" fill="rgb(241,2,18)" fg:x="86624" fg:w="177"/><text x="26.1938%" y="895.50"></text></g><g><title>objc_object::sidetable_clearDeallocating() (36 samples, 0.01%)</title><rect x="25.9860%" y="869" width="0.0108%" height="15" fill="rgb(228,207,21)" fg:x="86765" fg:w="36"/><text x="26.2360%" y="879.50"></text></g><g><title>objc_destructInstance (187 samples, 0.06%)</title><rect x="25.9414%" y="901" width="0.0560%" height="15" fill="rgb(213,211,35)" fg:x="86616" fg:w="187"/><text x="26.1914%" y="911.50"></text></g><g><title>_Block_release (601 samples, 0.18%)</title><rect x="25.8195%" y="917" width="0.1800%" height="15" fill="rgb(209,83,10)" fg:x="86209" fg:w="601"/><text x="26.0695%" y="927.50"></text></g><g><title>_call_dispose_helpers_excp (672 samples, 0.20%)</title><rect x="25.8126%" y="933" width="0.2013%" height="15" fill="rgb(209,164,1)" fg:x="86186" fg:w="672"/><text x="26.0626%" y="943.50"></text></g><g><title>_os_unfair_lock_unlock_slow (43 samples, 0.01%)</title><rect x="26.0199%" y="933" width="0.0129%" height="15" fill="rgb(213,184,43)" fg:x="86878" fg:w="43"/><text x="26.2699%" y="943.50"></text></g><g><title>__ulock_wake (41 samples, 0.01%)</title><rect x="26.0205%" y="917" width="0.0123%" height="15" fill="rgb(231,61,34)" fg:x="86880" fg:w="41"/><text x="26.2705%" y="927.50"></text></g><g><title>_os_unfair_lock_lock_slow (63 samples, 0.02%)</title><rect x="26.0888%" y="917" width="0.0189%" height="15" fill="rgb(235,75,3)" fg:x="87108" fg:w="63"/><text x="26.3388%" y="927.50"></text></g><g><title>tiny_free_list_add_ptr (77 samples, 0.02%)</title><rect x="26.1493%" y="901" width="0.0231%" height="15" fill="rgb(220,106,47)" fg:x="87310" fg:w="77"/><text x="26.3993%" y="911.50"></text></g><g><title>free_tiny (447 samples, 0.13%)</title><rect x="26.0417%" y="933" width="0.1339%" height="15" fill="rgb(210,196,33)" fg:x="86951" fg:w="447"/><text x="26.2917%" y="943.50"></text></g><g><title>tiny_free_no_lock (195 samples, 0.06%)</title><rect x="26.1172%" y="917" width="0.0584%" height="15" fill="rgb(229,154,42)" fg:x="87203" fg:w="195"/><text x="26.3672%" y="927.50"></text></g><g><title>_object_remove_associations (138 samples, 0.04%)</title><rect x="26.1837%" y="901" width="0.0413%" height="15" fill="rgb(228,114,26)" fg:x="87425" fg:w="138"/><text x="26.4337%" y="911.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (107 samples, 0.03%)</title><rect x="26.1930%" y="885" width="0.0320%" height="15" fill="rgb(208,144,1)" fg:x="87456" fg:w="107"/><text x="26.4430%" y="895.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (98 samples, 0.03%)</title><rect x="26.1957%" y="869" width="0.0294%" height="15" fill="rgb(239,112,37)" fg:x="87465" fg:w="98"/><text x="26.4457%" y="879.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (193 samples, 0.06%)</title><rect x="26.1819%" y="917" width="0.0578%" height="15" fill="rgb(210,96,50)" fg:x="87419" fg:w="193"/><text x="26.4319%" y="927.50"></text></g><g><title>objc_object::sidetable_clearDeallocating() (45 samples, 0.01%)</title><rect x="26.2262%" y="901" width="0.0135%" height="15" fill="rgb(222,178,2)" fg:x="87567" fg:w="45"/><text x="26.4762%" y="911.50"></text></g><g><title>objc_destructInstance (216 samples, 0.06%)</title><rect x="26.1762%" y="933" width="0.0647%" height="15" fill="rgb(226,74,18)" fg:x="87400" fg:w="216"/><text x="26.4262%" y="943.50"></text></g><g><title>_Block_release (1,460 samples, 0.44%)</title><rect x="25.8054%" y="949" width="0.4373%" height="15" fill="rgb(225,67,54)" fg:x="86162" fg:w="1460"/><text x="26.0554%" y="959.50"></text></g><g><title>+[FPCAMetalLayerState _layerStateForAddress:] (47 samples, 0.01%)</title><rect x="26.2523%" y="917" width="0.0141%" height="15" fill="rgb(251,92,32)" fg:x="87654" fg:w="47"/><text x="26.5023%" y="927.50"></text></g><g><title>free_tiny (105 samples, 0.03%)</title><rect x="26.3005%" y="789" width="0.0314%" height="15" fill="rgb(228,149,22)" fg:x="87815" fg:w="105"/><text x="26.5505%" y="799.50"></text></g><g><title>tiny_free_no_lock (71 samples, 0.02%)</title><rect x="26.3107%" y="773" width="0.0213%" height="15" fill="rgb(243,54,13)" fg:x="87849" fg:w="71"/><text x="26.5607%" y="783.50"></text></g><g><title>-[FPInFlightCommandBuffer dealloc] (127 samples, 0.04%)</title><rect x="26.2942%" y="805" width="0.0380%" height="15" fill="rgb(243,180,28)" fg:x="87794" fg:w="127"/><text x="26.5442%" y="815.50"></text></g><g><title>__RELEASE_OBJECTS_IN_THE_ARRAY__ (140 samples, 0.04%)</title><rect x="26.2927%" y="821" width="0.0419%" height="15" fill="rgb(208,167,24)" fg:x="87789" fg:w="140"/><text x="26.5427%" y="831.50"></text></g><g><title>-[__NSFrozenArrayM dealloc] (165 samples, 0.05%)</title><rect x="26.2921%" y="837" width="0.0494%" height="15" fill="rgb(245,73,45)" fg:x="87787" fg:w="165"/><text x="26.5421%" y="847.50"></text></g><g><title>_objc_rootDealloc (171 samples, 0.05%)</title><rect x="26.2912%" y="885" width="0.0512%" height="15" fill="rgb(237,203,48)" fg:x="87784" fg:w="171"/><text x="26.5412%" y="895.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (171 samples, 0.05%)</title><rect x="26.2912%" y="869" width="0.0512%" height="15" fill="rgb(211,197,16)" fg:x="87784" fg:w="171"/><text x="26.5412%" y="879.50"></text></g><g><title>object_cxxDestructFromClass(objc_object*, objc_class*) (170 samples, 0.05%)</title><rect x="26.2915%" y="853" width="0.0509%" height="15" fill="rgb(243,99,51)" fg:x="87785" fg:w="170"/><text x="26.5415%" y="863.50"></text></g><g><title>-[FPInFlightDrawableLifetime dealloc] (177 samples, 0.05%)</title><rect x="26.2912%" y="901" width="0.0530%" height="15" fill="rgb(215,123,29)" fg:x="87784" fg:w="177"/><text x="26.5412%" y="911.50"></text></g><g><title>__CFSimpleMergeSort (38 samples, 0.01%)</title><rect x="26.3646%" y="853" width="0.0114%" height="15" fill="rgb(239,186,37)" fg:x="88029" fg:w="38"/><text x="26.6146%" y="863.50"></text></g><g><title>CFSortIndexes (47 samples, 0.01%)</title><rect x="26.3628%" y="885" width="0.0141%" height="15" fill="rgb(252,136,39)" fg:x="88023" fg:w="47"/><text x="26.6128%" y="895.50"></text></g><g><title>__CFSimpleMergeSort (43 samples, 0.01%)</title><rect x="26.3640%" y="869" width="0.0129%" height="15" fill="rgb(223,213,32)" fg:x="88027" fg:w="43"/><text x="26.6140%" y="879.50"></text></g><g><title>-[NSMutableArray sortRange:options:usingComparator:] (81 samples, 0.02%)</title><rect x="26.3532%" y="901" width="0.0243%" height="15" fill="rgb(233,115,5)" fg:x="87991" fg:w="81"/><text x="26.6032%" y="911.50"></text></g><g><title>-[__NSArrayM insertObject:atIndex:] (69 samples, 0.02%)</title><rect x="26.3835%" y="901" width="0.0207%" height="15" fill="rgb(207,226,44)" fg:x="88092" fg:w="69"/><text x="26.6335%" y="911.50"></text></g><g><title>__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (542 samples, 0.16%)</title><rect x="26.2762%" y="917" width="0.1623%" height="15" fill="rgb(208,126,0)" fg:x="87734" fg:w="542"/><text x="26.5262%" y="927.50"></text></g><g><title>__65+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:]_block_invoke (96 samples, 0.03%)</title><rect x="26.4386%" y="917" width="0.0288%" height="15" fill="rgb(244,66,21)" fg:x="88276" fg:w="96"/><text x="26.6886%" y="927.50"></text></g><g><title>__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (736 samples, 0.22%)</title><rect x="26.2493%" y="933" width="0.2204%" height="15" fill="rgb(222,97,12)" fg:x="87644" fg:w="736"/><text x="26.4993%" y="943.50"></text></g><g><title>__CFNumberHash (106 samples, 0.03%)</title><rect x="26.5233%" y="885" width="0.0317%" height="15" fill="rgb(219,213,19)" fg:x="88559" fg:w="106"/><text x="26.7733%" y="895.50"></text></g><g><title>__CFNumberGetValue (58 samples, 0.02%)</title><rect x="26.5377%" y="869" width="0.0174%" height="15" fill="rgb(252,169,30)" fg:x="88607" fg:w="58"/><text x="26.7877%" y="879.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (238 samples, 0.07%)</title><rect x="26.4889%" y="901" width="0.0713%" height="15" fill="rgb(206,32,51)" fg:x="88444" fg:w="238"/><text x="26.7389%" y="911.50"></text></g><g><title>+[FPCAMetalLayerState _commandBufferForAddress:] (474 samples, 0.14%)</title><rect x="26.4817%" y="917" width="0.1420%" height="15" fill="rgb(250,172,42)" fg:x="88420" fg:w="474"/><text x="26.7317%" y="927.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (41 samples, 0.01%)</title><rect x="26.6440%" y="901" width="0.0123%" height="15" fill="rgb(209,34,43)" fg:x="88962" fg:w="41"/><text x="26.8940%" y="911.50"></text></g><g><title>mdict_removeObjectForKey (76 samples, 0.02%)</title><rect x="26.6608%" y="901" width="0.0228%" height="15" fill="rgb(223,11,35)" fg:x="89018" fg:w="76"/><text x="26.9108%" y="911.50"></text></g><g><title>__70+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:]_block_invoke (234 samples, 0.07%)</title><rect x="26.6386%" y="917" width="0.0701%" height="15" fill="rgb(251,219,26)" fg:x="88944" fg:w="234"/><text x="26.8886%" y="927.50"></text></g><g><title>-[__NSArrayM insertObject:atIndex:] (95 samples, 0.03%)</title><rect x="26.7159%" y="901" width="0.0285%" height="15" fill="rgb(231,119,3)" fg:x="89202" fg:w="95"/><text x="26.9659%" y="911.50"></text></g><g><title>szone_malloc_should_clear (38 samples, 0.01%)</title><rect x="26.7330%" y="885" width="0.0114%" height="15" fill="rgb(216,97,11)" fg:x="89259" fg:w="38"/><text x="26.9830%" y="895.50"></text></g><g><title>tiny_malloc_should_clear (36 samples, 0.01%)</title><rect x="26.7336%" y="869" width="0.0108%" height="15" fill="rgb(223,59,9)" fg:x="89261" fg:w="36"/><text x="26.9836%" y="879.50"></text></g><g><title>__76+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:]_block_invoke (196 samples, 0.06%)</title><rect x="26.7087%" y="917" width="0.0587%" height="15" fill="rgb(233,93,31)" fg:x="89178" fg:w="196"/><text x="26.9587%" y="927.50"></text></g><g><title>__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (1,076 samples, 0.32%)</title><rect x="26.4700%" y="933" width="0.3223%" height="15" fill="rgb(239,81,33)" fg:x="88381" fg:w="1076"/><text x="26.7200%" y="943.50"></text></g><g><title>__CFNumberHash (39 samples, 0.01%)</title><rect x="26.8402%" y="885" width="0.0117%" height="15" fill="rgb(213,120,34)" fg:x="89617" fg:w="39"/><text x="27.0902%" y="895.50"></text></g><g><title>-[__NSDictionaryM objectForKeyedSubscript:] (157 samples, 0.05%)</title><rect x="26.8090%" y="901" width="0.0470%" height="15" fill="rgb(243,49,53)" fg:x="89513" fg:w="157"/><text x="27.0590%" y="911.50"></text></g><g><title>+[FPCAMetalLayerState _commandBufferForAddress:] (231 samples, 0.07%)</title><rect x="26.8049%" y="917" width="0.0692%" height="15" fill="rgb(247,216,33)" fg:x="89499" fg:w="231"/><text x="27.0549%" y="927.50"></text></g><g><title>-[__NSDictionaryM setObject:forKeyedSubscript:] (98 samples, 0.03%)</title><rect x="26.8872%" y="917" width="0.0294%" height="15" fill="rgb(226,26,14)" fg:x="89774" fg:w="98"/><text x="27.1372%" y="927.50"></text></g><g><title>szone_malloc_should_clear (113 samples, 0.03%)</title><rect x="26.9294%" y="901" width="0.0338%" height="15" fill="rgb(215,49,53)" fg:x="89915" fg:w="113"/><text x="27.1794%" y="911.50"></text></g><g><title>tiny_malloc_should_clear (104 samples, 0.03%)</title><rect x="26.9321%" y="885" width="0.0311%" height="15" fill="rgb(245,162,40)" fg:x="89924" fg:w="104"/><text x="27.1821%" y="895.50"></text></g><g><title>tiny_malloc_from_free_list (90 samples, 0.03%)</title><rect x="26.9363%" y="869" width="0.0270%" height="15" fill="rgb(229,68,17)" fg:x="89938" fg:w="90"/><text x="27.1863%" y="879.50"></text></g><g><title>_objc_rootAllocWithZone (132 samples, 0.04%)</title><rect x="26.9265%" y="917" width="0.0395%" height="15" fill="rgb(213,182,10)" fg:x="89905" fg:w="132"/><text x="27.1765%" y="927.50"></text></g><g><title>mach_continuous_time (97 samples, 0.03%)</title><rect x="26.9660%" y="917" width="0.0291%" height="15" fill="rgb(245,125,30)" fg:x="90037" fg:w="97"/><text x="27.2160%" y="927.50"></text></g><g><title>__56+[FPCAMetalLayerState commandBufferCreate:creationTime:]_block_invoke (776 samples, 0.23%)</title><rect x="26.7923%" y="933" width="0.2324%" height="15" fill="rgb(232,202,2)" fg:x="89457" fg:w="776"/><text x="27.0423%" y="943.50"></text></g><g><title>_dispatch_call_block_and_release (2,617 samples, 0.78%)</title><rect x="26.2436%" y="949" width="0.7838%" height="15" fill="rgb(237,140,51)" fg:x="87625" fg:w="2617"/><text x="26.4936%" y="959.50"></text></g><g><title>-[CAMetalDrawable dealloc] (48 samples, 0.01%)</title><rect x="27.0552%" y="869" width="0.0144%" height="15" fill="rgb(236,157,25)" fg:x="90335" fg:w="48"/><text x="27.3052%" y="879.50"></text></g><g><title>__RELEASE_OBJECTS_IN_THE_ARRAY__ (53 samples, 0.02%)</title><rect x="27.0546%" y="901" width="0.0159%" height="15" fill="rgb(219,209,0)" fg:x="90333" fg:w="53"/><text x="27.3046%" y="911.50"></text></g><g><title>-[CAMetalDrawable release] (52 samples, 0.02%)</title><rect x="27.0549%" y="885" width="0.0156%" height="15" fill="rgb(240,116,54)" fg:x="90334" fg:w="52"/><text x="27.3049%" y="895.50"></text></g><g><title>-[__NSArrayM dealloc] (59 samples, 0.02%)</title><rect x="27.0543%" y="917" width="0.0177%" height="15" fill="rgb(216,10,36)" fg:x="90332" fg:w="59"/><text x="27.3043%" y="927.50"></text></g><g><title>_dispatch_event_loop_poke (107 samples, 0.03%)</title><rect x="27.1097%" y="869" width="0.0320%" height="15" fill="rgb(222,72,44)" fg:x="90517" fg:w="107"/><text x="27.3597%" y="879.50"></text></g><g><title>_dispatch_kq_poll (105 samples, 0.03%)</title><rect x="27.1103%" y="853" width="0.0314%" height="15" fill="rgb(232,159,9)" fg:x="90519" fg:w="105"/><text x="27.3603%" y="863.50"></text></g><g><title>kevent_id (105 samples, 0.03%)</title><rect x="27.1103%" y="837" width="0.0314%" height="15" fill="rgb(210,39,32)" fg:x="90519" fg:w="105"/><text x="27.3603%" y="847.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (129 samples, 0.04%)</title><rect x="27.1091%" y="885" width="0.0386%" height="15" fill="rgb(216,194,45)" fg:x="90515" fg:w="129"/><text x="27.3591%" y="895.50"></text></g><g><title>+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (136 samples, 0.04%)</title><rect x="27.1091%" y="901" width="0.0407%" height="15" fill="rgb(218,18,35)" fg:x="90515" fg:w="136"/><text x="27.3591%" y="911.50"></text></g><g><title>mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (190 samples, 0.06%)</title><rect x="27.1091%" y="917" width="0.0569%" height="15" fill="rgb(207,83,51)" fg:x="90515" fg:w="190"/><text x="27.3591%" y="927.50"></text></g><g><title>layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (454 samples, 0.14%)</title><rect x="27.0379%" y="933" width="0.1360%" height="15" fill="rgb(225,63,43)" fg:x="90277" fg:w="454"/><text x="27.2879%" y="943.50"></text></g><g><title>invoke_presented_callback(void*) (465 samples, 0.14%)</title><rect x="27.0352%" y="949" width="0.1393%" height="15" fill="rgb(207,57,36)" fg:x="90268" fg:w="465"/><text x="27.2852%" y="959.50"></text></g><g><title>_dispatch_client_callout (4,587 samples, 1.37%)</title><rect x="25.8024%" y="965" width="1.3738%" height="15" fill="rgb(216,99,33)" fg:x="86152" fg:w="4587"/><text x="26.0524%" y="975.50"></text></g><g><title>_dispatch_kq_poll (820 samples, 0.25%)</title><rect x="27.2571%" y="773" width="0.2456%" height="15" fill="rgb(225,42,16)" fg:x="91009" fg:w="820"/><text x="27.5071%" y="783.50"></text></g><g><title>kevent_id (816 samples, 0.24%)</title><rect x="27.2583%" y="757" width="0.2444%" height="15" fill="rgb(220,201,45)" fg:x="91013" fg:w="816"/><text x="27.5083%" y="767.50"></text></g><g><title>_dispatch_event_loop_poke (826 samples, 0.25%)</title><rect x="27.2562%" y="789" width="0.2474%" height="15" fill="rgb(225,33,4)" fg:x="91006" fg:w="826"/><text x="27.5062%" y="799.50"></text></g><g><title>_Block_object_assign (85 samples, 0.03%)</title><rect x="27.5156%" y="725" width="0.0255%" height="15" fill="rgb(224,33,50)" fg:x="91872" fg:w="85"/><text x="27.7656%" y="735.50"></text></g><g><title>_Block_copy (84 samples, 0.03%)</title><rect x="27.5159%" y="709" width="0.0252%" height="15" fill="rgb(246,198,51)" fg:x="91873" fg:w="84"/><text x="27.7659%" y="719.50"></text></g><g><title>szone_malloc_should_clear (52 samples, 0.02%)</title><rect x="27.5254%" y="693" width="0.0156%" height="15" fill="rgb(205,22,4)" fg:x="91905" fg:w="52"/><text x="27.7754%" y="703.50"></text></g><g><title>tiny_malloc_should_clear (45 samples, 0.01%)</title><rect x="27.5275%" y="677" width="0.0135%" height="15" fill="rgb(206,3,8)" fg:x="91912" fg:w="45"/><text x="27.7775%" y="687.50"></text></g><g><title>_call_copy_helpers_excp (98 samples, 0.03%)</title><rect x="27.5141%" y="741" width="0.0294%" height="15" fill="rgb(251,23,15)" fg:x="91867" fg:w="98"/><text x="27.7641%" y="751.50"></text></g><g><title>dispatch_async (186 samples, 0.06%)</title><rect x="27.5099%" y="789" width="0.0557%" height="15" fill="rgb(252,88,28)" fg:x="91853" fg:w="186"/><text x="27.7599%" y="799.50"></text></g><g><title>_dispatch_Block_copy (182 samples, 0.05%)</title><rect x="27.5111%" y="773" width="0.0545%" height="15" fill="rgb(212,127,14)" fg:x="91857" fg:w="182"/><text x="27.7611%" y="783.50"></text></g><g><title>_Block_copy (177 samples, 0.05%)</title><rect x="27.5126%" y="757" width="0.0530%" height="15" fill="rgb(247,145,37)" fg:x="91862" fg:w="177"/><text x="27.7626%" y="767.50"></text></g><g><title>szone_malloc_should_clear (66 samples, 0.02%)</title><rect x="27.5458%" y="741" width="0.0198%" height="15" fill="rgb(209,117,53)" fg:x="91973" fg:w="66"/><text x="27.7958%" y="751.50"></text></g><g><title>tiny_malloc_should_clear (60 samples, 0.02%)</title><rect x="27.5476%" y="725" width="0.0180%" height="15" fill="rgb(212,90,42)" fg:x="91979" fg:w="60"/><text x="27.7976%" y="735.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (1,113 samples, 0.33%)</title><rect x="27.2445%" y="805" width="0.3333%" height="15" fill="rgb(218,164,37)" fg:x="90967" fg:w="1113"/><text x="27.4945%" y="815.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (1,133 samples, 0.34%)</title><rect x="27.2424%" y="821" width="0.3393%" height="15" fill="rgb(246,65,34)" fg:x="90960" fg:w="1133"/><text x="27.4924%" y="831.50"></text></g><g><title>_call_dispose_helpers_excp (36 samples, 0.01%)</title><rect x="27.5895%" y="789" width="0.0108%" height="15" fill="rgb(231,100,33)" fg:x="92119" fg:w="36"/><text x="27.8395%" y="799.50"></text></g><g><title>_Block_release (46 samples, 0.01%)</title><rect x="27.5892%" y="805" width="0.0138%" height="15" fill="rgb(228,126,14)" fg:x="92118" fg:w="46"/><text x="27.8392%" y="815.50"></text></g><g><title>+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:] (36 samples, 0.01%)</title><rect x="27.6309%" y="757" width="0.0108%" height="15" fill="rgb(215,173,21)" fg:x="92257" fg:w="36"/><text x="27.8809%" y="767.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (35 samples, 0.01%)</title><rect x="27.6312%" y="741" width="0.0105%" height="15" fill="rgb(210,6,40)" fg:x="92258" fg:w="35"/><text x="27.8812%" y="751.50"></text></g><g><title>layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (61 samples, 0.02%)</title><rect x="27.6294%" y="773" width="0.0183%" height="15" fill="rgb(212,48,18)" fg:x="92252" fg:w="61"/><text x="27.8794%" y="783.50"></text></g><g><title>mach_msg2_internal (208 samples, 0.06%)</title><rect x="27.6557%" y="693" width="0.0623%" height="15" fill="rgb(230,214,11)" fg:x="92340" fg:w="208"/><text x="27.9057%" y="703.50"></text></g><g><title>mach_msg2_trap (208 samples, 0.06%)</title><rect x="27.6557%" y="677" width="0.0623%" height="15" fill="rgb(254,105,39)" fg:x="92340" fg:w="208"/><text x="27.9057%" y="687.50"></text></g><g><title>CAImageQueuePing_ (215 samples, 0.06%)</title><rect x="27.6539%" y="741" width="0.0644%" height="15" fill="rgb(245,158,5)" fg:x="92334" fg:w="215"/><text x="27.9039%" y="751.50"></text></g><g><title>mach_msg (209 samples, 0.06%)</title><rect x="27.6557%" y="725" width="0.0626%" height="15" fill="rgb(249,208,11)" fg:x="92340" fg:w="209"/><text x="27.9057%" y="735.50"></text></g><g><title>mach_msg_overwrite (209 samples, 0.06%)</title><rect x="27.6557%" y="709" width="0.0626%" height="15" fill="rgb(210,39,28)" fg:x="92340" fg:w="209"/><text x="27.9057%" y="719.50"></text></g><g><title>CAImageQueueInsertImage_ (268 samples, 0.08%)</title><rect x="27.6518%" y="757" width="0.0803%" height="15" fill="rgb(211,56,53)" fg:x="92327" fg:w="268"/><text x="27.9018%" y="767.50"></text></g><g><title>layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (316 samples, 0.09%)</title><rect x="27.6476%" y="773" width="0.0946%" height="15" fill="rgb(226,201,30)" fg:x="92313" fg:w="316"/><text x="27.8976%" y="783.50"></text></g><g><title>-[CAMetalDrawable present] (449 samples, 0.13%)</title><rect x="27.6108%" y="789" width="0.1345%" height="15" fill="rgb(239,101,34)" fg:x="92190" fg:w="449"/><text x="27.8608%" y="799.50"></text></g><g><title>__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (480 samples, 0.14%)</title><rect x="27.6030%" y="805" width="0.1438%" height="15" fill="rgb(226,209,5)" fg:x="92164" fg:w="480"/><text x="27.8530%" y="815.50"></text></g><g><title>MTLDispatchListApply (533 samples, 0.16%)</title><rect x="27.5892%" y="821" width="0.1596%" height="15" fill="rgb(250,105,47)" fg:x="92118" fg:w="533"/><text x="27.8392%" y="831.50"></text></g><g><title>-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (1,788 samples, 0.54%)</title><rect x="27.2346%" y="837" width="0.5355%" height="15" fill="rgb(230,72,3)" fg:x="90934" fg:w="1788"/><text x="27.4846%" y="847.50"></text></g><g><title>_dispatch_kq_poll (879 samples, 0.26%)</title><rect x="27.7974%" y="741" width="0.2633%" height="15" fill="rgb(232,218,39)" fg:x="92813" fg:w="879"/><text x="28.0474%" y="751.50"></text></g><g><title>kevent_id (877 samples, 0.26%)</title><rect x="27.7980%" y="725" width="0.2627%" height="15" fill="rgb(248,166,6)" fg:x="92815" fg:w="877"/><text x="28.0480%" y="735.50"></text></g><g><title>_dispatch_event_loop_poke (889 samples, 0.27%)</title><rect x="27.7962%" y="757" width="0.2663%" height="15" fill="rgb(247,89,20)" fg:x="92809" fg:w="889"/><text x="28.0462%" y="767.50"></text></g><g><title>_Block_copy (69 samples, 0.02%)</title><rect x="28.0765%" y="677" width="0.0207%" height="15" fill="rgb(248,130,54)" fg:x="93745" fg:w="69"/><text x="28.3265%" y="687.50"></text></g><g><title>szone_malloc_should_clear (44 samples, 0.01%)</title><rect x="28.0840%" y="661" width="0.0132%" height="15" fill="rgb(234,196,4)" fg:x="93770" fg:w="44"/><text x="28.3340%" y="671.50"></text></g><g><title>tiny_malloc_should_clear (39 samples, 0.01%)</title><rect x="28.0855%" y="645" width="0.0117%" height="15" fill="rgb(250,143,31)" fg:x="93775" fg:w="39"/><text x="28.3355%" y="655.50"></text></g><g><title>_Block_object_assign (71 samples, 0.02%)</title><rect x="28.0765%" y="693" width="0.0213%" height="15" fill="rgb(211,110,34)" fg:x="93745" fg:w="71"/><text x="28.3265%" y="703.50"></text></g><g><title>_call_copy_helpers_excp (81 samples, 0.02%)</title><rect x="28.0744%" y="709" width="0.0243%" height="15" fill="rgb(215,124,48)" fg:x="93738" fg:w="81"/><text x="28.3244%" y="719.50"></text></g><g><title>szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="28.1014%" y="709" width="0.0165%" height="15" fill="rgb(216,46,13)" fg:x="93828" fg:w="55"/><text x="28.3514%" y="719.50"></text></g><g><title>tiny_malloc_should_clear (50 samples, 0.01%)</title><rect x="28.1029%" y="693" width="0.0150%" height="15" fill="rgb(205,184,25)" fg:x="93833" fg:w="50"/><text x="28.3529%" y="703.50"></text></g><g><title>_Block_copy (154 samples, 0.05%)</title><rect x="28.0720%" y="725" width="0.0461%" height="15" fill="rgb(228,1,10)" fg:x="93730" fg:w="154"/><text x="28.3220%" y="735.50"></text></g><g><title>dispatch_async (158 samples, 0.05%)</title><rect x="28.0711%" y="757" width="0.0473%" height="15" fill="rgb(213,116,27)" fg:x="93727" fg:w="158"/><text x="28.3211%" y="767.50"></text></g><g><title>_dispatch_Block_copy (156 samples, 0.05%)</title><rect x="28.0717%" y="741" width="0.0467%" height="15" fill="rgb(241,95,50)" fg:x="93729" fg:w="156"/><text x="28.3217%" y="751.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (1,132 samples, 0.34%)</title><rect x="27.7869%" y="773" width="0.3390%" height="15" fill="rgb(238,48,32)" fg:x="92778" fg:w="1132"/><text x="28.0369%" y="783.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (1,145 samples, 0.34%)</title><rect x="27.7851%" y="789" width="0.3429%" height="15" fill="rgb(235,113,49)" fg:x="92772" fg:w="1145"/><text x="28.0351%" y="799.50"></text></g><g><title>MTLDispatchListApply (36 samples, 0.01%)</title><rect x="28.1340%" y="789" width="0.0108%" height="15" fill="rgb(205,127,43)" fg:x="93937" fg:w="36"/><text x="28.3840%" y="799.50"></text></g><g><title>-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (1,247 samples, 0.37%)</title><rect x="27.7809%" y="805" width="0.3735%" height="15" fill="rgb(250,162,2)" fg:x="92758" fg:w="1247"/><text x="28.0309%" y="815.50"></text></g><g><title>MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (63 samples, 0.02%)</title><rect x="28.1637%" y="757" width="0.0189%" height="15" fill="rgb(220,13,41)" fg:x="94036" fg:w="63"/><text x="28.4137%" y="767.50"></text></g><g><title>objc_release (46 samples, 0.01%)</title><rect x="28.1688%" y="741" width="0.0138%" height="15" fill="rgb(249,221,25)" fg:x="94053" fg:w="46"/><text x="28.4188%" y="751.50"></text></g><g><title>-[MTLResourceList releaseAllObjectsAndReset] (593 samples, 0.18%)</title><rect x="28.1610%" y="773" width="0.1776%" height="15" fill="rgb(215,208,19)" fg:x="94027" fg:w="593"/><text x="28.4110%" y="783.50"></text></g><g><title>_platform_memset (520 samples, 0.16%)</title><rect x="28.1829%" y="757" width="0.1557%" height="15" fill="rgb(236,175,2)" fg:x="94100" fg:w="520"/><text x="28.4329%" y="767.50"></text></g><g><title>mach_absolute_time (267 samples, 0.08%)</title><rect x="28.4123%" y="741" width="0.0800%" height="15" fill="rgb(241,52,2)" fg:x="94866" fg:w="267"/><text x="28.6623%" y="751.50"></text></g><g><title>IOGPUMetalPooledResourceRelease (290 samples, 0.09%)</title><rect x="28.4081%" y="757" width="0.0869%" height="15" fill="rgb(248,140,14)" fg:x="94852" fg:w="290"/><text x="28.6581%" y="767.50"></text></g><g><title>_iogpuMetalCommandBufferStorageReleaseCurrentResources (480 samples, 0.14%)</title><rect x="28.3527%" y="773" width="0.1438%" height="15" fill="rgb(253,22,42)" fg:x="94667" fg:w="480"/><text x="28.6027%" y="783.50"></text></g><g><title>IOGPUMetalPooledResourceRelease (35 samples, 0.01%)</title><rect x="28.4967%" y="757" width="0.0105%" height="15" fill="rgb(234,61,47)" fg:x="95148" fg:w="35"/><text x="28.7467%" y="767.50"></text></g><g><title>_iogpuMetalCommandBufferStorageReleaseExtraResources (46 samples, 0.01%)</title><rect x="28.4964%" y="773" width="0.0138%" height="15" fill="rgb(208,226,15)" fg:x="95147" fg:w="46"/><text x="28.7464%" y="783.50"></text></g><g><title>IOGPUMetalCommandBufferStorageReset (1,172 samples, 0.35%)</title><rect x="28.1598%" y="789" width="0.3510%" height="15" fill="rgb(217,221,4)" fg:x="94023" fg:w="1172"/><text x="28.4098%" y="799.50"></text></g><g><title>IOGPUMetalDeviceShmemUpdateTrimLevel (81 samples, 0.02%)</title><rect x="28.5108%" y="789" width="0.0243%" height="15" fill="rgb(212,174,34)" fg:x="95195" fg:w="81"/><text x="28.7608%" y="799.50"></text></g><g><title>IOGPUMetalCommandBufferStorageDealloc (1,264 samples, 0.38%)</title><rect x="28.1568%" y="805" width="0.3786%" height="15" fill="rgb(253,83,4)" fg:x="94013" fg:w="1264"/><text x="28.4068%" y="815.50"></text></g><g><title>-[MTLResourceList releaseAllObjectsAndReset] (52 samples, 0.02%)</title><rect x="28.5366%" y="789" width="0.0156%" height="15" fill="rgb(250,195,49)" fg:x="95281" fg:w="52"/><text x="28.7866%" y="799.50"></text></g><g><title>_platform_memset (50 samples, 0.01%)</title><rect x="28.5372%" y="773" width="0.0150%" height="15" fill="rgb(241,192,25)" fg:x="95283" fg:w="50"/><text x="28.7872%" y="783.50"></text></g><g><title>free_small (44 samples, 0.01%)</title><rect x="28.5617%" y="773" width="0.0132%" height="15" fill="rgb(208,124,10)" fg:x="95365" fg:w="44"/><text x="28.8117%" y="783.50"></text></g><g><title>IOGPUResourceListDestroy (112 samples, 0.03%)</title><rect x="28.5524%" y="789" width="0.0335%" height="15" fill="rgb(222,33,0)" fg:x="95334" fg:w="112"/><text x="28.8024%" y="799.50"></text></g><g><title>free_tiny (37 samples, 0.01%)</title><rect x="28.5749%" y="773" width="0.0111%" height="15" fill="rgb(234,209,28)" fg:x="95409" fg:w="37"/><text x="28.8249%" y="783.50"></text></g><g><title>_iogpuMetalCommandBufferStorageFree (211 samples, 0.06%)</title><rect x="28.5366%" y="805" width="0.0632%" height="15" fill="rgb(224,11,23)" fg:x="95281" fg:w="211"/><text x="28.7866%" y="815.50"></text></g><g><title>-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (2,808 samples, 0.84%)</title><rect x="27.7758%" y="821" width="0.8410%" height="15" fill="rgb(232,99,1)" fg:x="92741" fg:w="2808"/><text x="28.0258%" y="831.50"></text></g><g><title>-[__NSArrayM objectAtIndex:] (34 samples, 0.01%)</title><rect x="28.6285%" y="805" width="0.0102%" height="15" fill="rgb(237,95,45)" fg:x="95588" fg:w="34"/><text x="28.8785%" y="815.50"></text></g><g><title>-[__NSArrayM removeObjectsInRange:] (51 samples, 0.02%)</title><rect x="28.6396%" y="805" width="0.0153%" height="15" fill="rgb(208,109,11)" fg:x="95625" fg:w="51"/><text x="28.8896%" y="815.50"></text></g><g><title>objc_msgSend (63 samples, 0.02%)</title><rect x="28.6603%" y="805" width="0.0189%" height="15" fill="rgb(216,190,48)" fg:x="95694" fg:w="63"/><text x="28.9103%" y="815.50"></text></g><g><title>-[NSMutableArray removeObject:] (230 samples, 0.07%)</title><rect x="28.6183%" y="821" width="0.0689%" height="15" fill="rgb(251,171,36)" fg:x="95554" fg:w="230"/><text x="28.8683%" y="831.50"></text></g><g><title>objc_msgSend (49 samples, 0.01%)</title><rect x="28.6980%" y="821" width="0.0147%" height="15" fill="rgb(230,62,22)" fg:x="95820" fg:w="49"/><text x="28.9480%" y="831.50"></text></g><g><title>-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (3,158 samples, 0.95%)</title><rect x="27.7701%" y="837" width="0.9458%" height="15" fill="rgb(225,114,35)" fg:x="92722" fg:w="3158"/><text x="28.0201%" y="847.50"></text></g><g><title>-[_MTLCommandBuffer dealloc] (34 samples, 0.01%)</title><rect x="28.7297%" y="773" width="0.0102%" height="15" fill="rgb(215,118,42)" fg:x="95926" fg:w="34"/><text x="28.9797%" y="783.50"></text></g><g><title>-[IOGPUMetalCommandBuffer dealloc] (37 samples, 0.01%)</title><rect x="28.7291%" y="789" width="0.0111%" height="15" fill="rgb(243,119,21)" fg:x="95924" fg:w="37"/><text x="28.9791%" y="799.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer dealloc] (60 samples, 0.02%)</title><rect x="28.7282%" y="805" width="0.0180%" height="15" fill="rgb(252,177,53)" fg:x="95921" fg:w="60"/><text x="28.9782%" y="815.50"></text></g><g><title>_call_dispose_helpers_excp (104 samples, 0.03%)</title><rect x="28.7270%" y="821" width="0.0311%" height="15" fill="rgb(237,209,29)" fg:x="95917" fg:w="104"/><text x="28.9770%" y="831.50"></text></g><g><title>tiny_free_list_add_ptr (56 samples, 0.02%)</title><rect x="28.8163%" y="789" width="0.0168%" height="15" fill="rgb(212,65,23)" fg:x="96215" fg:w="56"/><text x="29.0663%" y="799.50"></text></g><g><title>free_tiny (221 samples, 0.07%)</title><rect x="28.7678%" y="821" width="0.0662%" height="15" fill="rgb(230,222,46)" fg:x="96053" fg:w="221"/><text x="29.0178%" y="831.50"></text></g><g><title>tiny_free_no_lock (126 samples, 0.04%)</title><rect x="28.7962%" y="805" width="0.0377%" height="15" fill="rgb(215,135,32)" fg:x="96148" fg:w="126"/><text x="29.0462%" y="815.50"></text></g><g><title>_object_remove_associations (74 samples, 0.02%)</title><rect x="28.8411%" y="789" width="0.0222%" height="15" fill="rgb(246,101,22)" fg:x="96298" fg:w="74"/><text x="29.0911%" y="799.50"></text></g><g><title>objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::find(DisguisedPtr&lt;objc_object&gt; const&amp;) (46 samples, 0.01%)</title><rect x="28.8495%" y="773" width="0.0138%" height="15" fill="rgb(206,107,13)" fg:x="96326" fg:w="46"/><text x="29.0995%" y="783.50"></text></g><g><title>bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt;&gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt; const*&amp;) const (41 samples, 0.01%)</title><rect x="28.8510%" y="757" width="0.0123%" height="15" fill="rgb(250,100,44)" fg:x="96331" fg:w="41"/><text x="29.1010%" y="767.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (117 samples, 0.04%)</title><rect x="28.8385%" y="805" width="0.0350%" height="15" fill="rgb(231,147,38)" fg:x="96289" fg:w="117"/><text x="29.0885%" y="815.50"></text></g><g><title>objc_object::sidetable_clearDeallocating() (34 samples, 0.01%)</title><rect x="28.8633%" y="789" width="0.0102%" height="15" fill="rgb(229,8,40)" fg:x="96372" fg:w="34"/><text x="29.1133%" y="799.50"></text></g><g><title>objc_destructInstance (134 samples, 0.04%)</title><rect x="28.8340%" y="821" width="0.0401%" height="15" fill="rgb(221,135,30)" fg:x="96274" fg:w="134"/><text x="29.0840%" y="831.50"></text></g><g><title>_Block_release (514 samples, 0.15%)</title><rect x="28.7208%" y="837" width="0.1539%" height="15" fill="rgb(249,193,18)" fg:x="95896" fg:w="514"/><text x="28.9708%" y="847.50"></text></g><g><title>__62-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:]_block_invoke.52 (42 samples, 0.01%)</title><rect x="28.8795%" y="837" width="0.0126%" height="15" fill="rgb(209,133,39)" fg:x="96426" fg:w="42"/><text x="29.1295%" y="847.50"></text></g><g><title>__IODataQueueDequeue (82 samples, 0.02%)</title><rect x="28.8921%" y="837" width="0.0246%" height="15" fill="rgb(232,100,14)" fg:x="96468" fg:w="82"/><text x="29.1421%" y="847.50"></text></g><g><title>IOGPUNotificationQueueDispatchAvailableCompletionNotifications (5,664 samples, 1.70%)</title><rect x="27.2316%" y="853" width="1.6964%" height="15" fill="rgb(224,185,1)" fg:x="90924" fg:w="5664"/><text x="27.4816%" y="863.50"></text></g><g><title>_dispatch_client_callout4 (5,694 samples, 1.71%)</title><rect x="27.2257%" y="885" width="1.7053%" height="15" fill="rgb(223,139,8)" fg:x="90904" fg:w="5694"/><text x="27.4757%" y="895.50"></text></g><g><title>__IOGPUNotificationQueueSetDispatchQueue_block_invoke (5,687 samples, 1.70%)</title><rect x="27.2277%" y="869" width="1.7033%" height="15" fill="rgb(232,213,38)" fg:x="90911" fg:w="5687"/><text x="27.4777%" y="879.50"></text></g><g><title>free_tiny (58 samples, 0.02%)</title><rect x="28.9418%" y="853" width="0.0174%" height="15" fill="rgb(207,94,22)" fg:x="96634" fg:w="58"/><text x="29.1918%" y="863.50"></text></g><g><title>_dispatch_dispose (126 samples, 0.04%)</title><rect x="28.9331%" y="869" width="0.0377%" height="15" fill="rgb(219,183,54)" fg:x="96605" fg:w="126"/><text x="29.1831%" y="879.50"></text></g><g><title>objc_destructInstance (38 samples, 0.01%)</title><rect x="28.9595%" y="853" width="0.0114%" height="15" fill="rgb(216,185,54)" fg:x="96693" fg:w="38"/><text x="29.2095%" y="863.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (34 samples, 0.01%)</title><rect x="28.9606%" y="837" width="0.0102%" height="15" fill="rgb(254,217,39)" fg:x="96697" fg:w="34"/><text x="29.2106%" y="847.50"></text></g><g><title>_dispatch_lane_serial_drain (5,877 samples, 1.76%)</title><rect x="27.2164%" y="917" width="1.7602%" height="15" fill="rgb(240,178,23)" fg:x="90873" fg:w="5877"/><text x="27.4664%" y="927.50"></text></g><g><title>_dispatch_mach_msg_invoke (5,860 samples, 1.76%)</title><rect x="27.2215%" y="901" width="1.7551%" height="15" fill="rgb(218,11,47)" fg:x="90890" fg:w="5860"/><text x="27.4715%" y="911.50"></text></g><g><title>dispatch_release (152 samples, 0.05%)</title><rect x="28.9310%" y="885" width="0.0455%" height="15" fill="rgb(218,51,51)" fg:x="96598" fg:w="152"/><text x="29.1810%" y="895.50"></text></g><g><title>_dispatch_lane_serial_drain (5,957 samples, 1.78%)</title><rect x="27.1945%" y="949" width="1.7841%" height="15" fill="rgb(238,126,27)" fg:x="90800" fg:w="5957"/><text x="27.4445%" y="959.50">_..</text></g><g><title>_dispatch_mach_invoke (5,929 samples, 1.78%)</title><rect x="27.2029%" y="933" width="1.7757%" height="15" fill="rgb(249,202,22)" fg:x="90828" fg:w="5929"/><text x="27.4529%" y="943.50">_..</text></g><g><title>_dispatch_lane_invoke (5,988 samples, 1.79%)</title><rect x="27.1855%" y="965" width="1.7934%" height="15" fill="rgb(254,195,49)" fg:x="90770" fg:w="5988"/><text x="27.4355%" y="975.50">_..</text></g><g><title>_dispatch_set_priority_and_mach_voucher_slow (137 samples, 0.04%)</title><rect x="28.9825%" y="949" width="0.0410%" height="15" fill="rgb(208,123,14)" fg:x="96770" fg:w="137"/><text x="29.2325%" y="959.50"></text></g><g><title>_pthread_set_properties_self (131 samples, 0.04%)</title><rect x="28.9843%" y="933" width="0.0392%" height="15" fill="rgb(224,200,8)" fg:x="96776" fg:w="131"/><text x="29.2343%" y="943.50"></text></g><g><title>__bsdthread_ctl (123 samples, 0.04%)</title><rect x="28.9867%" y="917" width="0.0368%" height="15" fill="rgb(217,61,36)" fg:x="96784" fg:w="123"/><text x="29.2367%" y="927.50"></text></g><g><title>_dispatch_set_priority_and_voucher_slow (145 samples, 0.04%)</title><rect x="28.9804%" y="965" width="0.0434%" height="15" fill="rgb(206,35,45)" fg:x="96763" fg:w="145"/><text x="29.2304%" y="975.50"></text></g><g><title>szone_malloc_should_clear (100 samples, 0.03%)</title><rect x="29.0849%" y="805" width="0.0299%" height="15" fill="rgb(217,65,33)" fg:x="97112" fg:w="100"/><text x="29.3349%" y="815.50"></text></g><g><title>tiny_malloc_should_clear (87 samples, 0.03%)</title><rect x="29.0888%" y="789" width="0.0261%" height="15" fill="rgb(222,158,48)" fg:x="97125" fg:w="87"/><text x="29.3388%" y="799.50"></text></g><g><title>tiny_malloc_from_free_list (55 samples, 0.02%)</title><rect x="29.0984%" y="773" width="0.0165%" height="15" fill="rgb(254,2,54)" fg:x="97157" fg:w="55"/><text x="29.3484%" y="783.50"></text></g><g><title>-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:] (202 samples, 0.06%)</title><rect x="29.0547%" y="837" width="0.0605%" height="15" fill="rgb(250,143,38)" fg:x="97011" fg:w="202"/><text x="29.3047%" y="847.50"></text></g><g><title>_Block_copy (183 samples, 0.05%)</title><rect x="29.0604%" y="821" width="0.0548%" height="15" fill="rgb(248,25,0)" fg:x="97030" fg:w="183"/><text x="29.3104%" y="831.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (236 samples, 0.07%)</title><rect x="29.0517%" y="853" width="0.0707%" height="15" fill="rgb(206,152,27)" fg:x="97001" fg:w="236"/><text x="29.3017%" y="863.50"></text></g><g><title>mach_msg2_internal (17,539 samples, 5.25%)</title><rect x="29.1332%" y="805" width="5.2529%" height="15" fill="rgb(240,77,30)" fg:x="97273" fg:w="17539"/><text x="29.3832%" y="815.50">mach_m..</text></g><g><title>mach_msg2_trap (17,536 samples, 5.25%)</title><rect x="29.1341%" y="789" width="5.2520%" height="15" fill="rgb(231,5,3)" fg:x="97276" fg:w="17536"/><text x="29.3841%" y="799.50">mach_m..</text></g><g><title>io_connect_method (17,565 samples, 5.26%)</title><rect x="29.1257%" y="821" width="5.2607%" height="15" fill="rgb(207,226,32)" fg:x="97248" fg:w="17565"/><text x="29.3757%" y="831.50">io_con..</text></g><g><title>IOConnectCallMethod (17,569 samples, 5.26%)</title><rect x="29.1251%" y="837" width="5.2619%" height="15" fill="rgb(222,207,47)" fg:x="97246" fg:w="17569"/><text x="29.3751%" y="847.50">IOConn..</text></g><g><title>IOGPUCommandQueueSubmitCommandBuffers (17,819 samples, 5.34%)</title><rect x="29.1224%" y="853" width="5.3368%" height="15" fill="rgb(229,115,45)" fg:x="97237" fg:w="17819"/><text x="29.3724%" y="863.50">IOGPUCo..</text></g><g><title>iokit_user_client_trap (226 samples, 0.07%)</title><rect x="34.3915%" y="837" width="0.0677%" height="15" fill="rgb(224,191,6)" fg:x="114830" fg:w="226"/><text x="34.6415%" y="847.50"></text></g><g><title>-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (18,074 samples, 5.41%)</title><rect x="29.0481%" y="869" width="5.4131%" height="15" fill="rgb(230,227,24)" fg:x="96989" fg:w="18074"/><text x="29.2981%" y="879.50">-[IOGPU..</text></g><g><title>-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (18,090 samples, 5.42%)</title><rect x="29.0451%" y="885" width="5.4179%" height="15" fill="rgb(228,80,19)" fg:x="96979" fg:w="18090"/><text x="29.2951%" y="895.50">-[IOGPU..</text></g><g><title>-[__NSArrayM insertObjects:count:atIndex:] (46 samples, 0.01%)</title><rect x="34.4702%" y="853" width="0.0138%" height="15" fill="rgb(247,229,0)" fg:x="115093" fg:w="46"/><text x="34.7202%" y="863.50"></text></g><g><title>-[__NSArrayM replaceObjectsInRange:withObjects:count:] (92 samples, 0.03%)</title><rect x="34.4666%" y="869" width="0.0276%" height="15" fill="rgb(237,194,15)" fg:x="115081" fg:w="92"/><text x="34.7166%" y="879.50"></text></g><g><title>-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (118 samples, 0.04%)</title><rect x="34.4630%" y="885" width="0.0353%" height="15" fill="rgb(219,203,20)" fg:x="115069" fg:w="118"/><text x="34.7130%" y="895.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (81 samples, 0.02%)</title><rect x="34.5134%" y="885" width="0.0243%" height="15" fill="rgb(234,128,8)" fg:x="115237" fg:w="81"/><text x="34.7634%" y="895.50"></text></g><g><title>_pthread_mutex_firstfit_wake (79 samples, 0.02%)</title><rect x="34.5140%" y="869" width="0.0237%" height="15" fill="rgb(248,202,8)" fg:x="115239" fg:w="79"/><text x="34.7640%" y="879.50"></text></g><g><title>__psynch_mutexdrop (79 samples, 0.02%)</title><rect x="34.5140%" y="853" width="0.0237%" height="15" fill="rgb(206,104,37)" fg:x="115239" fg:w="79"/><text x="34.7640%" y="863.50"></text></g><g><title>-[_MTLCommandQueue _submitAvailableCommandBuffers] (18,399 samples, 5.51%)</title><rect x="29.0406%" y="901" width="5.5105%" height="15" fill="rgb(223,8,27)" fg:x="96964" fg:w="18399"/><text x="29.2906%" y="911.50">-[_MTLC..</text></g><g><title>layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (167 samples, 0.05%)</title><rect x="34.5682%" y="853" width="0.0500%" height="15" fill="rgb(216,217,28)" fg:x="115420" fg:w="167"/><text x="34.8182%" y="863.50"></text></g><g><title>CAImageQueueDidComposite (190 samples, 0.06%)</title><rect x="34.5649%" y="869" width="0.0569%" height="15" fill="rgb(249,199,1)" fg:x="115409" fg:w="190"/><text x="34.8149%" y="879.50"></text></g><g><title>_XImageQueueDidComposite (200 samples, 0.06%)</title><rect x="34.5640%" y="885" width="0.0599%" height="15" fill="rgb(240,85,17)" fg:x="115406" fg:w="200"/><text x="34.8140%" y="895.50"></text></g><g><title>_dispatch_kq_poll (125 samples, 0.04%)</title><rect x="34.6272%" y="853" width="0.0374%" height="15" fill="rgb(206,108,45)" fg:x="115617" fg:w="125"/><text x="34.8772%" y="863.50"></text></g><g><title>kevent_id (124 samples, 0.04%)</title><rect x="34.6275%" y="837" width="0.0371%" height="15" fill="rgb(245,210,41)" fg:x="115618" fg:w="124"/><text x="34.8775%" y="847.50"></text></g><g><title>_dispatch_event_loop_poke (128 samples, 0.04%)</title><rect x="34.6272%" y="869" width="0.0383%" height="15" fill="rgb(206,13,37)" fg:x="115617" fg:w="128"/><text x="34.8772%" y="879.50"></text></g><g><title>_XImageQueueDidPresent (154 samples, 0.05%)</title><rect x="34.6239%" y="885" width="0.0461%" height="15" fill="rgb(250,61,18)" fg:x="115606" fg:w="154"/><text x="34.8739%" y="895.50"></text></g><g><title>invocation function for block in CA::MachPortUtil::ClientIPC::create(char const*) (610 samples, 0.18%)</title><rect x="34.5520%" y="901" width="0.1827%" height="15" fill="rgb(235,172,48)" fg:x="115366" fg:w="610"/><text x="34.8020%" y="911.50"></text></g><g><title>mach_msg (216 samples, 0.06%)</title><rect x="34.6700%" y="885" width="0.0647%" height="15" fill="rgb(249,201,17)" fg:x="115760" fg:w="216"/><text x="34.9200%" y="895.50"></text></g><g><title>mach_msg_overwrite (214 samples, 0.06%)</title><rect x="34.6706%" y="869" width="0.0641%" height="15" fill="rgb(219,208,6)" fg:x="115762" fg:w="214"/><text x="34.9206%" y="879.50"></text></g><g><title>mach_msg2_internal (208 samples, 0.06%)</title><rect x="34.6724%" y="853" width="0.0623%" height="15" fill="rgb(248,31,23)" fg:x="115768" fg:w="208"/><text x="34.9224%" y="863.50"></text></g><g><title>mach_msg2_trap (204 samples, 0.06%)</title><rect x="34.6736%" y="837" width="0.0611%" height="15" fill="rgb(245,15,42)" fg:x="115772" fg:w="204"/><text x="34.9236%" y="847.50"></text></g><g><title>_dispatch_client_callout (19,023 samples, 5.70%)</title><rect x="29.0379%" y="917" width="5.6974%" height="15" fill="rgb(222,217,39)" fg:x="96955" fg:w="19023"/><text x="29.2879%" y="927.50">_dispat..</text></g><g><title>_dispatch_source_latch_and_call (19,039 samples, 5.70%)</title><rect x="29.0334%" y="949" width="5.7022%" height="15" fill="rgb(210,219,27)" fg:x="96940" fg:w="19039"/><text x="29.2834%" y="959.50">_dispat..</text></g><g><title>_dispatch_continuation_pop (19,030 samples, 5.70%)</title><rect x="29.0361%" y="933" width="5.6995%" height="15" fill="rgb(252,166,36)" fg:x="96949" fg:w="19030"/><text x="29.2861%" y="943.50">_dispat..</text></g><g><title>_dispatch_source_invoke (19,073 samples, 5.71%)</title><rect x="29.0238%" y="965" width="5.7123%" height="15" fill="rgb(245,132,34)" fg:x="96908" fg:w="19073"/><text x="29.2738%" y="975.50">_dispat..</text></g><g><title>_dispatch_lane_serial_drain (30,053 samples, 9.00%)</title><rect x="25.7356%" y="981" width="9.0008%" height="15" fill="rgb(236,54,3)" fg:x="85929" fg:w="30053"/><text x="25.9856%" y="991.50">_dispatch_lan..</text></g><g><title>_dispatch_last_resort_autorelease_pool_pop (96 samples, 0.03%)</title><rect x="34.7365%" y="981" width="0.0288%" height="15" fill="rgb(241,173,43)" fg:x="115982" fg:w="96"/><text x="34.9865%" y="991.50"></text></g><g><title>objc_autoreleasePoolPop (85 samples, 0.03%)</title><rect x="34.7398%" y="965" width="0.0255%" height="15" fill="rgb(215,190,9)" fg:x="115993" fg:w="85"/><text x="34.9898%" y="975.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (67 samples, 0.02%)</title><rect x="34.7452%" y="949" width="0.0201%" height="15" fill="rgb(242,101,16)" fg:x="116011" fg:w="67"/><text x="34.9952%" y="959.50"></text></g><g><title>_dispatch_last_resort_autorelease_pool_push (70 samples, 0.02%)</title><rect x="34.7652%" y="981" width="0.0210%" height="15" fill="rgb(223,190,21)" fg:x="116078" fg:w="70"/><text x="35.0152%" y="991.50"></text></g><g><title>_dispatch_lane_invoke (30,303 samples, 9.08%)</title><rect x="25.7138%" y="997" width="9.0757%" height="15" fill="rgb(215,228,25)" fg:x="85856" fg:w="30303"/><text x="25.9638%" y="1007.50">_dispatch_lan..</text></g><g><title>_dispatch_root_queue_drain_deferred_wlh (30,364 samples, 9.09%)</title><rect x="25.6997%" y="1013" width="9.0940%" height="15" fill="rgb(225,36,22)" fg:x="85809" fg:w="30364"/><text x="25.9497%" y="1023.50">_dispatch_roo..</text></g><g><title>start_wqthread (31,130 samples, 9.32%)</title><rect x="25.4706%" y="1061" width="9.3234%" height="15" fill="rgb(251,106,46)" fg:x="85044" fg:w="31130"/><text x="25.7206%" y="1071.50">start_wqthread</text></g><g><title>_pthread_wqthread (31,123 samples, 9.32%)</title><rect x="25.4727%" y="1045" width="9.3213%" height="15" fill="rgb(208,90,1)" fg:x="85051" fg:w="31123"/><text x="25.7227%" y="1055.50">_pthread_wqth..</text></g><g><title>_dispatch_workloop_worker_thread (31,049 samples, 9.30%)</title><rect x="25.4948%" y="1029" width="9.2991%" height="15" fill="rgb(243,10,4)" fg:x="85125" fg:w="31049"/><text x="25.7448%" y="1039.50">_dispatch_wor..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.02%)</title><rect x="34.8087%" y="997" width="0.0225%" height="15" fill="rgb(212,137,27)" fg:x="116223" fg:w="75"/><text x="35.0587%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (161 samples, 0.05%)</title><rect x="34.8311%" y="997" width="0.0482%" height="15" fill="rgb(231,220,49)" fg:x="116298" fg:w="161"/><text x="35.0811%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (289 samples, 0.09%)</title><rect x="34.8793%" y="997" width="0.0866%" height="15" fill="rgb(237,96,20)" fg:x="116459" fg:w="289"/><text x="35.1293%" y="1007.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (44 samples, 0.01%)</title><rect x="34.9866%" y="965" width="0.0132%" height="15" fill="rgb(239,229,30)" fg:x="116817" fg:w="44"/><text x="35.2366%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (103 samples, 0.03%)</title><rect x="34.9692%" y="981" width="0.0308%" height="15" fill="rgb(219,65,33)" fg:x="116759" fg:w="103"/><text x="35.2192%" y="991.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (119 samples, 0.04%)</title><rect x="34.9689%" y="997" width="0.0356%" height="15" fill="rgb(243,134,7)" fg:x="116758" fg:w="119"/><text x="35.2189%" y="1007.50"></text></g><g><title>exr::compression::optimize_bytes::differences_to_samples (198 samples, 0.06%)</title><rect x="35.0057%" y="901" width="0.0593%" height="15" fill="rgb(216,177,54)" fg:x="116881" fg:w="198"/><text x="35.2557%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (41 samples, 0.01%)</title><rect x="35.0818%" y="869" width="0.0123%" height="15" fill="rgb(211,160,20)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (41 samples, 0.01%)</title><rect x="35.0818%" y="853" width="0.0123%" height="15" fill="rgb(239,85,39)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (41 samples, 0.01%)</title><rect x="35.0818%" y="837" width="0.0123%" height="15" fill="rgb(232,125,22)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="847.50"></text></g><g><title>_realloc (41 samples, 0.01%)</title><rect x="35.0818%" y="821" width="0.0123%" height="15" fill="rgb(244,57,34)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="831.50"></text></g><g><title>_malloc_zone_realloc (41 samples, 0.01%)</title><rect x="35.0818%" y="805" width="0.0123%" height="15" fill="rgb(214,203,32)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="815.50"></text></g><g><title>szone_realloc (41 samples, 0.01%)</title><rect x="35.0818%" y="789" width="0.0123%" height="15" fill="rgb(207,58,43)" fg:x="117135" fg:w="41"/><text x="35.3318%" y="799.50"></text></g><g><title>core::intrinsics::copy (67 samples, 0.02%)</title><rect x="35.0941%" y="869" width="0.0201%" height="15" fill="rgb(215,193,15)" fg:x="117176" fg:w="67"/><text x="35.3441%" y="879.50"></text></g><g><title>core::slice::index::range (55 samples, 0.02%)</title><rect x="35.1157%" y="869" width="0.0165%" height="15" fill="rgb(232,15,44)" fg:x="117248" fg:w="55"/><text x="35.3657%" y="879.50"></text></g><g><title>simd_adler32::Adler32::write (214 samples, 0.06%)</title><rect x="35.1321%" y="869" width="0.0641%" height="15" fill="rgb(212,3,48)" fg:x="117303" fg:w="214"/><text x="35.3821%" y="879.50"></text></g><g><title>simd_adler32::imp::scalar::update (211 samples, 0.06%)</title><rect x="35.1330%" y="853" width="0.0632%" height="15" fill="rgb(218,128,7)" fg:x="117306" fg:w="211"/><text x="35.3830%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (41 samples, 0.01%)</title><rect x="35.1962%" y="869" width="0.0123%" height="15" fill="rgb(226,216,39)" fg:x="117517" fg:w="41"/><text x="35.4462%" y="879.50"></text></g><g><title>szone_malloc_should_clear (41 samples, 0.01%)</title><rect x="35.1962%" y="853" width="0.0123%" height="15" fill="rgb(243,47,51)" fg:x="117517" fg:w="41"/><text x="35.4462%" y="863.50"></text></g><g><title>medium_malloc_should_clear (41 samples, 0.01%)</title><rect x="35.1962%" y="837" width="0.0123%" height="15" fill="rgb(241,183,40)" fg:x="117517" fg:w="41"/><text x="35.4462%" y="847.50"></text></g><g><title>__bzero (41 samples, 0.01%)</title><rect x="35.1962%" y="821" width="0.0123%" height="15" fill="rgb(231,217,32)" fg:x="117517" fg:w="41"/><text x="35.4462%" y="831.50"></text></g><g><title>rayon_core::job::JobRef::execute (823 samples, 0.25%)</title><rect x="35.0057%" y="965" width="0.2465%" height="15" fill="rgb(229,61,38)" fg:x="116881" fg:w="823"/><text x="35.2557%" y="975.50"></text></g><g><title>exr::block::reader::ParallelBlockDecompressor&lt;R&gt;::decompress_next_block::_{{closure}} (823 samples, 0.25%)</title><rect x="35.0057%" y="949" width="0.2465%" height="15" fill="rgb(225,210,5)" fg:x="116881" fg:w="823"/><text x="35.2557%" y="959.50"></text></g><g><title>exr::block::UncompressedBlock::decompress_chunk (823 samples, 0.25%)</title><rect x="35.0057%" y="933" width="0.2465%" height="15" fill="rgb(231,79,45)" fg:x="116881" fg:w="823"/><text x="35.2557%" y="943.50"></text></g><g><title>exr::compression::Compression::decompress_image_section (823 samples, 0.25%)</title><rect x="35.0057%" y="917" width="0.2465%" height="15" fill="rgb(224,100,7)" fg:x="116881" fg:w="823"/><text x="35.2557%" y="927.50"></text></g><g><title>exr::compression::zip::decompress_bytes (625 samples, 0.19%)</title><rect x="35.0650%" y="901" width="0.1872%" height="15" fill="rgb(241,198,18)" fg:x="117079" fg:w="625"/><text x="35.3150%" y="911.50"></text></g><g><title>zune_inflate::decoder::DeflateDecoder::decode_zlib (571 samples, 0.17%)</title><rect x="35.0812%" y="885" width="0.1710%" height="15" fill="rgb(252,97,53)" fg:x="117133" fg:w="571"/><text x="35.3312%" y="895.50"></text></g><g><title>zune_inflate::utils::fixed_copy_within (108 samples, 0.03%)</title><rect x="35.2199%" y="869" width="0.0323%" height="15" fill="rgb(220,88,7)" fg:x="117596" fg:w="108"/><text x="35.4699%" y="879.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (854 samples, 0.26%)</title><rect x="35.0045%" y="997" width="0.2558%" height="15" fill="rgb(213,176,14)" fg:x="116877" fg:w="854"/><text x="35.2545%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (854 samples, 0.26%)</title><rect x="35.0045%" y="981" width="0.2558%" height="15" fill="rgb(246,73,7)" fg:x="116877" fg:w="854"/><text x="35.2545%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::ptr_eq (46 samples, 0.01%)</title><rect x="35.2666%" y="997" width="0.0138%" height="15" fill="rgb(245,64,36)" fg:x="117752" fg:w="46"/><text x="35.5166%" y="1007.50"></text></g><g><title>event_listener::Event::notify_additional (36 samples, 0.01%)</title><rect x="35.2891%" y="981" width="0.0108%" height="15" fill="rgb(245,80,10)" fg:x="117827" fg:w="36"/><text x="35.5391%" y="991.50"></text></g><g><title>event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (36 samples, 0.01%)</title><rect x="35.2891%" y="965" width="0.0108%" height="15" fill="rgb(232,107,50)" fg:x="117827" fg:w="36"/><text x="35.5391%" y="975.50"></text></g><g><title>event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify::_{{closure}} (36 samples, 0.01%)</title><rect x="35.2891%" y="949" width="0.0108%" height="15" fill="rgb(253,3,0)" fg:x="117827" fg:w="36"/><text x="35.5391%" y="959.50"></text></g><g><title>async_channel::Send&lt;T&gt;::wait (57 samples, 0.02%)</title><rect x="35.2837%" y="997" width="0.0171%" height="15" fill="rgb(212,99,53)" fg:x="117809" fg:w="57"/><text x="35.5337%" y="1007.50"></text></g><g><title>async_executor::Executor::run::_{{closure}} (62 samples, 0.02%)</title><rect x="35.3007%" y="997" width="0.0186%" height="15" fill="rgb(249,111,54)" fg:x="117866" fg:w="62"/><text x="35.5507%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (66 samples, 0.02%)</title><rect x="35.3319%" y="997" width="0.0198%" height="15" fill="rgb(249,55,30)" fg:x="117970" fg:w="66"/><text x="35.5819%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (68 samples, 0.02%)</title><rect x="35.5703%" y="965" width="0.0204%" height="15" fill="rgb(237,47,42)" fg:x="118766" fg:w="68"/><text x="35.8203%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (106 samples, 0.03%)</title><rect x="35.6008%" y="965" width="0.0317%" height="15" fill="rgb(211,20,18)" fg:x="118868" fg:w="106"/><text x="35.8508%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (61 samples, 0.02%)</title><rect x="35.6455%" y="965" width="0.0183%" height="15" fill="rgb(231,203,46)" fg:x="119017" fg:w="61"/><text x="35.8955%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (78 samples, 0.02%)</title><rect x="35.6637%" y="965" width="0.0234%" height="15" fill="rgb(237,142,3)" fg:x="119078" fg:w="78"/><text x="35.9137%" y="975.50"></text></g><g><title>free_tiny (74 samples, 0.02%)</title><rect x="35.6928%" y="949" width="0.0222%" height="15" fill="rgb(241,107,1)" fg:x="119175" fg:w="74"/><text x="35.9428%" y="959.50"></text></g><g><title>tiny_free_no_lock (35 samples, 0.01%)</title><rect x="35.7045%" y="933" width="0.0105%" height="15" fill="rgb(229,83,13)" fg:x="119214" fg:w="35"/><text x="35.9545%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (97 samples, 0.03%)</title><rect x="35.6874%" y="965" width="0.0291%" height="15" fill="rgb(241,91,40)" fg:x="119157" fg:w="97"/><text x="35.9374%" y="975.50"></text></g><g><title>async_executor::steal (1,026 samples, 0.31%)</title><rect x="35.4140%" y="981" width="0.3073%" height="15" fill="rgb(225,3,45)" fg:x="118244" fg:w="1026"/><text x="35.6640%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (46 samples, 0.01%)</title><rect x="35.7242%" y="981" width="0.0138%" height="15" fill="rgb(244,223,14)" fg:x="119280" fg:w="46"/><text x="35.9742%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (352 samples, 0.11%)</title><rect x="35.7380%" y="981" width="0.1054%" height="15" fill="rgb(224,124,37)" fg:x="119326" fg:w="352"/><text x="35.9880%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (110 samples, 0.03%)</title><rect x="35.8485%" y="981" width="0.0329%" height="15" fill="rgb(251,171,30)" fg:x="119695" fg:w="110"/><text x="36.0985%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (716 samples, 0.21%)</title><rect x="35.8815%" y="981" width="0.2144%" height="15" fill="rgb(236,46,54)" fg:x="119805" fg:w="716"/><text x="36.1315%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push_or_else (35 samples, 0.01%)</title><rect x="36.0959%" y="981" width="0.0105%" height="15" fill="rgb(245,213,5)" fg:x="120521" fg:w="35"/><text x="36.3459%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (448 samples, 0.13%)</title><rect x="36.1154%" y="981" width="0.1342%" height="15" fill="rgb(230,144,27)" fg:x="120586" fg:w="448"/><text x="36.3654%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (106 samples, 0.03%)</title><rect x="36.2579%" y="981" width="0.0317%" height="15" fill="rgb(220,86,6)" fg:x="121062" fg:w="106"/><text x="36.5079%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (220 samples, 0.07%)</title><rect x="36.2897%" y="981" width="0.0659%" height="15" fill="rgb(240,20,13)" fg:x="121168" fg:w="220"/><text x="36.5397%" y="991.50"></text></g><g><title>free_tiny (56 samples, 0.02%)</title><rect x="36.3589%" y="965" width="0.0168%" height="15" fill="rgb(217,89,34)" fg:x="121399" fg:w="56"/><text x="36.6089%" y="975.50"></text></g><g><title>tiny_free_no_lock (35 samples, 0.01%)</title><rect x="36.3652%" y="949" width="0.0105%" height="15" fill="rgb(229,13,5)" fg:x="121420" fg:w="35"/><text x="36.6152%" y="959.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (62 samples, 0.02%)</title><rect x="36.3577%" y="981" width="0.0186%" height="15" fill="rgb(244,67,35)" fg:x="121395" fg:w="62"/><text x="36.6077%" y="991.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (3,430 samples, 1.03%)</title><rect x="35.3517%" y="997" width="1.0273%" height="15" fill="rgb(221,40,2)" fg:x="118036" fg:w="3430"/><text x="35.6017%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}} (41 samples, 0.01%)</title><rect x="36.3789%" y="997" width="0.0123%" height="15" fill="rgb(237,157,21)" fg:x="121466" fg:w="41"/><text x="36.6289%" y="1007.50"></text></g><g><title>async_executor::State::run::_{{closure}} (44 samples, 0.01%)</title><rect x="36.3942%" y="997" width="0.0132%" height="15" fill="rgb(222,94,11)" fg:x="121517" fg:w="44"/><text x="36.6442%" y="1007.50"></text></g><g><title>async_executor::steal (63 samples, 0.02%)</title><rect x="36.4367%" y="965" width="0.0189%" height="15" fill="rgb(249,113,6)" fg:x="121659" fg:w="63"/><text x="36.6867%" y="975.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (52 samples, 0.02%)</title><rect x="36.4652%" y="965" width="0.0156%" height="15" fill="rgb(238,137,36)" fg:x="121754" fg:w="52"/><text x="36.7152%" y="975.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (214 samples, 0.06%)</title><rect x="36.4316%" y="981" width="0.0641%" height="15" fill="rgb(210,102,26)" fg:x="121642" fg:w="214"/><text x="36.6816%" y="991.50"></text></g><g><title>__psynch_cvsignal (385 samples, 0.12%)</title><rect x="36.5152%" y="917" width="0.1153%" height="15" fill="rgb(218,30,30)" fg:x="121921" fg:w="385"/><text x="36.7652%" y="927.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (398 samples, 0.12%)</title><rect x="36.5128%" y="949" width="0.1192%" height="15" fill="rgb(214,67,26)" fg:x="121913" fg:w="398"/><text x="36.7628%" y="959.50"></text></g><g><title>pthread_cond_signal (396 samples, 0.12%)</title><rect x="36.5134%" y="933" width="0.1186%" height="15" fill="rgb(251,9,53)" fg:x="121915" fg:w="396"/><text x="36.7634%" y="943.50"></text></g><g><title>alloc::task::raw_waker::wake (409 samples, 0.12%)</title><rect x="36.5107%" y="965" width="0.1225%" height="15" fill="rgb(228,204,25)" fg:x="121906" fg:w="409"/><text x="36.7607%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (41 samples, 0.01%)</title><rect x="36.6467%" y="949" width="0.0123%" height="15" fill="rgb(207,153,8)" fg:x="122360" fg:w="41"/><text x="36.8967%" y="959.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (40 samples, 0.01%)</title><rect x="36.6470%" y="933" width="0.0120%" height="15" fill="rgb(242,9,16)" fg:x="122361" fg:w="40"/><text x="36.8970%" y="943.50"></text></g><g><title>__psynch_mutexwait (40 samples, 0.01%)</title><rect x="36.6470%" y="917" width="0.0120%" height="15" fill="rgb(217,211,10)" fg:x="122361" fg:w="40"/><text x="36.8970%" y="927.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (54 samples, 0.02%)</title><rect x="36.6467%" y="965" width="0.0162%" height="15" fill="rgb(219,228,52)" fg:x="122360" fg:w="54"/><text x="36.8967%" y="975.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (576 samples, 0.17%)</title><rect x="36.5023%" y="981" width="0.1725%" height="15" fill="rgb(231,92,29)" fg:x="121878" fg:w="576"/><text x="36.7523%" y="991.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (40 samples, 0.01%)</title><rect x="36.6629%" y="965" width="0.0120%" height="15" fill="rgb(232,8,23)" fg:x="122414" fg:w="40"/><text x="36.9129%" y="975.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (950 samples, 0.28%)</title><rect x="36.4074%" y="997" width="0.2845%" height="15" fill="rgb(216,211,34)" fg:x="121561" fg:w="950"/><text x="36.6574%" y="1007.50"></text></g><g><title>async_executor::State::run::_{{closure}} (45 samples, 0.01%)</title><rect x="36.6919%" y="997" width="0.0135%" height="15" fill="rgb(236,151,0)" fg:x="122511" fg:w="45"/><text x="36.9419%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (54 samples, 0.02%)</title><rect x="36.7153%" y="981" width="0.0162%" height="15" fill="rgb(209,168,3)" fg:x="122589" fg:w="54"/><text x="36.9653%" y="991.50"></text></g><g><title>async_executor::Ticker::runnable::_{{closure}}::_{{closure}} (89 samples, 0.03%)</title><rect x="36.7153%" y="997" width="0.0267%" height="15" fill="rgb(208,129,28)" fg:x="122589" fg:w="89"/><text x="36.9653%" y="1007.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}} (37 samples, 0.01%)</title><rect x="36.7419%" y="997" width="0.0111%" height="15" fill="rgb(229,78,22)" fg:x="122678" fg:w="37"/><text x="36.9919%" y="1007.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (35 samples, 0.01%)</title><rect x="36.7749%" y="981" width="0.0105%" height="15" fill="rgb(228,187,13)" fg:x="122788" fg:w="35"/><text x="37.0249%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (69 samples, 0.02%)</title><rect x="36.7854%" y="981" width="0.0207%" height="15" fill="rgb(240,119,24)" fg:x="122823" fg:w="69"/><text x="37.0354%" y="991.50"></text></g><g><title>parking::Inner::unpark (51 samples, 0.02%)</title><rect x="36.8267%" y="965" width="0.0153%" height="15" fill="rgb(209,194,42)" fg:x="122961" fg:w="51"/><text x="37.0767%" y="975.50"></text></g><g><title>__psynch_cvsignal (5,519 samples, 1.65%)</title><rect x="36.8770%" y="933" width="1.6529%" height="15" fill="rgb(247,200,46)" fg:x="123129" fg:w="5519"/><text x="37.1270%" y="943.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (5,696 samples, 1.71%)</title><rect x="36.8420%" y="965" width="1.7059%" height="15" fill="rgb(218,76,16)" fg:x="123012" fg:w="5696"/><text x="37.0920%" y="975.50"></text></g><g><title>pthread_cond_signal (5,687 samples, 1.70%)</title><rect x="36.8447%" y="949" width="1.7033%" height="15" fill="rgb(225,21,48)" fg:x="123021" fg:w="5687"/><text x="37.0947%" y="959.50"></text></g><g><title>_pthread_cond_updateval (60 samples, 0.02%)</title><rect x="38.5299%" y="933" width="0.0180%" height="15" fill="rgb(239,223,50)" fg:x="128648" fg:w="60"/><text x="38.7799%" y="943.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (59 samples, 0.02%)</title><rect x="38.5479%" y="965" width="0.0177%" height="15" fill="rgb(244,45,21)" fg:x="128708" fg:w="59"/><text x="38.7979%" y="975.50"></text></g><g><title>pthread_mutex_lock (54 samples, 0.02%)</title><rect x="38.5494%" y="949" width="0.0162%" height="15" fill="rgb(232,33,43)" fg:x="128713" fg:w="54"/><text x="38.7994%" y="959.50"></text></g><g><title>alloc::task::raw_waker::wake (5,866 samples, 1.76%)</title><rect x="36.8135%" y="981" width="1.7569%" height="15" fill="rgb(209,8,3)" fg:x="122917" fg:w="5866"/><text x="37.0635%" y="991.50"></text></g><g><title>async_executor::Ticker::sleep (65 samples, 0.02%)</title><rect x="38.6048%" y="981" width="0.0195%" height="15" fill="rgb(214,25,53)" fg:x="128898" fg:w="65"/><text x="38.8548%" y="991.50"></text></g><g><title>async_executor::Ticker::wake (84 samples, 0.03%)</title><rect x="38.6243%" y="981" width="0.0252%" height="15" fill="rgb(254,186,54)" fg:x="128963" fg:w="84"/><text x="38.8743%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (292 samples, 0.09%)</title><rect x="38.6626%" y="981" width="0.0875%" height="15" fill="rgb(208,174,49)" fg:x="129091" fg:w="292"/><text x="38.9126%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (87 samples, 0.03%)</title><rect x="38.7501%" y="981" width="0.0261%" height="15" fill="rgb(233,191,51)" fg:x="129383" fg:w="87"/><text x="39.0001%" y="991.50"></text></g><g><title>core::task::wake::Waker::will_wake (48 samples, 0.01%)</title><rect x="38.7794%" y="981" width="0.0144%" height="15" fill="rgb(222,134,10)" fg:x="129481" fg:w="48"/><text x="39.0294%" y="991.50"></text></g><g><title>DYLD-STUB$$pthread_mutex_lock (36 samples, 0.01%)</title><rect x="38.8046%" y="965" width="0.0108%" height="15" fill="rgb(230,226,20)" fg:x="129565" fg:w="36"/><text x="39.0546%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (584 samples, 0.17%)</title><rect x="38.8154%" y="965" width="0.1749%" height="15" fill="rgb(251,111,25)" fg:x="129601" fg:w="584"/><text x="39.0654%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (547 samples, 0.16%)</title><rect x="38.8264%" y="949" width="0.1638%" height="15" fill="rgb(224,40,46)" fg:x="129638" fg:w="547"/><text x="39.0764%" y="959.50"></text></g><g><title>__psynch_mutexwait (542 samples, 0.16%)</title><rect x="38.8279%" y="933" width="0.1623%" height="15" fill="rgb(236,108,47)" fg:x="129643" fg:w="542"/><text x="39.0779%" y="943.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (815 samples, 0.24%)</title><rect x="38.8019%" y="981" width="0.2441%" height="15" fill="rgb(234,93,0)" fg:x="129556" fg:w="815"/><text x="39.0519%" y="991.50"></text></g><g><title>pthread_mutex_lock (186 samples, 0.06%)</title><rect x="38.9903%" y="965" width="0.0557%" height="15" fill="rgb(224,213,32)" fg:x="130185" fg:w="186"/><text x="39.2403%" y="975.50"></text></g><g><title>DYLD-STUB$$pthread_mutex_unlock (39 samples, 0.01%)</title><rect x="39.0463%" y="965" width="0.0117%" height="15" fill="rgb(251,11,48)" fg:x="130372" fg:w="39"/><text x="39.2963%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (488 samples, 0.15%)</title><rect x="39.0580%" y="965" width="0.1462%" height="15" fill="rgb(236,173,5)" fg:x="130411" fg:w="488"/><text x="39.3080%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_wake (479 samples, 0.14%)</title><rect x="39.0607%" y="949" width="0.1435%" height="15" fill="rgb(230,95,12)" fg:x="130420" fg:w="479"/><text x="39.3107%" y="959.50"></text></g><g><title>__psynch_mutexdrop (477 samples, 0.14%)</title><rect x="39.0613%" y="933" width="0.1429%" height="15" fill="rgb(232,209,1)" fg:x="130422" fg:w="477"/><text x="39.3113%" y="943.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (8,336 samples, 2.50%)</title><rect x="36.7530%" y="997" width="2.4966%" height="15" fill="rgb(232,6,1)" fg:x="122715" fg:w="8336"/><text x="37.0030%" y="1007.50">as..</text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (680 samples, 0.20%)</title><rect x="39.0460%" y="981" width="0.2037%" height="15" fill="rgb(210,224,50)" fg:x="130371" fg:w="680"/><text x="39.2960%" y="991.50"></text></g><g><title>pthread_mutex_unlock (152 samples, 0.05%)</title><rect x="39.2041%" y="965" width="0.0455%" height="15" fill="rgb(228,127,35)" fg:x="130899" fg:w="152"/><text x="39.4541%" y="975.50"></text></g><g><title>async_executor::steal (57 samples, 0.02%)</title><rect x="39.2667%" y="997" width="0.0171%" height="15" fill="rgb(245,102,45)" fg:x="131108" fg:w="57"/><text x="39.5167%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (460 samples, 0.14%)</title><rect x="39.3104%" y="981" width="0.1378%" height="15" fill="rgb(214,1,49)" fg:x="131254" fg:w="460"/><text x="39.5604%" y="991.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_bind_group (43 samples, 0.01%)</title><rect x="39.5728%" y="885" width="0.0129%" height="15" fill="rgb(226,163,40)" fg:x="132130" fg:w="43"/><text x="39.8228%" y="895.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::material::SetMaterial2dBindGroup&lt;M,_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (82 samples, 0.02%)</title><rect x="39.5629%" y="917" width="0.0246%" height="15" fill="rgb(239,212,28)" fg:x="132097" fg:w="82"/><text x="39.8129%" y="927.50"></text></g><g><title>wgpu::api::render_pass::RenderPass::set_bind_group (58 samples, 0.02%)</title><rect x="39.5701%" y="901" width="0.0174%" height="15" fill="rgb(220,20,13)" fg:x="132121" fg:w="58"/><text x="39.8201%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.01%)</title><rect x="39.5920%" y="901" width="0.0132%" height="15" fill="rgb(210,164,35)" fg:x="132194" fg:w="44"/><text x="39.8420%" y="911.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::mesh::DrawMesh2d as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (80 samples, 0.02%)</title><rect x="39.5875%" y="917" width="0.0240%" height="15" fill="rgb(248,109,41)" fg:x="132179" fg:w="80"/><text x="39.8375%" y="927.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_index_slice (110 samples, 0.03%)</title><rect x="39.6162%" y="917" width="0.0329%" height="15" fill="rgb(238,23,50)" fg:x="132275" fg:w="110"/><text x="39.8662%" y="927.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_slice_in_slab (110 samples, 0.03%)</title><rect x="39.6162%" y="901" width="0.0329%" height="15" fill="rgb(211,48,49)" fg:x="132275" fg:w="110"/><text x="39.8662%" y="911.50"></text></g><g><title>&lt;bevy_asset::assets::AssetIndex as core::cmp::PartialEq&gt;::eq (92 samples, 0.03%)</title><rect x="39.7384%" y="885" width="0.0276%" height="15" fill="rgb(223,36,21)" fg:x="132683" fg:w="92"/><text x="39.9884%" y="895.50"></text></g><g><title>&lt;bevy_asset::id::AssetId&lt;A&gt; as core::hash::Hash&gt;::hash (428 samples, 0.13%)</title><rect x="39.7669%" y="885" width="0.1282%" height="15" fill="rgb(207,123,46)" fg:x="132778" fg:w="428"/><text x="40.0169%" y="895.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (66 samples, 0.02%)</title><rect x="39.8954%" y="885" width="0.0198%" height="15" fill="rgb(240,218,32)" fg:x="133207" fg:w="66"/><text x="40.1454%" y="895.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_vertex_slice (913 samples, 0.27%)</title><rect x="39.6525%" y="917" width="0.2734%" height="15" fill="rgb(252,5,43)" fg:x="132396" fg:w="913"/><text x="39.9025%" y="927.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_slice_in_slab (910 samples, 0.27%)</title><rect x="39.6534%" y="901" width="0.2725%" height="15" fill="rgb(252,84,19)" fg:x="132399" fg:w="910"/><text x="39.9034%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.01%)</title><rect x="39.9379%" y="917" width="0.0105%" height="15" fill="rgb(243,152,39)" fg:x="133349" fg:w="35"/><text x="40.1879%" y="927.50"></text></g><g><title>&lt;bevy_asset::id::AssetId&lt;A&gt; as core::hash::Hash&gt;::hash (35 samples, 0.01%)</title><rect x="39.9379%" y="901" width="0.0105%" height="15" fill="rgb(234,160,15)" fg:x="133349" fg:w="35"/><text x="40.1879%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (74 samples, 0.02%)</title><rect x="39.9574%" y="901" width="0.0222%" height="15" fill="rgb(237,34,20)" fg:x="133414" fg:w="74"/><text x="40.2074%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (98 samples, 0.03%)</title><rect x="39.9511%" y="917" width="0.0294%" height="15" fill="rgb(229,97,13)" fg:x="133393" fg:w="98"/><text x="40.2011%" y="927.50"></text></g><g><title>_malloc_zone_realloc (44 samples, 0.01%)</title><rect x="39.9843%" y="837" width="0.0132%" height="15" fill="rgb(234,71,50)" fg:x="133504" fg:w="44"/><text x="40.2343%" y="847.50"></text></g><g><title>szone_realloc (44 samples, 0.01%)</title><rect x="39.9843%" y="821" width="0.0132%" height="15" fill="rgb(253,155,4)" fg:x="133504" fg:w="44"/><text x="40.2343%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.01%)</title><rect x="39.9834%" y="901" width="0.0147%" height="15" fill="rgb(222,185,37)" fg:x="133501" fg:w="49"/><text x="40.2334%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (47 samples, 0.01%)</title><rect x="39.9840%" y="885" width="0.0141%" height="15" fill="rgb(251,177,13)" fg:x="133503" fg:w="47"/><text x="40.2340%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (47 samples, 0.01%)</title><rect x="39.9840%" y="869" width="0.0141%" height="15" fill="rgb(250,179,40)" fg:x="133503" fg:w="47"/><text x="40.2340%" y="879.50"></text></g><g><title>_realloc (47 samples, 0.01%)</title><rect x="39.9840%" y="853" width="0.0141%" height="15" fill="rgb(242,44,2)" fg:x="133503" fg:w="47"/><text x="40.2340%" y="863.50"></text></g><g><title>wgpu::api::render_pass::RenderPass::draw_indexed (76 samples, 0.02%)</title><rect x="39.9813%" y="917" width="0.0228%" height="15" fill="rgb(216,177,13)" fg:x="133494" fg:w="76"/><text x="40.2313%" y="927.50"></text></g><g><title>&lt;(C0,C1,C2,C3,C4) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (1,680 samples, 0.50%)</title><rect x="39.5027%" y="933" width="0.5032%" height="15" fill="rgb(216,106,43)" fg:x="131896" fg:w="1680"/><text x="39.7527%" y="943.50"></text></g><g><title>_platform_memmove (115 samples, 0.03%)</title><rect x="40.0406%" y="917" width="0.0344%" height="15" fill="rgb(216,183,2)" fg:x="133692" fg:w="115"/><text x="40.2906%" y="927.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (263 samples, 0.08%)</title><rect x="40.0101%" y="933" width="0.0788%" height="15" fill="rgb(249,75,3)" fg:x="133590" fg:w="263"/><text x="40.2601%" y="943.50"></text></g><g><title>bevy_render::render_phase::BinnedRenderPhase&lt;BPI&gt;::render_batchable_meshes (2,104 samples, 0.63%)</title><rect x="39.4961%" y="949" width="0.6301%" height="15" fill="rgb(219,67,39)" fg:x="131874" fg:w="2104"/><text x="39.7461%" y="959.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_bind_group (61 samples, 0.02%)</title><rect x="40.1290%" y="885" width="0.0183%" height="15" fill="rgb(253,228,2)" fg:x="133987" fg:w="61"/><text x="40.3790%" y="895.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_bind_group (35 samples, 0.01%)</title><rect x="40.1368%" y="869" width="0.0105%" height="15" fill="rgb(235,138,27)" fg:x="134013" fg:w="35"/><text x="40.3868%" y="879.50"></text></g><g><title>&lt;bevy_sprite::render::SetSpriteTextureBindGroup&lt;_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (67 samples, 0.02%)</title><rect x="40.1278%" y="917" width="0.0201%" height="15" fill="rgb(236,97,51)" fg:x="133983" fg:w="67"/><text x="40.3778%" y="927.50"></text></g><g><title>wgpu::api::render_pass::RenderPass::set_bind_group (64 samples, 0.02%)</title><rect x="40.1287%" y="901" width="0.0192%" height="15" fill="rgb(240,80,30)" fg:x="133986" fg:w="64"/><text x="40.3787%" y="911.50"></text></g><g><title>&lt;(C0,C1,C2,C3) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (107 samples, 0.03%)</title><rect x="40.1266%" y="933" width="0.0320%" height="15" fill="rgb(230,178,19)" fg:x="133979" fg:w="107"/><text x="40.3766%" y="943.50"></text></g><g><title>bevy_render::render_phase::SortedRenderPhase&lt;I&gt;::render_range (176 samples, 0.05%)</title><rect x="40.1263%" y="949" width="0.0527%" height="15" fill="rgb(210,190,27)" fg:x="133978" fg:w="176"/><text x="40.3763%" y="959.50"></text></g><g><title>_dispatch_kq_poll (96 samples, 0.03%)</title><rect x="40.2173%" y="773" width="0.0288%" height="15" fill="rgb(222,107,31)" fg:x="134282" fg:w="96"/><text x="40.4673%" y="783.50"></text></g><g><title>kevent_id (95 samples, 0.03%)</title><rect x="40.2176%" y="757" width="0.0285%" height="15" fill="rgb(216,127,34)" fg:x="134283" fg:w="95"/><text x="40.4676%" y="767.50"></text></g><g><title>_dispatch_event_loop_poke (98 samples, 0.03%)</title><rect x="40.2170%" y="789" width="0.0294%" height="15" fill="rgb(234,116,52)" fg:x="134281" fg:w="98"/><text x="40.4670%" y="799.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (119 samples, 0.04%)</title><rect x="40.2158%" y="805" width="0.0356%" height="15" fill="rgb(222,124,15)" fg:x="134277" fg:w="119"/><text x="40.4658%" y="815.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (145 samples, 0.04%)</title><rect x="40.2137%" y="821" width="0.0434%" height="15" fill="rgb(231,179,28)" fg:x="134270" fg:w="145"/><text x="40.4637%" y="831.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (189 samples, 0.06%)</title><rect x="40.2134%" y="837" width="0.0566%" height="15" fill="rgb(226,93,45)" fg:x="134269" fg:w="189"/><text x="40.4634%" y="847.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (219 samples, 0.07%)</title><rect x="40.2113%" y="853" width="0.0656%" height="15" fill="rgb(215,8,51)" fg:x="134262" fg:w="219"/><text x="40.4613%" y="863.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (279 samples, 0.08%)</title><rect x="40.1970%" y="901" width="0.0836%" height="15" fill="rgb(223,106,5)" fg:x="134214" fg:w="279"/><text x="40.4470%" y="911.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (233 samples, 0.07%)</title><rect x="40.2107%" y="885" width="0.0698%" height="15" fill="rgb(250,191,5)" fg:x="134260" fg:w="233"/><text x="40.4607%" y="895.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (233 samples, 0.07%)</title><rect x="40.2107%" y="869" width="0.0698%" height="15" fill="rgb(242,132,44)" fg:x="134260" fg:w="233"/><text x="40.4607%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.01%)</title><rect x="40.3308%" y="885" width="0.0144%" height="15" fill="rgb(251,152,29)" fg:x="134661" fg:w="48"/><text x="40.5808%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (43 samples, 0.01%)</title><rect x="40.3323%" y="869" width="0.0129%" height="15" fill="rgb(218,179,5)" fg:x="134666" fg:w="43"/><text x="40.5823%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.01%)</title><rect x="40.3464%" y="885" width="0.0123%" height="15" fill="rgb(227,67,19)" fg:x="134713" fg:w="41"/><text x="40.5964%" y="895.50"></text></g><g><title>wgpu_core::command::CommandBuffer::insert_barriers_from_scope (63 samples, 0.02%)</title><rect x="40.3991%" y="885" width="0.0189%" height="15" fill="rgb(233,119,31)" fg:x="134889" fg:w="63"/><text x="40.6491%" y="895.50"></text></g><g><title>_dispatch_kq_poll (90 samples, 0.03%)</title><rect x="40.4297%" y="757" width="0.0270%" height="15" fill="rgb(241,120,22)" fg:x="134991" fg:w="90"/><text x="40.6797%" y="767.50"></text></g><g><title>kevent_id (90 samples, 0.03%)</title><rect x="40.4297%" y="741" width="0.0270%" height="15" fill="rgb(224,102,30)" fg:x="134991" fg:w="90"/><text x="40.6797%" y="751.50"></text></g><g><title>_dispatch_event_loop_poke (91 samples, 0.03%)</title><rect x="40.4297%" y="773" width="0.0273%" height="15" fill="rgb(210,164,37)" fg:x="134991" fg:w="91"/><text x="40.6797%" y="783.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (105 samples, 0.03%)</title><rect x="40.4294%" y="789" width="0.0314%" height="15" fill="rgb(226,191,16)" fg:x="134990" fg:w="105"/><text x="40.6794%" y="799.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (112 samples, 0.03%)</title><rect x="40.4294%" y="805" width="0.0335%" height="15" fill="rgb(214,40,45)" fg:x="134990" fg:w="112"/><text x="40.6794%" y="815.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (151 samples, 0.05%)</title><rect x="40.4288%" y="821" width="0.0452%" height="15" fill="rgb(244,29,26)" fg:x="134988" fg:w="151"/><text x="40.6788%" y="831.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (170 samples, 0.05%)</title><rect x="40.4282%" y="837" width="0.0509%" height="15" fill="rgb(216,16,5)" fg:x="134986" fg:w="170"/><text x="40.6782%" y="847.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (178 samples, 0.05%)</title><rect x="40.4282%" y="853" width="0.0533%" height="15" fill="rgb(249,76,35)" fg:x="134986" fg:w="178"/><text x="40.6782%" y="863.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (209 samples, 0.06%)</title><rect x="40.4195%" y="885" width="0.0626%" height="15" fill="rgb(207,11,44)" fg:x="134957" fg:w="209"/><text x="40.6695%" y="895.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (181 samples, 0.05%)</title><rect x="40.4279%" y="869" width="0.0542%" height="15" fill="rgb(228,190,49)" fg:x="134985" fg:w="181"/><text x="40.6779%" y="879.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (58 samples, 0.02%)</title><rect x="40.4821%" y="885" width="0.0174%" height="15" fill="rgb(214,173,12)" fg:x="135166" fg:w="58"/><text x="40.7321%" y="895.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (34 samples, 0.01%)</title><rect x="40.4994%" y="885" width="0.0102%" height="15" fill="rgb(218,26,35)" fg:x="135224" fg:w="34"/><text x="40.7494%" y="895.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (40 samples, 0.01%)</title><rect x="40.5174%" y="853" width="0.0120%" height="15" fill="rgb(220,200,19)" fg:x="135284" fg:w="40"/><text x="40.7674%" y="863.50"></text></g><g><title>AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (63 samples, 0.02%)</title><rect x="40.5761%" y="805" width="0.0189%" height="15" fill="rgb(239,95,49)" fg:x="135480" fg:w="63"/><text x="40.8261%" y="815.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (61 samples, 0.02%)</title><rect x="40.5767%" y="789" width="0.0183%" height="15" fill="rgb(235,85,53)" fg:x="135482" fg:w="61"/><text x="40.8267%" y="799.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (107 samples, 0.03%)</title><rect x="40.5986%" y="789" width="0.0320%" height="15" fill="rgb(233,133,31)" fg:x="135555" fg:w="107"/><text x="40.8486%" y="799.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (46 samples, 0.01%)</title><rect x="40.6168%" y="773" width="0.0138%" height="15" fill="rgb(218,25,20)" fg:x="135616" fg:w="46"/><text x="40.8668%" y="783.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass() (186 samples, 0.06%)</title><rect x="40.5950%" y="805" width="0.0557%" height="15" fill="rgb(252,210,38)" fg:x="135543" fg:w="186"/><text x="40.8450%" y="815.50"></text></g><g><title>__bzero (49 samples, 0.01%)</title><rect x="40.6516%" y="805" width="0.0147%" height="15" fill="rgb(242,134,21)" fg:x="135732" fg:w="49"/><text x="40.9016%" y="815.50"></text></g><g><title>-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (475 samples, 0.14%)</title><rect x="40.5303%" y="821" width="0.1423%" height="15" fill="rgb(213,28,48)" fg:x="135327" fg:w="475"/><text x="40.7803%" y="831.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (482 samples, 0.14%)</title><rect x="40.5294%" y="837" width="0.1444%" height="15" fill="rgb(250,196,2)" fg:x="135324" fg:w="482"/><text x="40.7794%" y="847.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (507 samples, 0.15%)</title><rect x="40.5294%" y="853" width="0.1518%" height="15" fill="rgb(227,5,17)" fg:x="135324" fg:w="507"/><text x="40.7794%" y="863.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (36 samples, 0.01%)</title><rect x="40.6875%" y="837" width="0.0108%" height="15" fill="rgb(221,226,24)" fg:x="135852" fg:w="36"/><text x="40.9375%" y="847.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal dealloc] (36 samples, 0.01%)</title><rect x="40.6875%" y="821" width="0.0108%" height="15" fill="rgb(211,5,48)" fg:x="135852" fg:w="36"/><text x="40.9375%" y="831.50"></text></g><g><title>objc_autoreleasePoolPop (38 samples, 0.01%)</title><rect x="40.6875%" y="853" width="0.0114%" height="15" fill="rgb(219,150,6)" fg:x="135852" fg:w="38"/><text x="40.9375%" y="863.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (623 samples, 0.19%)</title><rect x="40.5174%" y="869" width="0.1866%" height="15" fill="rgb(251,46,16)" fg:x="135284" fg:w="623"/><text x="40.7674%" y="879.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo::start (660 samples, 0.20%)</title><rect x="40.5174%" y="885" width="0.1977%" height="15" fill="rgb(220,204,40)" fg:x="135284" fg:w="660"/><text x="40.7674%" y="895.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (50 samples, 0.01%)</title><rect x="40.7214%" y="853" width="0.0150%" height="15" fill="rgb(211,85,2)" fg:x="135965" fg:w="50"/><text x="40.9714%" y="863.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (61 samples, 0.02%)</title><rect x="40.7196%" y="869" width="0.0183%" height="15" fill="rgb(229,17,7)" fg:x="135959" fg:w="61"/><text x="40.9696%" y="879.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (51 samples, 0.02%)</title><rect x="40.8049%" y="821" width="0.0153%" height="15" fill="rgb(239,72,28)" fg:x="136244" fg:w="51"/><text x="41.0549%" y="831.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindFragmentBufferResource(unsigned int, bool, bool) (106 samples, 0.03%)</title><rect x="40.8271%" y="821" width="0.0317%" height="15" fill="rgb(230,47,54)" fg:x="136318" fg:w="106"/><text x="41.0771%" y="831.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (69 samples, 0.02%)</title><rect x="40.8382%" y="805" width="0.0207%" height="15" fill="rgb(214,50,8)" fg:x="136355" fg:w="69"/><text x="41.0882%" y="815.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindFragmentTextureResources(unsigned int, bool, bool) (57 samples, 0.02%)</title><rect x="40.8588%" y="821" width="0.0171%" height="15" fill="rgb(216,198,43)" fg:x="136424" fg:w="57"/><text x="41.1088%" y="831.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitFragmentProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::FragmentProgramVariant const*, AGX::G15::RenderPipeline const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::FragmentDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, AGX::G15::Framebuffer const&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*) (148 samples, 0.04%)</title><rect x="40.8768%" y="821" width="0.0443%" height="15" fill="rgb(234,20,35)" fg:x="136484" fg:w="148"/><text x="41.1268%" y="831.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration&lt;eAGXDataBufferAllocFlags&gt; const&amp;) (169 samples, 0.05%)</title><rect x="40.9211%" y="821" width="0.0506%" height="15" fill="rgb(254,45,19)" fg:x="136632" fg:w="169"/><text x="41.1711%" y="831.50"></text></g><g><title>_platform_memmove (59 samples, 0.02%)</title><rect x="40.9541%" y="805" width="0.0177%" height="15" fill="rgb(219,14,44)" fg:x="136742" fg:w="59"/><text x="41.2041%" y="815.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt; const&amp;) (69 samples, 0.02%)</title><rect x="40.9718%" y="821" width="0.0207%" height="15" fill="rgb(217,220,26)" fg:x="136801" fg:w="69"/><text x="41.2218%" y="831.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (791 samples, 0.24%)</title><rect x="40.7597%" y="837" width="0.2369%" height="15" fill="rgb(213,158,28)" fg:x="136093" fg:w="791"/><text x="41.0097%" y="847.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:] (897 samples, 0.27%)</title><rect x="40.7396%" y="853" width="0.2687%" height="15" fill="rgb(252,51,52)" fg:x="136026" fg:w="897"/><text x="40.9896%" y="863.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H) as objc::message::MessageArguments&gt;::invoke (910 samples, 0.27%)</title><rect x="40.7393%" y="869" width="0.2725%" height="15" fill="rgb(246,89,16)" fg:x="136025" fg:w="910"/><text x="40.9893%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (53 samples, 0.02%)</title><rect x="41.0370%" y="853" width="0.0159%" height="15" fill="rgb(216,158,49)" fg:x="137019" fg:w="53"/><text x="41.2870%" y="863.50"></text></g><g><title>wgpu_core::command::bind::Binder::check_compatibility (99 samples, 0.03%)</title><rect x="41.0370%" y="869" width="0.0297%" height="15" fill="rgb(236,107,19)" fg:x="137019" fg:w="99"/><text x="41.2870%" y="879.50"></text></g><g><title>wgpu_core::command::render::draw_indexed (1,191 samples, 0.36%)</title><rect x="40.7169%" y="885" width="0.3567%" height="15" fill="rgb(228,185,30)" fg:x="135950" fg:w="1191"/><text x="40.9669%" y="895.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentSamplerState:atIndex:] (198 samples, 0.06%)</title><rect x="41.0826%" y="869" width="0.0593%" height="15" fill="rgb(246,134,8)" fg:x="137171" fg:w="198"/><text x="41.3326%" y="879.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentSamplerState:atIndex:] (83 samples, 0.02%)</title><rect x="41.1583%" y="853" width="0.0249%" height="15" fill="rgb(214,143,50)" fg:x="137424" fg:w="83"/><text x="41.4083%" y="863.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentTexture:atIndex:] (122 samples, 0.04%)</title><rect x="41.1832%" y="853" width="0.0365%" height="15" fill="rgb(228,75,8)" fg:x="137507" fg:w="122"/><text x="41.4332%" y="863.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexTexture:atIndex:] (57 samples, 0.02%)</title><rect x="41.2275%" y="853" width="0.0171%" height="15" fill="rgb(207,175,4)" fg:x="137655" fg:w="57"/><text x="41.4775%" y="863.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (601 samples, 0.18%)</title><rect x="41.1550%" y="869" width="0.1800%" height="15" fill="rgb(205,108,24)" fg:x="137413" fg:w="601"/><text x="41.4050%" y="879.50"></text></g><g><title>objc_msgSend (279 samples, 0.08%)</title><rect x="41.2515%" y="853" width="0.0836%" height="15" fill="rgb(244,120,49)" fg:x="137735" fg:w="279"/><text x="41.5015%" y="863.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentBuffer:offset:atIndex:] (72 samples, 0.02%)</title><rect x="41.3350%" y="853" width="0.0216%" height="15" fill="rgb(223,47,38)" fg:x="138014" fg:w="72"/><text x="41.5850%" y="863.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexBuffer:offset:atIndex:] (120 samples, 0.04%)</title><rect x="41.3566%" y="853" width="0.0359%" height="15" fill="rgb(229,179,11)" fg:x="138086" fg:w="120"/><text x="41.6066%" y="863.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setResource(IOGPUMetalResource const*, ResourceGroupBindingType, unsigned int) (61 samples, 0.02%)</title><rect x="41.3743%" y="837" width="0.0183%" height="15" fill="rgb(231,122,1)" fg:x="138145" fg:w="61"/><text x="41.6243%" y="847.50"></text></g><g><title>&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (221 samples, 0.07%)</title><rect x="41.3350%" y="869" width="0.0662%" height="15" fill="rgb(245,119,9)" fg:x="138014" fg:w="221"/><text x="41.5850%" y="879.50"></text></g><g><title>&lt;R as wgpu_hal::dynamic::DynResourceExt&gt;::expect_downcast_ref (37 samples, 0.01%)</title><rect x="41.4108%" y="869" width="0.0111%" height="15" fill="rgb(241,163,25)" fg:x="138267" fg:w="37"/><text x="41.6608%" y="879.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (255 samples, 0.08%)</title><rect x="41.4572%" y="869" width="0.0764%" height="15" fill="rgb(217,214,3)" fg:x="138422" fg:w="255"/><text x="41.7072%" y="879.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (183 samples, 0.05%)</title><rect x="41.4788%" y="853" width="0.0548%" height="15" fill="rgb(240,86,28)" fg:x="138494" fg:w="183"/><text x="41.7288%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (78 samples, 0.02%)</title><rect x="41.5336%" y="869" width="0.0234%" height="15" fill="rgb(215,47,9)" fg:x="138677" fg:w="78"/><text x="41.7836%" y="879.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (67 samples, 0.02%)</title><rect x="41.5989%" y="869" width="0.0201%" height="15" fill="rgb(252,25,45)" fg:x="138895" fg:w="67"/><text x="41.8489%" y="879.50"></text></g><g><title>wgpu_core::resource::TextureInner::raw (34 samples, 0.01%)</title><rect x="41.6253%" y="869" width="0.0102%" height="15" fill="rgb(251,164,9)" fg:x="138983" fg:w="34"/><text x="41.8753%" y="879.50"></text></g><g><title>wgpu_core::command::render::set_bind_group (2,119 samples, 0.63%)</title><rect x="41.0736%" y="885" width="0.6346%" height="15" fill="rgb(233,194,0)" fg:x="137141" fg:w="2119"/><text x="41.3236%" y="895.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (243 samples, 0.07%)</title><rect x="41.6354%" y="869" width="0.0728%" height="15" fill="rgb(249,111,24)" fg:x="139017" fg:w="243"/><text x="41.8854%" y="879.50"></text></g><g><title>wgpu_core::command::render::set_pipeline (46 samples, 0.01%)</title><rect x="41.7109%" y="885" width="0.0138%" height="15" fill="rgb(250,223,3)" fg:x="139269" fg:w="46"/><text x="41.9609%" y="895.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope::merge_bind_group (47 samples, 0.01%)</title><rect x="41.7376%" y="885" width="0.0141%" height="15" fill="rgb(236,178,37)" fg:x="139358" fg:w="47"/><text x="41.9876%" y="895.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (4,926 samples, 1.48%)</title><rect x="40.2805%" y="901" width="1.4753%" height="15" fill="rgb(241,158,50)" fg:x="134493" fg:w="4926"/><text x="40.5305%" y="911.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (5,240 samples, 1.57%)</title><rect x="40.1904%" y="933" width="1.5694%" height="15" fill="rgb(213,121,41)" fg:x="134192" fg:w="5240"/><text x="40.4404%" y="943.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (5,240 samples, 1.57%)</title><rect x="40.1904%" y="917" width="1.5694%" height="15" fill="rgb(240,92,3)" fg:x="134192" fg:w="5240"/><text x="40.4404%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (5,244 samples, 1.57%)</title><rect x="40.1904%" y="949" width="1.5706%" height="15" fill="rgb(205,123,3)" fg:x="134192" fg:w="5244"/><text x="40.4404%" y="959.50"></text></g><g><title>wgpu::api::command_encoder::CommandEncoder::begin_render_pass (37 samples, 0.01%)</title><rect x="41.7642%" y="949" width="0.0111%" height="15" fill="rgb(205,97,47)" fg:x="139447" fg:w="37"/><text x="42.0142%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,726 samples, 2.31%)</title><rect x="39.4731%" y="965" width="2.3139%" height="15" fill="rgb(247,152,14)" fg:x="131797" fg:w="7726"/><text x="39.7231%" y="975.50">&lt;..</text></g><g><title>wgpu::api::device::Device::create_command_encoder (39 samples, 0.01%)</title><rect x="41.7753%" y="949" width="0.0117%" height="15" fill="rgb(248,195,53)" fg:x="139484" fg:w="39"/><text x="42.0253%" y="959.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_command_encoder (39 samples, 0.01%)</title><rect x="41.7753%" y="933" width="0.0117%" height="15" fill="rgb(226,201,16)" fg:x="139484" fg:w="39"/><text x="42.0253%" y="943.50"></text></g><g><title>&lt;async_channel::RecvInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (40 samples, 0.01%)</title><rect x="41.8014%" y="949" width="0.0120%" height="15" fill="rgb(205,98,0)" fg:x="139571" fg:w="40"/><text x="42.0514%" y="959.50"></text></g><g><title>&lt;bevy_render::pipelined_rendering::PipelinedRenderingPlugin as bevy_app::plugin::Plugin&gt;::cleanup::_{{closure}}::_{{closure}}::_{{closure}} (52 samples, 0.02%)</title><rect x="41.7999%" y="965" width="0.0156%" height="15" fill="rgb(214,191,48)" fg:x="139566" fg:w="52"/><text x="42.0499%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.02%)</title><rect x="41.8154%" y="933" width="0.0213%" height="15" fill="rgb(237,112,39)" fg:x="139618" fg:w="71"/><text x="42.0654%" y="943.50"></text></g><g><title>_platform_memmove (71 samples, 0.02%)</title><rect x="41.8154%" y="917" width="0.0213%" height="15" fill="rgb(247,203,27)" fg:x="139618" fg:w="71"/><text x="42.0654%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (138 samples, 0.04%)</title><rect x="41.8538%" y="901" width="0.0413%" height="15" fill="rgb(235,124,28)" fg:x="139746" fg:w="138"/><text x="42.1038%" y="911.50"></text></g><g><title>_platform_memmove (123 samples, 0.04%)</title><rect x="41.8583%" y="885" width="0.0368%" height="15" fill="rgb(208,207,46)" fg:x="139761" fg:w="123"/><text x="42.1083%" y="895.50"></text></g><g><title>exr::image::read::specific_channels::read_and_convert_all_samples_batched::_{{closure}} (65 samples, 0.02%)</title><rect x="41.8966%" y="901" width="0.0195%" height="15" fill="rgb(234,176,4)" fg:x="139889" fg:w="65"/><text x="42.1466%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (374 samples, 0.11%)</title><rect x="41.8154%" y="965" width="0.1120%" height="15" fill="rgb(230,133,28)" fg:x="139618" fg:w="374"/><text x="42.0654%" y="975.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 0.11%)</title><rect x="41.8154%" y="949" width="0.1120%" height="15" fill="rgb(211,137,40)" fg:x="139618" fg:w="374"/><text x="42.0654%" y="959.50"></text></g><g><title>exr::image::read::image::ReadImage&lt;F,L&gt;::from_chunks (302 samples, 0.09%)</title><rect x="41.8370%" y="933" width="0.0904%" height="15" fill="rgb(254,35,13)" fg:x="139690" fg:w="302"/><text x="42.0870%" y="943.50"></text></g><g><title>&lt;exr::image::read::layers::FirstValidLayerReader&lt;C&gt; as exr::image::read::image::LayersReader&gt;::read_block (302 samples, 0.09%)</title><rect x="41.8370%" y="917" width="0.0904%" height="15" fill="rgb(225,49,51)" fg:x="139690" fg:w="302"/><text x="42.0870%" y="927.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37 samples, 0.01%)</title><rect x="41.9164%" y="901" width="0.0111%" height="15" fill="rgb(251,10,15)" fg:x="139955" fg:w="37"/><text x="42.1664%" y="911.50"></text></g><g><title>free_medium (37 samples, 0.01%)</title><rect x="41.9164%" y="885" width="0.0111%" height="15" fill="rgb(228,207,15)" fg:x="139955" fg:w="37"/><text x="42.1664%" y="895.50"></text></g><g><title>mvm_madvise_free_plat (37 samples, 0.01%)</title><rect x="41.9164%" y="869" width="0.0111%" height="15" fill="rgb(241,99,19)" fg:x="139955" fg:w="37"/><text x="42.1664%" y="879.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (37 samples, 0.01%)</title><rect x="41.9164%" y="853" width="0.0111%" height="15" fill="rgb(207,104,49)" fg:x="139955" fg:w="37"/><text x="42.1664%" y="863.50"></text></g><g><title>madvise (37 samples, 0.01%)</title><rect x="41.9164%" y="837" width="0.0111%" height="15" fill="rgb(234,99,18)" fg:x="139955" fg:w="37"/><text x="42.1664%" y="847.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update_contacts::_{{closure}}::_{{closure}} (42 samples, 0.01%)</title><rect x="41.9346%" y="965" width="0.0126%" height="15" fill="rgb(213,191,49)" fg:x="140016" fg:w="42"/><text x="42.1846%" y="975.50"></text></g><g><title>&lt;avian2d::collision::collider::parry::Collider as avian2d::collision::collider::AnyCollider&gt;::contact_manifolds_with_context (45 samples, 0.01%)</title><rect x="41.9496%" y="949" width="0.0135%" height="15" fill="rgb(210,226,19)" fg:x="140066" fg:w="45"/><text x="42.1996%" y="959.50"></text></g><g><title>&lt;parry2d::query::default_query_dispatcher::DefaultQueryDispatcher as parry2d::query::query_dispatcher::PersistentQueryDispatcher&lt;ManifoldData,ContactData&gt;&gt;::contact_manifold_convex_convex (35 samples, 0.01%)</title><rect x="42.0155%" y="917" width="0.0105%" height="15" fill="rgb(229,97,18)" fg:x="140286" fg:w="35"/><text x="42.2655%" y="927.50"></text></g><g><title>parry2d::query::contact_manifolds::contact_manifolds_convex_ball::contact_manifold_convex_ball (105 samples, 0.03%)</title><rect x="42.0485%" y="901" width="0.0314%" height="15" fill="rgb(211,167,15)" fg:x="140396" fg:w="105"/><text x="42.2985%" y="911.50"></text></g><g><title>parry2d::query::point::point_cuboid::_&lt;impl parry2d::query::point::point_query::PointQuery for parry2d::shape::cuboid::Cuboid&gt;::project_local_point_and_get_feature (35 samples, 0.01%)</title><rect x="42.0694%" y="885" width="0.0105%" height="15" fill="rgb(210,169,34)" fg:x="140466" fg:w="35"/><text x="42.3194%" y="895.50"></text></g><g><title>parry2d::query::contact_manifolds::contact_manifolds_convex_ball::contact_manifold_convex_ball_shapes (116 samples, 0.03%)</title><rect x="42.0482%" y="917" width="0.0347%" height="15" fill="rgb(241,121,31)" fg:x="140395" fg:w="116"/><text x="42.2982%" y="927.50"></text></g><g><title>&lt;parry2d::query::default_query_dispatcher::DefaultQueryDispatcher as parry2d::query::query_dispatcher::PersistentQueryDispatcher&lt;ManifoldData,ContactData&gt;&gt;::contact_manifolds (332 samples, 0.10%)</title><rect x="41.9838%" y="933" width="0.0994%" height="15" fill="rgb(232,40,11)" fg:x="140180" fg:w="332"/><text x="42.2338%" y="943.50"></text></g><g><title>avian2d::collision::collider::parry::contact_query::contact_manifolds (427 samples, 0.13%)</title><rect x="41.9826%" y="949" width="0.1279%" height="15" fill="rgb(205,86,26)" fg:x="140176" fg:w="427"/><text x="42.2326%" y="959.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update_contacts::_{{closure}}::_{{closure}} (93 samples, 0.03%)</title><rect x="42.1140%" y="949" width="0.0279%" height="15" fill="rgb(231,126,28)" fg:x="140615" fg:w="93"/><text x="42.3640%" y="959.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::atan2 (122 samples, 0.04%)</title><rect x="42.1470%" y="949" width="0.0365%" height="15" fill="rgb(219,221,18)" fg:x="140725" fg:w="122"/><text x="42.3970%" y="959.50"></text></g><g><title>atan2f (113 samples, 0.03%)</title><rect x="42.1497%" y="933" width="0.0338%" height="15" fill="rgb(211,40,0)" fg:x="140734" fg:w="113"/><text x="42.3997%" y="943.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::sin (45 samples, 0.01%)</title><rect x="42.1835%" y="949" width="0.0135%" height="15" fill="rgb(239,85,43)" fg:x="140847" fg:w="45"/><text x="42.4335%" y="959.50"></text></g><g><title>_malloc_zone_malloc (40 samples, 0.01%)</title><rect x="42.2090%" y="933" width="0.0120%" height="15" fill="rgb(231,55,21)" fg:x="140932" fg:w="40"/><text x="42.4590%" y="943.50"></text></g><g><title>szone_malloc_should_clear (425 samples, 0.13%)</title><rect x="42.2294%" y="933" width="0.1273%" height="15" fill="rgb(225,184,43)" fg:x="141000" fg:w="425"/><text x="42.4794%" y="943.50"></text></g><g><title>tiny_malloc_should_clear (377 samples, 0.11%)</title><rect x="42.2437%" y="917" width="0.1129%" height="15" fill="rgb(251,158,41)" fg:x="141048" fg:w="377"/><text x="42.4937%" y="927.50"></text></g><g><title>tiny_malloc_from_free_list (156 samples, 0.05%)</title><rect x="42.3099%" y="901" width="0.0467%" height="15" fill="rgb(234,159,37)" fg:x="141269" fg:w="156"/><text x="42.5599%" y="911.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (619 samples, 0.19%)</title><rect x="42.1970%" y="949" width="0.1854%" height="15" fill="rgb(216,204,22)" fg:x="140892" fg:w="619"/><text x="42.4470%" y="959.50"></text></g><g><title>tiny_malloc_should_clear (86 samples, 0.03%)</title><rect x="42.3566%" y="933" width="0.0258%" height="15" fill="rgb(214,17,3)" fg:x="141425" fg:w="86"/><text x="42.6066%" y="943.50"></text></g><g><title>&lt;avian2d::collision::collider::parry::Collider as avian2d::collision::collider::AnyCollider&gt;::contact_manifolds_with_context (37 samples, 0.01%)</title><rect x="42.3824%" y="933" width="0.0111%" height="15" fill="rgb(212,111,17)" fg:x="141511" fg:w="37"/><text x="42.6324%" y="943.50"></text></g><g><title>free_tiny (85 samples, 0.03%)</title><rect x="42.4025%" y="933" width="0.0255%" height="15" fill="rgb(221,157,24)" fg:x="141578" fg:w="85"/><text x="42.6525%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (153 samples, 0.05%)</title><rect x="42.3824%" y="949" width="0.0458%" height="15" fill="rgb(252,16,13)" fg:x="141511" fg:w="153"/><text x="42.6324%" y="959.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update_contacts::_{{closure}}::_{{closure}} (1,607 samples, 0.48%)</title><rect x="41.9484%" y="965" width="0.4813%" height="15" fill="rgb(221,62,2)" fg:x="140062" fg:w="1607"/><text x="42.1984%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1,F2,F3)&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch (61 samples, 0.02%)</title><rect x="42.4561%" y="949" width="0.0183%" height="15" fill="rgb(247,87,22)" fg:x="141757" fg:w="61"/><text x="42.7061%" y="959.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::cmp::PartialEq&gt;::eq (41 samples, 0.01%)</title><rect x="42.5459%" y="917" width="0.0123%" height="15" fill="rgb(215,73,9)" fg:x="142057" fg:w="41"/><text x="42.7959%" y="927.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (114 samples, 0.03%)</title><rect x="42.5390%" y="933" width="0.0341%" height="15" fill="rgb(207,175,33)" fg:x="142034" fg:w="114"/><text x="42.7890%" y="943.50"></text></g><g><title>bevy_ecs::query::par_iter::QueryParIter&lt;D,F&gt;::for_each_init::_{{closure}} (54 samples, 0.02%)</title><rect x="42.5828%" y="933" width="0.0162%" height="15" fill="rgb(243,129,54)" fg:x="142180" fg:w="54"/><text x="42.8328%" y="943.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_obb (67 samples, 0.02%)</title><rect x="42.5989%" y="933" width="0.0201%" height="15" fill="rgb(227,119,45)" fg:x="142234" fg:w="67"/><text x="42.8489%" y="943.50"></text></g><g><title>bevy_render::primitives::HalfSpace::normal_d (60 samples, 0.02%)</title><rect x="42.6193%" y="933" width="0.0180%" height="15" fill="rgb(205,109,36)" fg:x="142302" fg:w="60"/><text x="42.8693%" y="943.50"></text></g><g><title>bevy_render::view::visibility::check_visibility::_{{closure}} (73 samples, 0.02%)</title><rect x="42.6373%" y="933" width="0.0219%" height="15" fill="rgb(205,6,39)" fg:x="142362" fg:w="73"/><text x="42.8873%" y="943.50"></text></g><g><title>glam::f32::neon::vec3a::Vec3A::dot (88 samples, 0.03%)</title><rect x="42.6705%" y="933" width="0.0264%" height="15" fill="rgb(221,32,16)" fg:x="142473" fg:w="88"/><text x="42.9205%" y="943.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (754 samples, 0.23%)</title><rect x="42.4941%" y="949" width="0.2258%" height="15" fill="rgb(228,144,50)" fg:x="141884" fg:w="754"/><text x="42.7441%" y="959.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}}::_{{closure}}::_{{closure}} (1,116 samples, 0.33%)</title><rect x="42.4333%" y="965" width="0.3342%" height="15" fill="rgb(229,201,53)" fg:x="141681" fg:w="1116"/><text x="42.6833%" y="975.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (40 samples, 0.01%)</title><rect x="42.7771%" y="965" width="0.0120%" height="15" fill="rgb(249,153,27)" fg:x="142829" fg:w="40"/><text x="43.0271%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (56 samples, 0.02%)</title><rect x="42.7975%" y="949" width="0.0168%" height="15" fill="rgb(227,106,25)" fg:x="142897" fg:w="56"/><text x="43.0475%" y="959.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParam&gt;::get_param (76 samples, 0.02%)</title><rect x="42.8610%" y="933" width="0.0228%" height="15" fill="rgb(230,65,29)" fg:x="143109" fg:w="76"/><text x="43.1110%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (51 samples, 0.02%)</title><rect x="42.9766%" y="837" width="0.0153%" height="15" fill="rgb(221,57,46)" fg:x="143495" fg:w="51"/><text x="43.2266%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (50 samples, 0.01%)</title><rect x="42.9769%" y="821" width="0.0150%" height="15" fill="rgb(229,161,17)" fg:x="143496" fg:w="50"/><text x="43.2269%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (47 samples, 0.01%)</title><rect x="42.9778%" y="805" width="0.0141%" height="15" fill="rgb(222,213,11)" fg:x="143499" fg:w="47"/><text x="43.2278%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (62 samples, 0.02%)</title><rect x="42.9751%" y="853" width="0.0186%" height="15" fill="rgb(235,35,13)" fg:x="143490" fg:w="62"/><text x="43.2251%" y="863.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (43 samples, 0.01%)</title><rect x="42.9997%" y="853" width="0.0129%" height="15" fill="rgb(233,158,34)" fg:x="143572" fg:w="43"/><text x="43.2497%" y="863.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (228 samples, 0.07%)</title><rect x="42.9559%" y="869" width="0.0683%" height="15" fill="rgb(215,151,48)" fg:x="143426" fg:w="228"/><text x="43.2059%" y="879.50"></text></g><g><title>core::fmt::rt::Argument::fmt (251 samples, 0.08%)</title><rect x="42.9508%" y="885" width="0.0752%" height="15" fill="rgb(229,84,14)" fg:x="143409" fg:w="251"/><text x="43.2008%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (273 samples, 0.08%)</title><rect x="42.9472%" y="901" width="0.0818%" height="15" fill="rgb(229,68,14)" fg:x="143397" fg:w="273"/><text x="43.1972%" y="911.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (285 samples, 0.09%)</title><rect x="42.9472%" y="917" width="0.0854%" height="15" fill="rgb(243,106,26)" fg:x="143397" fg:w="285"/><text x="43.1972%" y="927.50"></text></g><g><title>iyes_perf_ui::entries::time::get_system_clock_local (65 samples, 0.02%)</title><rect x="43.0470%" y="917" width="0.0195%" height="15" fill="rgb(206,45,38)" fg:x="143730" fg:w="65"/><text x="43.2970%" y="927.50"></text></g><g><title>chrono::offset::local::inner::offset_from_utc_datetime (44 samples, 0.01%)</title><rect x="43.0533%" y="901" width="0.0132%" height="15" fill="rgb(226,6,15)" fg:x="143751" fg:w="44"/><text x="43.3033%" y="911.50"></text></g><g><title>chrono::offset::local::inner::offset (44 samples, 0.01%)</title><rect x="43.0533%" y="885" width="0.0132%" height="15" fill="rgb(232,22,54)" fg:x="143751" fg:w="44"/><text x="43.3033%" y="895.50"></text></g><g><title>&lt;E as iyes_perf_ui::ui::widget::PerfUiWidget&lt;E&gt;&gt;::update (554 samples, 0.17%)</title><rect x="42.9053%" y="933" width="0.1659%" height="15" fill="rgb(229,222,32)" fg:x="143257" fg:w="554"/><text x="43.1553%" y="943.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4) .&gt; Out&gt;&gt;::run (39 samples, 0.01%)</title><rect x="43.0817%" y="933" width="0.0117%" height="15" fill="rgb(228,62,29)" fg:x="143846" fg:w="39"/><text x="43.3317%" y="943.50"></text></g><g><title>&lt;[u8] as encase::core::rw::BufferMut&gt;::write (54 samples, 0.02%)</title><rect x="43.1195%" y="933" width="0.0162%" height="15" fill="rgb(251,103,34)" fg:x="143972" fg:w="54"/><text x="43.3695%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (67 samples, 0.02%)</title><rect x="43.1377%" y="885" width="0.0201%" height="15" fill="rgb(233,12,30)" fg:x="144033" fg:w="67"/><text x="43.3877%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.02%)</title><rect x="43.1368%" y="901" width="0.0240%" height="15" fill="rgb(238,52,0)" fg:x="144030" fg:w="80"/><text x="43.3868%" y="911.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreBindGroup as core::ops::drop::Drop&gt;::drop (83 samples, 0.02%)</title><rect x="43.1365%" y="917" width="0.0249%" height="15" fill="rgb(223,98,5)" fg:x="144029" fg:w="83"/><text x="43.3865%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.03%)</title><rect x="43.1356%" y="933" width="0.0297%" height="15" fill="rgb(228,75,37)" fg:x="144026" fg:w="99"/><text x="43.3856%" y="943.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::change_detection::DetectChangesMut&gt;::set_changed (35 samples, 0.01%)</title><rect x="43.1779%" y="933" width="0.0105%" height="15" fill="rgb(205,115,49)" fg:x="144167" fg:w="35"/><text x="43.4279%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Changed&lt;T&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch::_{{closure}} (54 samples, 0.02%)</title><rect x="43.1913%" y="933" width="0.0162%" height="15" fill="rgb(250,154,43)" fg:x="144212" fg:w="54"/><text x="43.4413%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1)&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch (120 samples, 0.04%)</title><rect x="43.2075%" y="933" width="0.0359%" height="15" fill="rgb(226,43,29)" fg:x="144266" fg:w="120"/><text x="43.4575%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (283 samples, 0.08%)</title><rect x="43.2518%" y="933" width="0.0848%" height="15" fill="rgb(249,228,39)" fg:x="144414" fg:w="283"/><text x="43.5018%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,955 samples, 0.89%)</title><rect x="43.3366%" y="933" width="0.8850%" height="15" fill="rgb(216,79,43)" fg:x="144697" fg:w="2955"/><text x="43.5866%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (64 samples, 0.02%)</title><rect x="44.2282%" y="885" width="0.0192%" height="15" fill="rgb(228,95,12)" fg:x="147674" fg:w="64"/><text x="44.4782%" y="895.50"></text></g><g><title>szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="44.2309%" y="869" width="0.0165%" height="15" fill="rgb(249,221,15)" fg:x="147683" fg:w="55"/><text x="44.4809%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (50 samples, 0.01%)</title><rect x="44.2324%" y="853" width="0.0150%" height="15" fill="rgb(233,34,13)" fg:x="147688" fg:w="50"/><text x="44.4824%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::access::FilteredAccess&lt;T&gt; as core::clone::Clone&gt;::clone (86 samples, 0.03%)</title><rect x="44.2219%" y="901" width="0.0258%" height="15" fill="rgb(214,103,39)" fg:x="147653" fg:w="86"/><text x="44.4719%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (97 samples, 0.03%)</title><rect x="44.2216%" y="917" width="0.0291%" height="15" fill="rgb(251,126,39)" fg:x="147652" fg:w="97"/><text x="44.4716%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ParamSet&lt;(P0,P1)&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (187 samples, 0.06%)</title><rect x="44.2216%" y="933" width="0.0560%" height="15" fill="rgb(214,216,36)" fg:x="147652" fg:w="187"/><text x="44.4716%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (38 samples, 0.01%)</title><rect x="44.2662%" y="917" width="0.0114%" height="15" fill="rgb(220,221,8)" fg:x="147801" fg:w="38"/><text x="44.5162%" y="927.50"></text></g><g><title>szone_malloc_should_clear (38 samples, 0.01%)</title><rect x="44.2662%" y="901" width="0.0114%" height="15" fill="rgb(240,216,3)" fg:x="147801" fg:w="38"/><text x="44.5162%" y="911.50"></text></g><g><title>tiny_malloc_should_clear (38 samples, 0.01%)</title><rect x="44.2662%" y="885" width="0.0114%" height="15" fill="rgb(232,218,17)" fg:x="147801" fg:w="38"/><text x="44.5162%" y="895.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (155 samples, 0.05%)</title><rect x="44.3079%" y="933" width="0.0464%" height="15" fill="rgb(229,163,45)" fg:x="147940" fg:w="155"/><text x="44.5579%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (173 samples, 0.05%)</title><rect x="44.3606%" y="933" width="0.0518%" height="15" fill="rgb(231,110,42)" fg:x="148116" fg:w="173"/><text x="44.6106%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (58 samples, 0.02%)</title><rect x="44.4441%" y="933" width="0.0174%" height="15" fill="rgb(208,170,48)" fg:x="148395" fg:w="58"/><text x="44.6941%" y="943.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (41 samples, 0.01%)</title><rect x="44.4492%" y="917" width="0.0123%" height="15" fill="rgb(239,116,25)" fg:x="148412" fg:w="41"/><text x="44.6992%" y="927.50"></text></g><g><title>cthread_yield (40 samples, 0.01%)</title><rect x="44.4495%" y="901" width="0.0120%" height="15" fill="rgb(219,200,50)" fg:x="148413" fg:w="40"/><text x="44.6995%" y="911.50"></text></g><g><title>swtch_pri (40 samples, 0.01%)</title><rect x="44.4495%" y="885" width="0.0120%" height="15" fill="rgb(245,200,0)" fg:x="148413" fg:w="40"/><text x="44.6995%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (41 samples, 0.01%)</title><rect x="44.4651%" y="933" width="0.0123%" height="15" fill="rgb(245,119,33)" fg:x="148465" fg:w="41"/><text x="44.7151%" y="943.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (58 samples, 0.02%)</title><rect x="44.4954%" y="853" width="0.0174%" height="15" fill="rgb(231,125,12)" fg:x="148566" fg:w="58"/><text x="44.7454%" y="863.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (57 samples, 0.02%)</title><rect x="44.4957%" y="837" width="0.0171%" height="15" fill="rgb(216,96,41)" fg:x="148567" fg:w="57"/><text x="44.7457%" y="847.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (59 samples, 0.02%)</title><rect x="44.4954%" y="869" width="0.0177%" height="15" fill="rgb(248,43,45)" fg:x="148566" fg:w="59"/><text x="44.7454%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer (111 samples, 0.03%)</title><rect x="44.4852%" y="901" width="0.0332%" height="15" fill="rgb(217,222,7)" fg:x="148532" fg:w="111"/><text x="44.7352%" y="911.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (78 samples, 0.02%)</title><rect x="44.4951%" y="885" width="0.0234%" height="15" fill="rgb(233,28,6)" fg:x="148565" fg:w="78"/><text x="44.7451%" y="895.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_staging_buffer (141 samples, 0.04%)</title><rect x="44.4780%" y="917" width="0.0422%" height="15" fill="rgb(231,218,15)" fg:x="148508" fg:w="141"/><text x="44.7280%" y="927.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_staging_buffer (143 samples, 0.04%)</title><rect x="44.4777%" y="933" width="0.0428%" height="15" fill="rgb(226,171,48)" fg:x="148507" fg:w="143"/><text x="44.7277%" y="943.50"></text></g><g><title>BoxSlayer2d::demo::movement::apply_screen_limits (39 samples, 0.01%)</title><rect x="44.5232%" y="933" width="0.0117%" height="15" fill="rgb(235,201,9)" fg:x="148659" fg:w="39"/><text x="44.7732%" y="943.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (71 samples, 0.02%)</title><rect x="44.5568%" y="885" width="0.0213%" height="15" fill="rgb(217,80,15)" fg:x="148771" fg:w="71"/><text x="44.8068%" y="895.50"></text></g><g><title>core::fmt::rt::Argument::fmt (145 samples, 0.04%)</title><rect x="44.5415%" y="901" width="0.0434%" height="15" fill="rgb(219,152,8)" fg:x="148720" fg:w="145"/><text x="44.7915%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (155 samples, 0.05%)</title><rect x="44.5400%" y="917" width="0.0464%" height="15" fill="rgb(243,107,38)" fg:x="148715" fg:w="155"/><text x="44.7900%" y="927.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (166 samples, 0.05%)</title><rect x="44.5400%" y="933" width="0.0497%" height="15" fill="rgb(231,17,5)" fg:x="148715" fg:w="166"/><text x="44.7900%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (72 samples, 0.02%)</title><rect x="44.5897%" y="933" width="0.0216%" height="15" fill="rgb(209,25,54)" fg:x="148881" fg:w="72"/><text x="44.8397%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (157 samples, 0.05%)</title><rect x="44.6113%" y="933" width="0.0470%" height="15" fill="rgb(219,0,2)" fg:x="148953" fg:w="157"/><text x="44.8613%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (49 samples, 0.01%)</title><rect x="44.6592%" y="933" width="0.0147%" height="15" fill="rgb(246,9,5)" fg:x="149113" fg:w="49"/><text x="44.9092%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (41 samples, 0.01%)</title><rect x="44.6769%" y="933" width="0.0123%" height="15" fill="rgb(226,159,4)" fg:x="149172" fg:w="41"/><text x="44.9269%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (57 samples, 0.02%)</title><rect x="44.7101%" y="901" width="0.0171%" height="15" fill="rgb(219,175,34)" fg:x="149283" fg:w="57"/><text x="44.9601%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (57 samples, 0.02%)</title><rect x="44.7101%" y="885" width="0.0171%" height="15" fill="rgb(236,10,46)" fg:x="149283" fg:w="57"/><text x="44.9601%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (95 samples, 0.03%)</title><rect x="44.7065%" y="917" width="0.0285%" height="15" fill="rgb(240,211,16)" fg:x="149271" fg:w="95"/><text x="44.9565%" y="927.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (108 samples, 0.03%)</title><rect x="44.7059%" y="933" width="0.0323%" height="15" fill="rgb(205,3,43)" fg:x="149269" fg:w="108"/><text x="44.9559%" y="943.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (59 samples, 0.02%)</title><rect x="44.7640%" y="917" width="0.0177%" height="15" fill="rgb(245,7,22)" fg:x="149463" fg:w="59"/><text x="45.0140%" y="927.50"></text></g><g><title>bevy_asset::assets::Assets&lt;A&gt;::track_assets (142 samples, 0.04%)</title><rect x="44.7442%" y="933" width="0.0425%" height="15" fill="rgb(239,132,32)" fg:x="149397" fg:w="142"/><text x="44.9942%" y="943.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::init (87 samples, 0.03%)</title><rect x="44.8251%" y="933" width="0.0261%" height="15" fill="rgb(228,202,34)" fg:x="149667" fg:w="87"/><text x="45.0751%" y="943.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::next (276 samples, 0.08%)</title><rect x="44.8512%" y="933" width="0.0827%" height="15" fill="rgb(254,200,22)" fg:x="149754" fg:w="276"/><text x="45.1012%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (49 samples, 0.01%)</title><rect x="44.9440%" y="901" width="0.0147%" height="15" fill="rgb(219,10,39)" fg:x="150064" fg:w="49"/><text x="45.1940%" y="911.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (73 samples, 0.02%)</title><rect x="44.9374%" y="917" width="0.0219%" height="15" fill="rgb(226,210,39)" fg:x="150042" fg:w="73"/><text x="45.1874%" y="927.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (67 samples, 0.02%)</title><rect x="44.9620%" y="917" width="0.0201%" height="15" fill="rgb(208,219,16)" fg:x="150124" fg:w="67"/><text x="45.2120%" y="927.50"></text></g><g><title>async_executor::State::run::_{{closure}} (62 samples, 0.02%)</title><rect x="44.9820%" y="917" width="0.0186%" height="15" fill="rgb(216,158,51)" fg:x="150191" fg:w="62"/><text x="45.2320%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.01%)</title><rect x="45.0036%" y="885" width="0.0111%" height="15" fill="rgb(233,14,44)" fg:x="150263" fg:w="37"/><text x="45.2536%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1,F2,F3)&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch (53 samples, 0.02%)</title><rect x="45.0171%" y="869" width="0.0159%" height="15" fill="rgb(237,97,39)" fg:x="150308" fg:w="53"/><text x="45.2671%" y="879.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}}::_{{closure}}::_{{closure}} (90 samples, 0.03%)</title><rect x="45.0156%" y="885" width="0.0270%" height="15" fill="rgb(218,198,43)" fg:x="150303" fg:w="90"/><text x="45.2656%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (58 samples, 0.02%)</title><rect x="45.0425%" y="885" width="0.0174%" height="15" fill="rgb(231,104,20)" fg:x="150393" fg:w="58"/><text x="45.2925%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (58 samples, 0.02%)</title><rect x="45.0425%" y="869" width="0.0174%" height="15" fill="rgb(254,36,13)" fg:x="150393" fg:w="58"/><text x="45.2925%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (44 samples, 0.01%)</title><rect x="45.0599%" y="885" width="0.0132%" height="15" fill="rgb(248,14,50)" fg:x="150451" fg:w="44"/><text x="45.3099%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (44 samples, 0.01%)</title><rect x="45.0599%" y="869" width="0.0132%" height="15" fill="rgb(217,107,29)" fg:x="150451" fg:w="44"/><text x="45.3099%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (233 samples, 0.07%)</title><rect x="45.0036%" y="901" width="0.0698%" height="15" fill="rgb(251,169,33)" fg:x="150263" fg:w="233"/><text x="45.2536%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (37 samples, 0.01%)</title><rect x="45.0740%" y="901" width="0.0111%" height="15" fill="rgb(217,108,32)" fg:x="150498" fg:w="37"/><text x="45.3240%" y="911.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (328 samples, 0.10%)</title><rect x="45.0009%" y="917" width="0.0982%" height="15" fill="rgb(219,66,42)" fg:x="150254" fg:w="328"/><text x="45.2509%" y="927.50"></text></g><g><title>bevy_ecs::query::par_iter::QueryParIter&lt;D,F&gt;::for_each (733 samples, 0.22%)</title><rect x="44.9341%" y="933" width="0.2195%" height="15" fill="rgb(206,180,7)" fg:x="150031" fg:w="733"/><text x="45.1841%" y="943.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::next (41 samples, 0.01%)</title><rect x="45.1725%" y="917" width="0.0123%" height="15" fill="rgb(208,226,31)" fg:x="150827" fg:w="41"/><text x="45.4225%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (168 samples, 0.05%)</title><rect x="45.1558%" y="933" width="0.0503%" height="15" fill="rgb(218,26,49)" fg:x="150771" fg:w="168"/><text x="45.4058%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_ptr (82 samples, 0.02%)</title><rect x="45.2136%" y="933" width="0.0246%" height="15" fill="rgb(233,197,48)" fg:x="150964" fg:w="82"/><text x="45.4636%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (53 samples, 0.02%)</title><rect x="45.2381%" y="933" width="0.0159%" height="15" fill="rgb(252,181,51)" fg:x="151046" fg:w="53"/><text x="45.4881%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::ImmutableSparseSet&lt;I,V&gt;::get (106 samples, 0.03%)</title><rect x="45.2603%" y="933" width="0.0317%" height="15" fill="rgb(253,90,19)" fg:x="151120" fg:w="106"/><text x="45.5103%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (114 samples, 0.03%)</title><rect x="45.2920%" y="933" width="0.0341%" height="15" fill="rgb(215,171,30)" fg:x="151226" fg:w="114"/><text x="45.5420%" y="943.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::single (37 samples, 0.01%)</title><rect x="45.3579%" y="933" width="0.0111%" height="15" fill="rgb(214,222,9)" fg:x="151446" fg:w="37"/><text x="45.6079%" y="943.50"></text></g><g><title>core::mem::replace (42 samples, 0.01%)</title><rect x="45.4235%" y="917" width="0.0126%" height="15" fill="rgb(223,3,22)" fg:x="151665" fg:w="42"/><text x="45.6735%" y="927.50"></text></g><g><title>bevy_platform::collections::hash_map::HashMap&lt;K,V,S&gt;::insert (93 samples, 0.03%)</title><rect x="45.4142%" y="933" width="0.0279%" height="15" fill="rgb(225,196,46)" fg:x="151634" fg:w="93"/><text x="45.6642%" y="943.50"></text></g><g><title>bevy_render::batching::gpu_preprocessing::collect_buffers_for_phase (135 samples, 0.04%)</title><rect x="45.4451%" y="933" width="0.0404%" height="15" fill="rgb(209,110,37)" fg:x="151737" fg:w="135"/><text x="45.6951%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (71 samples, 0.02%)</title><rect x="45.4900%" y="901" width="0.0213%" height="15" fill="rgb(249,89,12)" fg:x="151887" fg:w="71"/><text x="45.7400%" y="911.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (47 samples, 0.01%)</title><rect x="45.4972%" y="885" width="0.0141%" height="15" fill="rgb(226,27,33)" fg:x="151911" fg:w="47"/><text x="45.7472%" y="895.50"></text></g><g><title>cthread_yield (47 samples, 0.01%)</title><rect x="45.4972%" y="869" width="0.0141%" height="15" fill="rgb(213,82,22)" fg:x="151911" fg:w="47"/><text x="45.7472%" y="879.50"></text></g><g><title>swtch_pri (45 samples, 0.01%)</title><rect x="45.4978%" y="853" width="0.0135%" height="15" fill="rgb(248,140,0)" fg:x="151913" fg:w="45"/><text x="45.7478%" y="863.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (50 samples, 0.01%)</title><rect x="45.5241%" y="885" width="0.0150%" height="15" fill="rgb(228,106,3)" fg:x="152001" fg:w="50"/><text x="45.7741%" y="895.50"></text></g><g><title>IOConnectCallMethod (216 samples, 0.06%)</title><rect x="45.5514%" y="741" width="0.0647%" height="15" fill="rgb(209,23,37)" fg:x="152092" fg:w="216"/><text x="45.8014%" y="751.50"></text></g><g><title>io_connect_method (216 samples, 0.06%)</title><rect x="45.5514%" y="725" width="0.0647%" height="15" fill="rgb(241,93,50)" fg:x="152092" fg:w="216"/><text x="45.8014%" y="735.50"></text></g><g><title>mach_msg2_internal (204 samples, 0.06%)</title><rect x="45.5550%" y="709" width="0.0611%" height="15" fill="rgb(253,46,43)" fg:x="152104" fg:w="204"/><text x="45.8050%" y="719.50"></text></g><g><title>mach_msg2_trap (202 samples, 0.06%)</title><rect x="45.5556%" y="693" width="0.0605%" height="15" fill="rgb(226,206,43)" fg:x="152106" fg:w="202"/><text x="45.8056%" y="703.50"></text></g><g><title>IOGPUResourceCreate (235 samples, 0.07%)</title><rect x="45.5499%" y="757" width="0.0704%" height="15" fill="rgb(217,54,7)" fg:x="152087" fg:w="235"/><text x="45.7999%" y="767.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (281 samples, 0.08%)</title><rect x="45.5445%" y="773" width="0.0842%" height="15" fill="rgb(223,5,52)" fg:x="152069" fg:w="281"/><text x="45.7945%" y="783.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (283 samples, 0.08%)</title><rect x="45.5442%" y="789" width="0.0848%" height="15" fill="rgb(206,52,46)" fg:x="152068" fg:w="283"/><text x="45.7942%" y="799.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (320 samples, 0.10%)</title><rect x="45.5421%" y="837" width="0.0958%" height="15" fill="rgb(253,136,11)" fg:x="152061" fg:w="320"/><text x="45.7921%" y="847.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (318 samples, 0.10%)</title><rect x="45.5427%" y="821" width="0.0952%" height="15" fill="rgb(208,106,33)" fg:x="152063" fg:w="318"/><text x="45.7927%" y="831.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (315 samples, 0.09%)</title><rect x="45.5436%" y="805" width="0.0943%" height="15" fill="rgb(206,54,4)" fg:x="152066" fg:w="315"/><text x="45.7936%" y="815.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (342 samples, 0.10%)</title><rect x="45.5418%" y="853" width="0.1024%" height="15" fill="rgb(213,3,15)" fg:x="152060" fg:w="342"/><text x="45.7918%" y="863.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (34 samples, 0.01%)</title><rect x="45.6457%" y="837" width="0.0102%" height="15" fill="rgb(252,211,39)" fg:x="152407" fg:w="34"/><text x="45.8957%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (242 samples, 0.07%)</title><rect x="45.6442%" y="853" width="0.0725%" height="15" fill="rgb(223,6,36)" fg:x="152402" fg:w="242"/><text x="45.8942%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (173 samples, 0.05%)</title><rect x="45.6649%" y="837" width="0.0518%" height="15" fill="rgb(252,169,45)" fg:x="152471" fg:w="173"/><text x="45.9149%" y="847.50"></text></g><g><title>cthread_yield (173 samples, 0.05%)</title><rect x="45.6649%" y="821" width="0.0518%" height="15" fill="rgb(212,48,26)" fg:x="152471" fg:w="173"/><text x="45.9149%" y="831.50"></text></g><g><title>swtch_pri (170 samples, 0.05%)</title><rect x="45.6658%" y="805" width="0.0509%" height="15" fill="rgb(251,102,48)" fg:x="152474" fg:w="170"/><text x="45.9158%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (614 samples, 0.18%)</title><rect x="45.5400%" y="869" width="0.1839%" height="15" fill="rgb(243,208,16)" fg:x="152054" fg:w="614"/><text x="45.7900%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (689 samples, 0.21%)</title><rect x="45.5187%" y="901" width="0.2064%" height="15" fill="rgb(219,96,24)" fg:x="151983" fg:w="689"/><text x="45.7687%" y="911.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (620 samples, 0.19%)</title><rect x="45.5394%" y="885" width="0.1857%" height="15" fill="rgb(219,33,29)" fg:x="152052" fg:w="620"/><text x="45.7894%" y="895.50"></text></g><g><title>bevy_render::batching::gpu_preprocessing::write_batched_instance_buffers (801 samples, 0.24%)</title><rect x="45.4867%" y="933" width="0.2399%" height="15" fill="rgb(223,176,5)" fg:x="151876" fg:w="801"/><text x="45.7367%" y="943.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (792 samples, 0.24%)</title><rect x="45.4894%" y="917" width="0.2372%" height="15" fill="rgb(228,140,14)" fg:x="151885" fg:w="792"/><text x="45.7394%" y="927.50"></text></g><g><title>bevy_render::batching::no_gpu_preprocessing::batch_and_prepare_binned_render_phase (190 samples, 0.06%)</title><rect x="45.7266%" y="933" width="0.0569%" height="15" fill="rgb(217,179,31)" fg:x="152677" fg:w="190"/><text x="45.9766%" y="943.50"></text></g><g><title>bevy_render::extract_component::extract_components (66 samples, 0.02%)</title><rect x="45.7862%" y="933" width="0.0198%" height="15" fill="rgb(230,9,30)" fg:x="152876" fg:w="66"/><text x="46.0362%" y="943.50"></text></g><g><title>bevy_render::render_asset::extract_render_asset::_{{closure}} (98 samples, 0.03%)</title><rect x="45.8099%" y="933" width="0.0294%" height="15" fill="rgb(230,136,20)" fg:x="152955" fg:w="98"/><text x="46.0599%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.02%)</title><rect x="45.8159%" y="917" width="0.0234%" height="15" fill="rgb(215,210,22)" fg:x="152975" fg:w="78"/><text x="46.0659%" y="927.50"></text></g><g><title>_platform_memmove (78 samples, 0.02%)</title><rect x="45.8159%" y="901" width="0.0234%" height="15" fill="rgb(218,43,5)" fg:x="152975" fg:w="78"/><text x="46.0659%" y="911.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (35 samples, 0.01%)</title><rect x="45.8524%" y="805" width="0.0105%" height="15" fill="rgb(216,11,5)" fg:x="153097" fg:w="35"/><text x="46.1024%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (48 samples, 0.01%)</title><rect x="45.8524%" y="821" width="0.0144%" height="15" fill="rgb(209,82,29)" fg:x="153097" fg:w="48"/><text x="46.1024%" y="831.50"></text></g><g><title>wgpu_core::device::resource::Device::create_buffer (80 samples, 0.02%)</title><rect x="45.8524%" y="837" width="0.0240%" height="15" fill="rgb(244,115,12)" fg:x="153097" fg:w="80"/><text x="46.1024%" y="847.50"></text></g><g><title>&lt;wgpu::api::device::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (92 samples, 0.03%)</title><rect x="45.8491%" y="885" width="0.0276%" height="15" fill="rgb(222,82,18)" fg:x="153086" fg:w="92"/><text x="46.0991%" y="895.50"></text></g><g><title>wgpu::api::device::Device::create_buffer (85 samples, 0.03%)</title><rect x="45.8512%" y="869" width="0.0255%" height="15" fill="rgb(249,227,8)" fg:x="153093" fg:w="85"/><text x="46.1012%" y="879.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_buffer (85 samples, 0.03%)</title><rect x="45.8512%" y="853" width="0.0255%" height="15" fill="rgb(253,141,45)" fg:x="153093" fg:w="85"/><text x="46.1012%" y="863.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_buffer_with_data (93 samples, 0.03%)</title><rect x="45.8491%" y="901" width="0.0279%" height="15" fill="rgb(234,184,4)" fg:x="153086" fg:w="93"/><text x="46.0991%" y="911.50"></text></g><g><title>bevy_render::render_resource::bind_group::AsBindGroup::as_bind_group (96 samples, 0.03%)</title><rect x="45.8491%" y="917" width="0.0288%" height="15" fill="rgb(218,194,23)" fg:x="153086" fg:w="96"/><text x="46.0991%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.02%)</title><rect x="45.8784%" y="885" width="0.0225%" height="15" fill="rgb(235,66,41)" fg:x="153184" fg:w="75"/><text x="46.1284%" y="895.50"></text></g><g><title>_platform_memmove (75 samples, 0.02%)</title><rect x="45.8784%" y="869" width="0.0225%" height="15" fill="rgb(245,217,1)" fg:x="153184" fg:w="75"/><text x="46.1284%" y="879.50"></text></g><g><title>bevy_render::renderer::render_device::RenderDevice::create_texture_with_data (78 samples, 0.02%)</title><rect x="45.8778%" y="917" width="0.0234%" height="15" fill="rgb(229,91,1)" fg:x="153182" fg:w="78"/><text x="46.1278%" y="927.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_texture (76 samples, 0.02%)</title><rect x="45.8784%" y="901" width="0.0228%" height="15" fill="rgb(207,101,30)" fg:x="153184" fg:w="76"/><text x="46.1284%" y="911.50"></text></g><g><title>bevy_render::render_asset::prepare_assets (249 samples, 0.07%)</title><rect x="45.8392%" y="933" width="0.0746%" height="15" fill="rgb(223,82,49)" fg:x="153053" fg:w="249"/><text x="46.0892%" y="943.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (39 samples, 0.01%)</title><rect x="45.9488%" y="853" width="0.0117%" height="15" fill="rgb(218,167,17)" fg:x="153419" fg:w="39"/><text x="46.1988%" y="863.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (38 samples, 0.01%)</title><rect x="45.9491%" y="837" width="0.0114%" height="15" fill="rgb(208,103,14)" fg:x="153420" fg:w="38"/><text x="46.1991%" y="847.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (41 samples, 0.01%)</title><rect x="45.9488%" y="869" width="0.0123%" height="15" fill="rgb(238,20,8)" fg:x="153419" fg:w="41"/><text x="46.1988%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (49 samples, 0.01%)</title><rect x="45.9485%" y="885" width="0.0147%" height="15" fill="rgb(218,80,54)" fg:x="153418" fg:w="49"/><text x="46.1985%" y="895.50"></text></g><g><title>IOConnectCallMethod (220 samples, 0.07%)</title><rect x="45.9722%" y="741" width="0.0659%" height="15" fill="rgb(240,144,17)" fg:x="153497" fg:w="220"/><text x="46.2222%" y="751.50"></text></g><g><title>io_connect_method (219 samples, 0.07%)</title><rect x="45.9725%" y="725" width="0.0656%" height="15" fill="rgb(245,27,50)" fg:x="153498" fg:w="219"/><text x="46.2225%" y="735.50"></text></g><g><title>mach_msg2_internal (214 samples, 0.06%)</title><rect x="45.9740%" y="709" width="0.0641%" height="15" fill="rgb(251,51,7)" fg:x="153503" fg:w="214"/><text x="46.2240%" y="719.50"></text></g><g><title>mach_msg2_trap (214 samples, 0.06%)</title><rect x="45.9740%" y="693" width="0.0641%" height="15" fill="rgb(245,217,29)" fg:x="153503" fg:w="214"/><text x="46.2240%" y="703.50"></text></g><g><title>IOGPUResourceCreate (231 samples, 0.07%)</title><rect x="45.9722%" y="757" width="0.0692%" height="15" fill="rgb(221,176,29)" fg:x="153497" fg:w="231"/><text x="46.2222%" y="767.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (276 samples, 0.08%)</title><rect x="45.9680%" y="773" width="0.0827%" height="15" fill="rgb(212,180,24)" fg:x="153483" fg:w="276"/><text x="46.2180%" y="783.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (282 samples, 0.08%)</title><rect x="45.9671%" y="789" width="0.0845%" height="15" fill="rgb(254,24,2)" fg:x="153480" fg:w="282"/><text x="46.2171%" y="799.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (315 samples, 0.09%)</title><rect x="45.9662%" y="805" width="0.0943%" height="15" fill="rgb(230,100,2)" fg:x="153477" fg:w="315"/><text x="46.2162%" y="815.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (317 samples, 0.09%)</title><rect x="45.9659%" y="821" width="0.0949%" height="15" fill="rgb(219,142,25)" fg:x="153476" fg:w="317"/><text x="46.2159%" y="831.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (319 samples, 0.10%)</title><rect x="45.9656%" y="837" width="0.0955%" height="15" fill="rgb(240,73,43)" fg:x="153475" fg:w="319"/><text x="46.2156%" y="847.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (336 samples, 0.10%)</title><rect x="45.9656%" y="853" width="0.1006%" height="15" fill="rgb(214,114,15)" fg:x="153475" fg:w="336"/><text x="46.2156%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (112 samples, 0.03%)</title><rect x="46.0662%" y="853" width="0.0335%" height="15" fill="rgb(207,130,4)" fg:x="153811" fg:w="112"/><text x="46.3162%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (83 samples, 0.02%)</title><rect x="46.0749%" y="837" width="0.0249%" height="15" fill="rgb(221,25,40)" fg:x="153840" fg:w="83"/><text x="46.3249%" y="847.50"></text></g><g><title>cthread_yield (83 samples, 0.02%)</title><rect x="46.0749%" y="821" width="0.0249%" height="15" fill="rgb(241,184,7)" fg:x="153840" fg:w="83"/><text x="46.3249%" y="831.50"></text></g><g><title>swtch_pri (81 samples, 0.02%)</title><rect x="46.0755%" y="805" width="0.0243%" height="15" fill="rgb(235,159,4)" fg:x="153842" fg:w="81"/><text x="46.3255%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (479 samples, 0.14%)</title><rect x="45.9644%" y="869" width="0.1435%" height="15" fill="rgb(214,87,48)" fg:x="153471" fg:w="479"/><text x="46.2144%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (565 samples, 0.17%)</title><rect x="45.9392%" y="901" width="0.1692%" height="15" fill="rgb(246,198,24)" fg:x="153387" fg:w="565"/><text x="46.1892%" y="911.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (483 samples, 0.14%)</title><rect x="45.9638%" y="885" width="0.1447%" height="15" fill="rgb(209,66,40)" fg:x="153469" fg:w="483"/><text x="46.2138%" y="895.50"></text></g><g><title>bevy_render::render_resource::buffer_vec::RawBufferVec&lt;T&gt;::write_buffer (614 samples, 0.18%)</title><rect x="45.9258%" y="933" width="0.1839%" height="15" fill="rgb(233,147,39)" fg:x="153342" fg:w="614"/><text x="46.1758%" y="943.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (605 samples, 0.18%)</title><rect x="45.9285%" y="917" width="0.1812%" height="15" fill="rgb(231,145,52)" fg:x="153351" fg:w="605"/><text x="46.1785%" y="927.50"></text></g><g><title>bevy_render::render_resource::gpu_array_buffer::GpuArrayBuffer&lt;T&gt;::push (64 samples, 0.02%)</title><rect x="46.1103%" y="933" width="0.0192%" height="15" fill="rgb(206,20,26)" fg:x="153958" fg:w="64"/><text x="46.3603%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (608 samples, 0.18%)</title><rect x="46.1360%" y="901" width="0.1821%" height="15" fill="rgb(238,220,4)" fg:x="154044" fg:w="608"/><text x="46.3860%" y="911.50"></text></g><g><title>_platform_memmove (608 samples, 0.18%)</title><rect x="46.1360%" y="885" width="0.1821%" height="15" fill="rgb(252,195,42)" fg:x="154044" fg:w="608"/><text x="46.3860%" y="895.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (40 samples, 0.01%)</title><rect x="46.3235%" y="837" width="0.0120%" height="15" fill="rgb(209,10,6)" fg:x="154670" fg:w="40"/><text x="46.5735%" y="847.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (47 samples, 0.01%)</title><rect x="46.3217%" y="853" width="0.0141%" height="15" fill="rgb(229,3,52)" fg:x="154664" fg:w="47"/><text x="46.5717%" y="863.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (48 samples, 0.01%)</title><rect x="46.3217%" y="869" width="0.0144%" height="15" fill="rgb(253,49,37)" fg:x="154664" fg:w="48"/><text x="46.5717%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (61 samples, 0.02%)</title><rect x="46.3214%" y="885" width="0.0183%" height="15" fill="rgb(240,103,49)" fg:x="154663" fg:w="61"/><text x="46.5714%" y="895.50"></text></g><g><title>IOConnectCallMethod (649 samples, 0.19%)</title><rect x="46.3508%" y="741" width="0.1944%" height="15" fill="rgb(250,182,30)" fg:x="154761" fg:w="649"/><text x="46.6008%" y="751.50"></text></g><g><title>io_connect_method (649 samples, 0.19%)</title><rect x="46.3508%" y="725" width="0.1944%" height="15" fill="rgb(248,8,30)" fg:x="154761" fg:w="649"/><text x="46.6008%" y="735.50"></text></g><g><title>mach_msg2_internal (645 samples, 0.19%)</title><rect x="46.3520%" y="709" width="0.1932%" height="15" fill="rgb(237,120,30)" fg:x="154765" fg:w="645"/><text x="46.6020%" y="719.50"></text></g><g><title>mach_msg2_trap (644 samples, 0.19%)</title><rect x="46.3523%" y="693" width="0.1929%" height="15" fill="rgb(221,146,34)" fg:x="154766" fg:w="644"/><text x="46.6023%" y="703.50"></text></g><g><title>IOGPUResourceCreate (660 samples, 0.20%)</title><rect x="46.3496%" y="757" width="0.1977%" height="15" fill="rgb(242,55,13)" fg:x="154757" fg:w="660"/><text x="46.5996%" y="767.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (682 samples, 0.20%)</title><rect x="46.3457%" y="773" width="0.2043%" height="15" fill="rgb(242,112,31)" fg:x="154744" fg:w="682"/><text x="46.5957%" y="783.50"></text></g><g><title>-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (691 samples, 0.21%)</title><rect x="46.3436%" y="789" width="0.2070%" height="15" fill="rgb(249,192,27)" fg:x="154737" fg:w="691"/><text x="46.5936%" y="799.50"></text></g><g><title>IOConnectCallMethod (48 samples, 0.01%)</title><rect x="46.5508%" y="741" width="0.0144%" height="15" fill="rgb(208,204,44)" fg:x="155429" fg:w="48"/><text x="46.8008%" y="751.50"></text></g><g><title>io_connect_method (48 samples, 0.01%)</title><rect x="46.5508%" y="725" width="0.0144%" height="15" fill="rgb(208,93,54)" fg:x="155429" fg:w="48"/><text x="46.8008%" y="735.50"></text></g><g><title>mach_msg2_internal (45 samples, 0.01%)</title><rect x="46.5517%" y="709" width="0.0135%" height="15" fill="rgb(242,1,31)" fg:x="155432" fg:w="45"/><text x="46.8017%" y="719.50"></text></g><g><title>mach_msg2_trap (45 samples, 0.01%)</title><rect x="46.5517%" y="693" width="0.0135%" height="15" fill="rgb(241,83,25)" fg:x="155432" fg:w="45"/><text x="46.8017%" y="703.50"></text></g><g><title>IOGPUResourceCreate (52 samples, 0.02%)</title><rect x="46.5508%" y="757" width="0.0156%" height="15" fill="rgb(205,169,50)" fg:x="155429" fg:w="52"/><text x="46.8008%" y="767.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (57 samples, 0.02%)</title><rect x="46.5505%" y="789" width="0.0171%" height="15" fill="rgb(239,186,37)" fg:x="155428" fg:w="57"/><text x="46.8005%" y="799.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (57 samples, 0.02%)</title><rect x="46.5505%" y="773" width="0.0171%" height="15" fill="rgb(205,221,10)" fg:x="155428" fg:w="57"/><text x="46.8005%" y="783.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (767 samples, 0.23%)</title><rect x="46.3415%" y="837" width="0.2297%" height="15" fill="rgb(218,196,15)" fg:x="154730" fg:w="767"/><text x="46.5915%" y="847.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (766 samples, 0.23%)</title><rect x="46.3418%" y="821" width="0.2294%" height="15" fill="rgb(218,196,35)" fg:x="154731" fg:w="766"/><text x="46.5918%" y="831.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (764 samples, 0.23%)</title><rect x="46.3424%" y="805" width="0.2288%" height="15" fill="rgb(233,63,24)" fg:x="154733" fg:w="764"/><text x="46.5924%" y="815.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (789 samples, 0.24%)</title><rect x="46.3415%" y="853" width="0.2363%" height="15" fill="rgb(225,8,4)" fg:x="154730" fg:w="789"/><text x="46.5915%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (51 samples, 0.02%)</title><rect x="46.5778%" y="853" width="0.0153%" height="15" fill="rgb(234,105,35)" fg:x="155519" fg:w="51"/><text x="46.8278%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (43 samples, 0.01%)</title><rect x="46.5802%" y="837" width="0.0129%" height="15" fill="rgb(236,21,32)" fg:x="155527" fg:w="43"/><text x="46.8302%" y="847.50"></text></g><g><title>cthread_yield (43 samples, 0.01%)</title><rect x="46.5802%" y="821" width="0.0129%" height="15" fill="rgb(228,109,6)" fg:x="155527" fg:w="43"/><text x="46.8302%" y="831.50"></text></g><g><title>swtch_pri (40 samples, 0.01%)</title><rect x="46.5811%" y="805" width="0.0120%" height="15" fill="rgb(229,215,31)" fg:x="155530" fg:w="40"/><text x="46.8311%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (889 samples, 0.27%)</title><rect x="46.3406%" y="869" width="0.2663%" height="15" fill="rgb(221,52,54)" fg:x="154727" fg:w="889"/><text x="46.5906%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (969 samples, 0.29%)</title><rect x="46.3181%" y="901" width="0.2902%" height="15" fill="rgb(252,129,43)" fg:x="154652" fg:w="969"/><text x="46.5681%" y="911.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (895 samples, 0.27%)</title><rect x="46.3403%" y="885" width="0.2681%" height="15" fill="rgb(248,183,27)" fg:x="154726" fg:w="895"/><text x="46.5903%" y="895.50"></text></g><g><title>bevy_render::render_resource::gpu_array_buffer::GpuArrayBuffer&lt;T&gt;::write_buffer (1,605 samples, 0.48%)</title><rect x="46.1294%" y="933" width="0.4807%" height="15" fill="rgb(250,0,22)" fg:x="154022" fg:w="1605"/><text x="46.3794%" y="943.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (1,605 samples, 0.48%)</title><rect x="46.1294%" y="917" width="0.4807%" height="15" fill="rgb(213,166,10)" fg:x="154022" fg:w="1605"/><text x="46.3794%" y="927.50"></text></g><g><title>bevy_render::render_resource::pipeline_cache::ShaderCache::get (61 samples, 0.02%)</title><rect x="46.6101%" y="885" width="0.0183%" height="15" fill="rgb(207,163,36)" fg:x="155627" fg:w="61"/><text x="46.8601%" y="895.50"></text></g><g><title>naga_oil::compose::Composer::make_naga_module (47 samples, 0.01%)</title><rect x="46.6143%" y="869" width="0.0141%" height="15" fill="rgb(208,122,22)" fg:x="155641" fg:w="47"/><text x="46.8643%" y="879.50"></text></g><g><title>bevy_render::render_resource::pipeline_cache::PipelineCache::start_create_compute_pipeline::_{{closure}} (62 samples, 0.02%)</title><rect x="46.6101%" y="901" width="0.0186%" height="15" fill="rgb(207,104,49)" fg:x="155627" fg:w="62"/><text x="46.8601%" y="911.50"></text></g><g><title>bevy_render::render_resource::pipeline_cache::PipelineCache::block_on_render_pipeline (86 samples, 0.03%)</title><rect x="46.6101%" y="933" width="0.0258%" height="15" fill="rgb(248,211,50)" fg:x="155627" fg:w="86"/><text x="46.8601%" y="943.50"></text></g><g><title>bevy_render::render_resource::pipeline_cache::PipelineCache::process_queue (86 samples, 0.03%)</title><rect x="46.6101%" y="917" width="0.0258%" height="15" fill="rgb(217,13,45)" fg:x="155627" fg:w="86"/><text x="46.8601%" y="927.50"></text></g><g><title>mach_msg2_internal (236 samples, 0.07%)</title><rect x="46.6556%" y="709" width="0.0707%" height="15" fill="rgb(211,216,49)" fg:x="155779" fg:w="236"/><text x="46.9056%" y="719.50"></text></g><g><title>mach_msg2_trap (236 samples, 0.07%)</title><rect x="46.6556%" y="693" width="0.0707%" height="15" fill="rgb(221,58,53)" fg:x="155779" fg:w="236"/><text x="46.9056%" y="703.50"></text></g><g><title>IOConnectCallMethod (246 samples, 0.07%)</title><rect x="46.6529%" y="741" width="0.0737%" height="15" fill="rgb(220,112,41)" fg:x="155770" fg:w="246"/><text x="46.9029%" y="751.50"></text></g><g><title>io_connect_method (244 samples, 0.07%)</title><rect x="46.6535%" y="725" width="0.0731%" height="15" fill="rgb(236,38,28)" fg:x="155772" fg:w="244"/><text x="46.9035%" y="735.50"></text></g><g><title>IOGPUResourceCreate (259 samples, 0.08%)</title><rect x="46.6518%" y="757" width="0.0776%" height="15" fill="rgb(227,195,22)" fg:x="155766" fg:w="259"/><text x="46.9018%" y="767.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (289 samples, 0.09%)</title><rect x="46.6461%" y="789" width="0.0866%" height="15" fill="rgb(214,55,33)" fg:x="155747" fg:w="289"/><text x="46.8961%" y="799.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (284 samples, 0.09%)</title><rect x="46.6476%" y="773" width="0.0851%" height="15" fill="rgb(248,80,13)" fg:x="155752" fg:w="284"/><text x="46.8976%" y="783.50"></text></g><g><title>-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (35 samples, 0.01%)</title><rect x="46.7326%" y="789" width="0.0105%" height="15" fill="rgb(238,52,6)" fg:x="156036" fg:w="35"/><text x="46.9826%" y="799.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (332 samples, 0.10%)</title><rect x="46.6443%" y="805" width="0.0994%" height="15" fill="rgb(224,198,47)" fg:x="155741" fg:w="332"/><text x="46.8943%" y="815.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (337 samples, 0.10%)</title><rect x="46.6431%" y="837" width="0.1009%" height="15" fill="rgb(233,171,20)" fg:x="155737" fg:w="337"/><text x="46.8931%" y="847.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (335 samples, 0.10%)</title><rect x="46.6437%" y="821" width="0.1003%" height="15" fill="rgb(241,30,25)" fg:x="155739" fg:w="335"/><text x="46.8937%" y="831.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (351 samples, 0.11%)</title><rect x="46.6431%" y="853" width="0.1051%" height="15" fill="rgb(207,171,38)" fg:x="155737" fg:w="351"/><text x="46.8931%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (109 samples, 0.03%)</title><rect x="46.7482%" y="853" width="0.0326%" height="15" fill="rgb(234,70,1)" fg:x="156088" fg:w="109"/><text x="46.9982%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (77 samples, 0.02%)</title><rect x="46.7578%" y="837" width="0.0231%" height="15" fill="rgb(232,178,18)" fg:x="156120" fg:w="77"/><text x="47.0078%" y="847.50"></text></g><g><title>cthread_yield (77 samples, 0.02%)</title><rect x="46.7578%" y="821" width="0.0231%" height="15" fill="rgb(241,78,40)" fg:x="156120" fg:w="77"/><text x="47.0078%" y="831.50"></text></g><g><title>swtch_pri (75 samples, 0.02%)</title><rect x="46.7584%" y="805" width="0.0225%" height="15" fill="rgb(222,35,25)" fg:x="156122" fg:w="75"/><text x="47.0084%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (493 samples, 0.15%)</title><rect x="46.6425%" y="869" width="0.1477%" height="15" fill="rgb(207,92,16)" fg:x="155735" fg:w="493"/><text x="46.8925%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::create_staging_buffer (500 samples, 0.15%)</title><rect x="46.6425%" y="901" width="0.1497%" height="15" fill="rgb(216,59,51)" fg:x="155735" fg:w="500"/><text x="46.8925%" y="911.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (500 samples, 0.15%)</title><rect x="46.6425%" y="885" width="0.1497%" height="15" fill="rgb(213,80,28)" fg:x="155735" fg:w="500"/><text x="46.8925%" y="895.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::create_staging_buffer (506 samples, 0.15%)</title><rect x="46.6413%" y="917" width="0.1515%" height="15" fill="rgb(220,93,7)" fg:x="155731" fg:w="506"/><text x="46.8913%" y="927.50"></text></g><g><title>bevy_render::render_resource::uniform_buffer::DynamicUniformBuffer&lt;T&gt;::get_writer (516 samples, 0.15%)</title><rect x="46.6404%" y="933" width="0.1545%" height="15" fill="rgb(225,24,44)" fg:x="155728" fg:w="516"/><text x="46.8904%" y="943.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (48 samples, 0.01%)</title><rect x="46.8096%" y="869" width="0.0144%" height="15" fill="rgb(243,74,40)" fg:x="156293" fg:w="48"/><text x="47.0596%" y="879.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (48 samples, 0.01%)</title><rect x="46.8096%" y="853" width="0.0144%" height="15" fill="rgb(228,39,7)" fg:x="156293" fg:w="48"/><text x="47.0596%" y="863.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (47 samples, 0.01%)</title><rect x="46.8099%" y="837" width="0.0141%" height="15" fill="rgb(227,79,8)" fg:x="156294" fg:w="47"/><text x="47.0599%" y="847.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (54 samples, 0.02%)</title><rect x="46.8093%" y="885" width="0.0162%" height="15" fill="rgb(236,58,11)" fg:x="156292" fg:w="54"/><text x="47.0593%" y="895.50"></text></g><g><title>IOConnectCallMethod (219 samples, 0.07%)</title><rect x="46.8347%" y="741" width="0.0656%" height="15" fill="rgb(249,63,35)" fg:x="156377" fg:w="219"/><text x="47.0847%" y="751.50"></text></g><g><title>io_connect_method (218 samples, 0.07%)</title><rect x="46.8350%" y="725" width="0.0653%" height="15" fill="rgb(252,114,16)" fg:x="156378" fg:w="218"/><text x="47.0850%" y="735.50"></text></g><g><title>mach_msg2_internal (211 samples, 0.06%)</title><rect x="46.8371%" y="709" width="0.0632%" height="15" fill="rgb(254,151,24)" fg:x="156385" fg:w="211"/><text x="47.0871%" y="719.50"></text></g><g><title>mach_msg2_trap (208 samples, 0.06%)</title><rect x="46.8380%" y="693" width="0.0623%" height="15" fill="rgb(253,54,39)" fg:x="156388" fg:w="208"/><text x="47.0880%" y="703.50"></text></g><g><title>IOGPUResourceCreate (236 samples, 0.07%)</title><rect x="46.8341%" y="757" width="0.0707%" height="15" fill="rgb(243,25,45)" fg:x="156375" fg:w="236"/><text x="47.0841%" y="767.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (271 samples, 0.08%)</title><rect x="46.8297%" y="773" width="0.0812%" height="15" fill="rgb(234,134,9)" fg:x="156360" fg:w="271"/><text x="47.0797%" y="783.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (278 samples, 0.08%)</title><rect x="46.8282%" y="789" width="0.0833%" height="15" fill="rgb(227,166,31)" fg:x="156355" fg:w="278"/><text x="47.0782%" y="799.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (308 samples, 0.09%)</title><rect x="46.8279%" y="821" width="0.0922%" height="15" fill="rgb(245,143,41)" fg:x="156354" fg:w="308"/><text x="47.0779%" y="831.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (308 samples, 0.09%)</title><rect x="46.8279%" y="805" width="0.0922%" height="15" fill="rgb(238,181,32)" fg:x="156354" fg:w="308"/><text x="47.0779%" y="815.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (311 samples, 0.09%)</title><rect x="46.8273%" y="837" width="0.0931%" height="15" fill="rgb(224,113,18)" fg:x="156352" fg:w="311"/><text x="47.0773%" y="847.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (333 samples, 0.10%)</title><rect x="46.8273%" y="853" width="0.0997%" height="15" fill="rgb(240,229,28)" fg:x="156352" fg:w="333"/><text x="47.0773%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (94 samples, 0.03%)</title><rect x="46.9270%" y="853" width="0.0282%" height="15" fill="rgb(250,185,3)" fg:x="156685" fg:w="94"/><text x="47.1770%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (65 samples, 0.02%)</title><rect x="46.9357%" y="837" width="0.0195%" height="15" fill="rgb(212,59,25)" fg:x="156714" fg:w="65"/><text x="47.1857%" y="847.50"></text></g><g><title>cthread_yield (64 samples, 0.02%)</title><rect x="46.9360%" y="821" width="0.0192%" height="15" fill="rgb(221,87,20)" fg:x="156715" fg:w="64"/><text x="47.1860%" y="831.50"></text></g><g><title>swtch_pri (63 samples, 0.02%)</title><rect x="46.9363%" y="805" width="0.0189%" height="15" fill="rgb(213,74,28)" fg:x="156716" fg:w="63"/><text x="47.1863%" y="815.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (471 samples, 0.14%)</title><rect x="46.8258%" y="869" width="0.1411%" height="15" fill="rgb(224,132,34)" fg:x="156347" fg:w="471"/><text x="47.0758%" y="879.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (543 samples, 0.16%)</title><rect x="46.8045%" y="901" width="0.1626%" height="15" fill="rgb(222,101,24)" fg:x="156276" fg:w="543"/><text x="47.0545%" y="911.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (473 samples, 0.14%)</title><rect x="46.8255%" y="885" width="0.1417%" height="15" fill="rgb(254,142,4)" fg:x="156346" fg:w="473"/><text x="47.0755%" y="895.50"></text></g><g><title>bevy_render::render_resource::uniform_buffer::UniformBuffer&lt;T&gt;::write_buffer (577 samples, 0.17%)</title><rect x="46.7967%" y="933" width="0.1728%" height="15" fill="rgb(230,229,49)" fg:x="156250" fg:w="577"/><text x="47.0467%" y="943.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (576 samples, 0.17%)</title><rect x="46.7970%" y="917" width="0.1725%" height="15" fill="rgb(238,70,47)" fg:x="156251" fg:w="576"/><text x="47.0470%" y="927.50"></text></g><g><title>bevy_sprite::mesh2d::material::queue_material2d_meshes (119 samples, 0.04%)</title><rect x="46.9878%" y="933" width="0.0356%" height="15" fill="rgb(231,160,17)" fg:x="156888" fg:w="119"/><text x="47.2378%" y="943.50"></text></g><g><title>bevy_sprite::mesh2d::material::specialize_material2d_meshes::_{{closure}} (42 samples, 0.01%)</title><rect x="47.0300%" y="933" width="0.0126%" height="15" fill="rgb(218,68,53)" fg:x="157029" fg:w="42"/><text x="47.2800%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(cosmic_text::shape_run_cache::ShapeRunKey,(u64,alloc::vec::Vec&lt;cosmic_text::shape::ShapeGlyph&gt;))&gt; (89 samples, 0.03%)</title><rect x="47.0651%" y="917" width="0.0267%" height="15" fill="rgb(236,111,10)" fg:x="157146" fg:w="89"/><text x="47.3151%" y="927.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (47 samples, 0.01%)</title><rect x="47.0776%" y="901" width="0.0141%" height="15" fill="rgb(224,34,41)" fg:x="157188" fg:w="47"/><text x="47.3276%" y="911.50"></text></g><g><title>free_tiny (37 samples, 0.01%)</title><rect x="47.0806%" y="885" width="0.0111%" height="15" fill="rgb(241,118,19)" fg:x="157198" fg:w="37"/><text x="47.3306%" y="895.50"></text></g><g><title>bevy_text::pipeline::trim_cosmic_cache (165 samples, 0.05%)</title><rect x="47.0585%" y="933" width="0.0494%" height="15" fill="rgb(238,129,25)" fg:x="157124" fg:w="165"/><text x="47.3085%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (45 samples, 0.01%)</title><rect x="47.0944%" y="917" width="0.0135%" height="15" fill="rgb(238,22,31)" fg:x="157244" fg:w="45"/><text x="47.3444%" y="927.50"></text></g><g><title>bevy_ui::stack::update_uistack_recursive (37 samples, 0.01%)</title><rect x="47.1732%" y="885" width="0.0111%" height="15" fill="rgb(222,174,48)" fg:x="157507" fg:w="37"/><text x="47.4232%" y="895.50"></text></g><g><title>bevy_ui::stack::update_uistack_recursive (209 samples, 0.06%)</title><rect x="47.1390%" y="901" width="0.0626%" height="15" fill="rgb(206,152,40)" fg:x="157393" fg:w="209"/><text x="47.3890%" y="911.50"></text></g><g><title>bevy_ui::stack::update_uistack_recursive (250 samples, 0.07%)</title><rect x="47.1312%" y="917" width="0.0749%" height="15" fill="rgb(218,99,54)" fg:x="157367" fg:w="250"/><text x="47.3812%" y="927.50"></text></g><g><title>bevy_ui::stack::ui_stack_system (320 samples, 0.10%)</title><rect x="47.1148%" y="933" width="0.0958%" height="15" fill="rgb(220,174,26)" fg:x="157312" fg:w="320"/><text x="47.3648%" y="943.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (190 samples, 0.06%)</title><rect x="47.2199%" y="933" width="0.0569%" height="15" fill="rgb(245,116,9)" fg:x="157663" fg:w="190"/><text x="47.4699%" y="943.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (217 samples, 0.06%)</title><rect x="47.2858%" y="933" width="0.0650%" height="15" fill="rgb(209,72,35)" fg:x="157883" fg:w="217"/><text x="47.5358%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (154 samples, 0.05%)</title><rect x="47.3577%" y="933" width="0.0461%" height="15" fill="rgb(226,126,21)" fg:x="158123" fg:w="154"/><text x="47.6077%" y="943.50"></text></g><g><title>core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (46 samples, 0.01%)</title><rect x="47.4047%" y="933" width="0.0138%" height="15" fill="rgb(227,192,1)" fg:x="158280" fg:w="46"/><text x="47.6547%" y="943.50"></text></g><g><title>core::mem::replace (80 samples, 0.02%)</title><rect x="47.4200%" y="933" width="0.0240%" height="15" fill="rgb(237,180,29)" fg:x="158331" fg:w="80"/><text x="47.6700%" y="943.50"></text></g><g><title>_platform_memmove (36 samples, 0.01%)</title><rect x="47.4331%" y="917" width="0.0108%" height="15" fill="rgb(230,197,35)" fg:x="158375" fg:w="36"/><text x="47.6831%" y="927.50"></text></g><g><title>core::num::_&lt;impl u32&gt;::wrapping_sub (42 samples, 0.01%)</title><rect x="47.4448%" y="933" width="0.0126%" height="15" fill="rgb(246,193,31)" fg:x="158414" fg:w="42"/><text x="47.6948%" y="943.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (43 samples, 0.01%)</title><rect x="47.4637%" y="933" width="0.0129%" height="15" fill="rgb(241,36,4)" fg:x="158477" fg:w="43"/><text x="47.7137%" y="943.50"></text></g><g><title>bevy_text::text2d::extract_text2d_sprite (36 samples, 0.01%)</title><rect x="47.5071%" y="901" width="0.0108%" height="15" fill="rgb(241,130,17)" fg:x="158622" fg:w="36"/><text x="47.7571%" y="911.50"></text></g><g><title>0x1380fa423 (147 samples, 0.04%)</title><rect x="47.4793%" y="917" width="0.0440%" height="15" fill="rgb(206,137,32)" fg:x="158529" fg:w="147"/><text x="47.7293%" y="927.50"></text></g><g><title>0x14e971e0f (42 samples, 0.01%)</title><rect x="47.5335%" y="917" width="0.0126%" height="15" fill="rgb(237,228,51)" fg:x="158710" fg:w="42"/><text x="47.7835%" y="927.50"></text></g><g><title>0x17000af83 (73 samples, 0.02%)</title><rect x="47.5467%" y="917" width="0.0219%" height="15" fill="rgb(243,6,42)" fg:x="158754" fg:w="73"/><text x="47.7967%" y="927.50"></text></g><g><title>bevy_color::color::_&lt;impl core::convert::From&lt;bevy_color::color::Color&gt; for bevy_color::linear_rgba::LinearRgba&gt;::from (51 samples, 0.02%)</title><rect x="47.6194%" y="901" width="0.0153%" height="15" fill="rgb(251,74,28)" fg:x="158997" fg:w="51"/><text x="47.8694%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (123 samples, 0.04%)</title><rect x="47.6152%" y="917" width="0.0368%" height="15" fill="rgb(218,20,49)" fg:x="158983" fg:w="123"/><text x="47.8652%" y="927.50"></text></g><g><title>std::f32::_&lt;impl f32&gt;::powf (49 samples, 0.01%)</title><rect x="47.6374%" y="901" width="0.0147%" height="15" fill="rgb(238,28,14)" fg:x="159057" fg:w="49"/><text x="47.8874%" y="911.50"></text></g><g><title>powf (39 samples, 0.01%)</title><rect x="47.6404%" y="885" width="0.0117%" height="15" fill="rgb(229,40,46)" fg:x="159067" fg:w="39"/><text x="47.8904%" y="895.50"></text></g><g><title>&lt;wgpu_core::binding_model::BindGroup as core::ops::drop::Drop&gt;::drop (49 samples, 0.01%)</title><rect x="47.6551%" y="853" width="0.0147%" height="15" fill="rgb(244,195,20)" fg:x="159116" fg:w="49"/><text x="47.9051%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (100 samples, 0.03%)</title><rect x="47.6545%" y="869" width="0.0299%" height="15" fill="rgb(253,56,35)" fg:x="159114" fg:w="100"/><text x="47.9045%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (34 samples, 0.01%)</title><rect x="47.6742%" y="853" width="0.0102%" height="15" fill="rgb(210,149,44)" fg:x="159180" fg:w="34"/><text x="47.9242%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.04%)</title><rect x="47.6536%" y="885" width="0.0353%" height="15" fill="rgb(240,135,12)" fg:x="159111" fg:w="118"/><text x="47.9036%" y="895.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreBindGroup as core::ops::drop::Drop&gt;::drop (127 samples, 0.04%)</title><rect x="47.6533%" y="901" width="0.0380%" height="15" fill="rgb(251,24,50)" fg:x="159110" fg:w="127"/><text x="47.9033%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.05%)</title><rect x="47.6527%" y="917" width="0.0542%" height="15" fill="rgb(243,200,47)" fg:x="159108" fg:w="181"/><text x="47.9027%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (173 samples, 0.05%)</title><rect x="47.7177%" y="885" width="0.0518%" height="15" fill="rgb(224,166,26)" fg:x="159325" fg:w="173"/><text x="47.9677%" y="895.50"></text></g><g><title>bevy_ui::focus::ui_focus_system::_{{closure}} (43 samples, 0.01%)</title><rect x="47.7767%" y="885" width="0.0129%" height="15" fill="rgb(233,0,47)" fg:x="159522" fg:w="43"/><text x="48.0267%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (312 samples, 0.09%)</title><rect x="47.7069%" y="917" width="0.0934%" height="15" fill="rgb(253,80,5)" fg:x="159289" fg:w="312"/><text x="47.9569%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_mut (306 samples, 0.09%)</title><rect x="47.7087%" y="901" width="0.0916%" height="15" fill="rgb(214,133,25)" fg:x="159295" fg:w="306"/><text x="47.9587%" y="911.50"></text></g><g><title>free_tiny (185 samples, 0.06%)</title><rect x="47.8255%" y="901" width="0.0554%" height="15" fill="rgb(209,27,14)" fg:x="159685" fg:w="185"/><text x="48.0755%" y="911.50"></text></g><g><title>tiny_free_no_lock (104 samples, 0.03%)</title><rect x="47.8497%" y="885" width="0.0311%" height="15" fill="rgb(219,102,51)" fg:x="159766" fg:w="104"/><text x="48.0997%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (279 samples, 0.08%)</title><rect x="47.8003%" y="917" width="0.0836%" height="15" fill="rgb(237,18,16)" fg:x="159601" fg:w="279"/><text x="48.0503%" y="927.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Changed&lt;T&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch::_{{closure}} (57 samples, 0.02%)</title><rect x="47.9216%" y="917" width="0.0171%" height="15" fill="rgb(241,85,17)" fg:x="160006" fg:w="57"/><text x="48.1716%" y="927.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1,F2)&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch (70 samples, 0.02%)</title><rect x="47.9387%" y="917" width="0.0210%" height="15" fill="rgb(236,90,42)" fg:x="160063" fg:w="70"/><text x="48.1887%" y="927.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1,F2)&gt; as bevy_ecs::query::world_query::WorldQuery&gt;::set_table (53 samples, 0.02%)</title><rect x="47.9597%" y="917" width="0.0159%" height="15" fill="rgb(249,57,21)" fg:x="160133" fg:w="53"/><text x="48.2097%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.02%)</title><rect x="47.9893%" y="917" width="0.0180%" height="15" fill="rgb(243,12,36)" fg:x="160232" fg:w="60"/><text x="48.2393%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.02%)</title><rect x="48.0109%" y="917" width="0.0183%" height="15" fill="rgb(253,128,47)" fg:x="160304" fg:w="61"/><text x="48.2609%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.02%)</title><rect x="48.0291%" y="917" width="0.0249%" height="15" fill="rgb(207,33,20)" fg:x="160365" fg:w="83"/><text x="48.2791%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.03%)</title><rect x="48.0738%" y="917" width="0.0344%" height="15" fill="rgb(233,215,35)" fg:x="160514" fg:w="115"/><text x="48.3238%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (43 samples, 0.01%)</title><rect x="48.1082%" y="917" width="0.0129%" height="15" fill="rgb(249,188,52)" fg:x="160629" fg:w="43"/><text x="48.3582%" y="927.50"></text></g><g><title>alloc::task::raw_waker::drop_waker (43 samples, 0.01%)</title><rect x="48.1082%" y="901" width="0.0129%" height="15" fill="rgb(225,12,32)" fg:x="160629" fg:w="43"/><text x="48.3582%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (59 samples, 0.02%)</title><rect x="48.1250%" y="901" width="0.0177%" height="15" fill="rgb(247,98,14)" fg:x="160685" fg:w="59"/><text x="48.3750%" y="911.50"></text></g><g><title>free_tiny (101 samples, 0.03%)</title><rect x="48.1558%" y="869" width="0.0302%" height="15" fill="rgb(247,219,48)" fg:x="160788" fg:w="101"/><text x="48.4058%" y="879.50"></text></g><g><title>tiny_free_no_lock (49 samples, 0.01%)</title><rect x="48.1714%" y="853" width="0.0147%" height="15" fill="rgb(253,60,48)" fg:x="160840" fg:w="49"/><text x="48.4214%" y="863.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (144 samples, 0.04%)</title><rect x="48.1439%" y="885" width="0.0431%" height="15" fill="rgb(245,15,52)" fg:x="160748" fg:w="144"/><text x="48.3939%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.03%)</title><rect x="48.1870%" y="885" width="0.0261%" height="15" fill="rgb(220,133,28)" fg:x="160892" fg:w="87"/><text x="48.4370%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (238 samples, 0.07%)</title><rect x="48.1433%" y="901" width="0.0713%" height="15" fill="rgb(217,180,4)" fg:x="160746" fg:w="238"/><text x="48.3933%" y="911.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (303 samples, 0.09%)</title><rect x="48.1244%" y="917" width="0.0907%" height="15" fill="rgb(251,24,1)" fg:x="160683" fg:w="303"/><text x="48.3744%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (67 samples, 0.02%)</title><rect x="48.2253%" y="917" width="0.0201%" height="15" fill="rgb(212,185,49)" fg:x="161020" fg:w="67"/><text x="48.4753%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (55 samples, 0.02%)</title><rect x="48.2472%" y="885" width="0.0165%" height="15" fill="rgb(215,175,22)" fg:x="161093" fg:w="55"/><text x="48.4972%" y="895.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (45 samples, 0.01%)</title><rect x="48.2502%" y="869" width="0.0135%" height="15" fill="rgb(250,205,14)" fg:x="161103" fg:w="45"/><text x="48.5002%" y="879.50"></text></g><g><title>cthread_yield (45 samples, 0.01%)</title><rect x="48.2502%" y="853" width="0.0135%" height="15" fill="rgb(225,211,22)" fg:x="161103" fg:w="45"/><text x="48.5002%" y="863.50"></text></g><g><title>swtch_pri (44 samples, 0.01%)</title><rect x="48.2505%" y="837" width="0.0132%" height="15" fill="rgb(251,179,42)" fg:x="161104" fg:w="44"/><text x="48.5005%" y="847.50"></text></g><g><title>_dispatch_kq_poll (105 samples, 0.03%)</title><rect x="48.3047%" y="741" width="0.0314%" height="15" fill="rgb(208,216,51)" fg:x="161285" fg:w="105"/><text x="48.5547%" y="751.50"></text></g><g><title>kevent_id (105 samples, 0.03%)</title><rect x="48.3047%" y="725" width="0.0314%" height="15" fill="rgb(235,36,11)" fg:x="161285" fg:w="105"/><text x="48.5547%" y="735.50"></text></g><g><title>_dispatch_event_loop_poke (109 samples, 0.03%)</title><rect x="48.3041%" y="757" width="0.0326%" height="15" fill="rgb(213,189,28)" fg:x="161283" fg:w="109"/><text x="48.5541%" y="767.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (121 samples, 0.04%)</title><rect x="48.3035%" y="773" width="0.0362%" height="15" fill="rgb(227,203,42)" fg:x="161281" fg:w="121"/><text x="48.5535%" y="783.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (129 samples, 0.04%)</title><rect x="48.3029%" y="789" width="0.0386%" height="15" fill="rgb(244,72,36)" fg:x="161279" fg:w="129"/><text x="48.5529%" y="799.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (139 samples, 0.04%)</title><rect x="48.3026%" y="805" width="0.0416%" height="15" fill="rgb(213,53,17)" fg:x="161278" fg:w="139"/><text x="48.5526%" y="815.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (162 samples, 0.05%)</title><rect x="48.3008%" y="821" width="0.0485%" height="15" fill="rgb(207,167,3)" fg:x="161272" fg:w="162"/><text x="48.5508%" y="831.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (174 samples, 0.05%)</title><rect x="48.2990%" y="837" width="0.0521%" height="15" fill="rgb(216,98,30)" fg:x="161266" fg:w="174"/><text x="48.5490%" y="847.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites::activate (202 samples, 0.06%)</title><rect x="48.2912%" y="869" width="0.0605%" height="15" fill="rgb(236,123,15)" fg:x="161240" fg:w="202"/><text x="48.5412%" y="879.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (176 samples, 0.05%)</title><rect x="48.2990%" y="853" width="0.0527%" height="15" fill="rgb(248,81,50)" fg:x="161266" fg:w="176"/><text x="48.5490%" y="863.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (76 samples, 0.02%)</title><rect x="48.3589%" y="789" width="0.0228%" height="15" fill="rgb(214,120,4)" fg:x="161466" fg:w="76"/><text x="48.6089%" y="799.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginComputePass(AGXStreamHardwareCommandRec**) (92 samples, 0.03%)</title><rect x="48.3589%" y="805" width="0.0276%" height="15" fill="rgb(208,179,34)" fg:x="161466" fg:w="92"/><text x="48.6089%" y="815.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setAndBindResource(IOGPUMetalResource const*, unsigned int) (46 samples, 0.01%)</title><rect x="48.3897%" y="789" width="0.0138%" height="15" fill="rgb(227,140,7)" fg:x="161569" fg:w="46"/><text x="48.6397%" y="799.50"></text></g><g><title>AGX::PassiveResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindPassiveResource(_PassiveResourceInfo const&amp;) (43 samples, 0.01%)</title><rect x="48.3906%" y="773" width="0.0129%" height="15" fill="rgb(214,22,6)" fg:x="161572" fg:w="43"/><text x="48.6406%" y="783.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindComputeResources(IOGPUMetalResource const* const*, IOGPUMetalResource const* const*, bool) (68 samples, 0.02%)</title><rect x="48.3864%" y="805" width="0.0204%" height="15" fill="rgb(207,137,27)" fg:x="161558" fg:w="68"/><text x="48.6364%" y="815.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (259 samples, 0.08%)</title><rect x="48.3535%" y="837" width="0.0776%" height="15" fill="rgb(210,8,46)" fg:x="161448" fg:w="259"/><text x="48.6035%" y="847.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (251 samples, 0.08%)</title><rect x="48.3559%" y="821" width="0.0752%" height="15" fill="rgb(240,16,54)" fg:x="161456" fg:w="251"/><text x="48.6059%" y="831.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (262 samples, 0.08%)</title><rect x="48.3535%" y="853" width="0.0785%" height="15" fill="rgb(211,209,29)" fg:x="161448" fg:w="262"/><text x="48.6035%" y="863.50"></text></g><g><title>-[AGXG15GFamilyBlitContext initWithCommandBuffer:descriptor:] (54 samples, 0.02%)</title><rect x="48.4416%" y="805" width="0.0162%" height="15" fill="rgb(226,228,24)" fg:x="161742" fg:w="54"/><text x="48.6916%" y="815.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer blitCommandEncoderCommon:] (66 samples, 0.02%)</title><rect x="48.4413%" y="821" width="0.0198%" height="15" fill="rgb(222,84,9)" fg:x="161741" fg:w="66"/><text x="48.6913%" y="831.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (69 samples, 0.02%)</title><rect x="48.4413%" y="837" width="0.0207%" height="15" fill="rgb(234,203,30)" fg:x="161741" fg:w="69"/><text x="48.6913%" y="847.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer (634 samples, 0.19%)</title><rect x="48.2738%" y="885" width="0.1899%" height="15" fill="rgb(238,109,14)" fg:x="161182" fg:w="634"/><text x="48.5238%" y="895.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (374 samples, 0.11%)</title><rect x="48.3517%" y="869" width="0.1120%" height="15" fill="rgb(233,206,34)" fg:x="161442" fg:w="374"/><text x="48.6017%" y="879.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (75 samples, 0.02%)</title><rect x="48.4413%" y="853" width="0.0225%" height="15" fill="rgb(220,167,47)" fg:x="161741" fg:w="75"/><text x="48.6913%" y="863.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_staging_buffer (736 samples, 0.22%)</title><rect x="48.2472%" y="901" width="0.2204%" height="15" fill="rgb(238,105,10)" fg:x="161093" fg:w="736"/><text x="48.4972%" y="911.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_staging_buffer (744 samples, 0.22%)</title><rect x="48.2457%" y="917" width="0.2228%" height="15" fill="rgb(213,227,17)" fg:x="161088" fg:w="744"/><text x="48.4957%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (37 samples, 0.01%)</title><rect x="48.4832%" y="917" width="0.0111%" height="15" fill="rgb(217,132,38)" fg:x="161881" fg:w="37"/><text x="48.7332%" y="927.50"></text></g><g><title>szone_malloc_should_clear (157 samples, 0.05%)</title><rect x="48.5173%" y="869" width="0.0470%" height="15" fill="rgb(242,146,4)" fg:x="161995" fg:w="157"/><text x="48.7673%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (140 samples, 0.04%)</title><rect x="48.5224%" y="853" width="0.0419%" height="15" fill="rgb(212,61,9)" fg:x="162012" fg:w="140"/><text x="48.7724%" y="863.50"></text></g><g><title>tiny_malloc_from_free_list (102 samples, 0.03%)</title><rect x="48.5338%" y="837" width="0.0305%" height="15" fill="rgb(247,126,22)" fg:x="162050" fg:w="102"/><text x="48.7838%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (187 samples, 0.06%)</title><rect x="48.5089%" y="885" width="0.0560%" height="15" fill="rgb(220,196,2)" fg:x="161967" fg:w="187"/><text x="48.7589%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (200 samples, 0.06%)</title><rect x="48.5059%" y="901" width="0.0599%" height="15" fill="rgb(208,46,4)" fg:x="161957" fg:w="200"/><text x="48.7559%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (268 samples, 0.08%)</title><rect x="48.4958%" y="917" width="0.0803%" height="15" fill="rgb(252,104,46)" fg:x="161923" fg:w="268"/><text x="48.7458%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (36 samples, 0.01%)</title><rect x="48.5760%" y="917" width="0.0108%" height="15" fill="rgb(237,152,48)" fg:x="162191" fg:w="36"/><text x="48.8260%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_text::glyph::PositionedGlyph]&gt; (54 samples, 0.02%)</title><rect x="48.5928%" y="901" width="0.0162%" height="15" fill="rgb(221,59,37)" fg:x="162247" fg:w="54"/><text x="48.8428%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (97 samples, 0.03%)</title><rect x="48.5868%" y="917" width="0.0291%" height="15" fill="rgb(209,202,51)" fg:x="162227" fg:w="97"/><text x="48.8368%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (117 samples, 0.04%)</title><rect x="48.6165%" y="917" width="0.0350%" height="15" fill="rgb(228,81,30)" fg:x="162326" fg:w="117"/><text x="48.8665%" y="927.50"></text></g><g><title>szone_malloc_should_clear (120 samples, 0.04%)</title><rect x="48.6689%" y="869" width="0.0359%" height="15" fill="rgb(227,42,39)" fg:x="162501" fg:w="120"/><text x="48.9189%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (106 samples, 0.03%)</title><rect x="48.6731%" y="853" width="0.0317%" height="15" fill="rgb(221,26,2)" fg:x="162515" fg:w="106"/><text x="48.9231%" y="863.50"></text></g><g><title>tiny_malloc_from_free_list (77 samples, 0.02%)</title><rect x="48.6818%" y="837" width="0.0231%" height="15" fill="rgb(254,61,31)" fg:x="162544" fg:w="77"/><text x="48.9318%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (140 samples, 0.04%)</title><rect x="48.6635%" y="885" width="0.0419%" height="15" fill="rgb(222,173,38)" fg:x="162483" fg:w="140"/><text x="48.9135%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (141 samples, 0.04%)</title><rect x="48.6635%" y="901" width="0.0422%" height="15" fill="rgb(218,50,12)" fg:x="162483" fg:w="141"/><text x="48.9135%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (189 samples, 0.06%)</title><rect x="48.6515%" y="917" width="0.0566%" height="15" fill="rgb(223,88,40)" fg:x="162443" fg:w="189"/><text x="48.9015%" y="927.50"></text></g><g><title>async_executor::Runner::runnable::_{{closure}}::_{{closure}} (102 samples, 0.03%)</title><rect x="48.7261%" y="901" width="0.0305%" height="15" fill="rgb(237,54,19)" fg:x="162692" fg:w="102"/><text x="48.9761%" y="911.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (65 samples, 0.02%)</title><rect x="48.7590%" y="901" width="0.0195%" height="15" fill="rgb(251,129,25)" fg:x="162802" fg:w="65"/><text x="49.0090%" y="911.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (236 samples, 0.07%)</title><rect x="48.7171%" y="917" width="0.0707%" height="15" fill="rgb(238,97,19)" fg:x="162662" fg:w="236"/><text x="48.9671%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (78 samples, 0.02%)</title><rect x="48.7995%" y="901" width="0.0234%" height="15" fill="rgb(240,169,18)" fg:x="162937" fg:w="78"/><text x="49.0495%" y="911.50"></text></g><g><title>free_tiny (48 samples, 0.01%)</title><rect x="48.8402%" y="837" width="0.0144%" height="15" fill="rgb(230,187,49)" fg:x="163073" fg:w="48"/><text x="49.0902%" y="847.50"></text></g><g><title>_posix_memalign (83 samples, 0.02%)</title><rect x="48.8339%" y="885" width="0.0249%" height="15" fill="rgb(209,44,26)" fg:x="163052" fg:w="83"/><text x="49.0839%" y="895.50"></text></g><g><title>_malloc_zone_memalign (82 samples, 0.02%)</title><rect x="48.8342%" y="869" width="0.0246%" height="15" fill="rgb(244,0,6)" fg:x="163053" fg:w="82"/><text x="49.0842%" y="879.50"></text></g><g><title>tiny_memalign (69 samples, 0.02%)</title><rect x="48.8381%" y="853" width="0.0207%" height="15" fill="rgb(248,18,21)" fg:x="163066" fg:w="69"/><text x="49.0881%" y="863.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (84 samples, 0.03%)</title><rect x="48.8339%" y="901" width="0.0252%" height="15" fill="rgb(245,180,19)" fg:x="163052" fg:w="84"/><text x="49.0839%" y="911.50"></text></g><g><title>async_executor::State::run::_{{closure}} (242 samples, 0.07%)</title><rect x="48.7878%" y="917" width="0.0725%" height="15" fill="rgb(252,118,36)" fg:x="162898" fg:w="242"/><text x="49.0378%" y="927.50"></text></g><g><title>wgpu_core::command::render::set_bind_group (61 samples, 0.02%)</title><rect x="48.8971%" y="805" width="0.0183%" height="15" fill="rgb(210,224,19)" fg:x="163263" fg:w="61"/><text x="49.1471%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (113 samples, 0.03%)</title><rect x="48.8821%" y="869" width="0.0338%" height="15" fill="rgb(218,30,24)" fg:x="163213" fg:w="113"/><text x="49.1321%" y="879.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (113 samples, 0.03%)</title><rect x="48.8821%" y="853" width="0.0338%" height="15" fill="rgb(219,75,50)" fg:x="163213" fg:w="113"/><text x="49.1321%" y="863.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (113 samples, 0.03%)</title><rect x="48.8821%" y="837" width="0.0338%" height="15" fill="rgb(234,72,50)" fg:x="163213" fg:w="113"/><text x="49.1321%" y="847.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (108 samples, 0.03%)</title><rect x="48.8836%" y="821" width="0.0323%" height="15" fill="rgb(219,100,48)" fg:x="163218" fg:w="108"/><text x="49.1336%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (149 samples, 0.04%)</title><rect x="48.8719%" y="885" width="0.0446%" height="15" fill="rgb(253,5,41)" fg:x="163179" fg:w="149"/><text x="49.1219%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(F0,F1)&gt; as bevy_ecs::query::filter::QueryFilter&gt;::filter_fetch (34 samples, 0.01%)</title><rect x="48.9375%" y="869" width="0.0102%" height="15" fill="rgb(247,181,11)" fg:x="163398" fg:w="34"/><text x="49.1875%" y="879.50"></text></g><g><title>bevy_render::primitives::Frustum::intersects_obb (55 samples, 0.02%)</title><rect x="48.9804%" y="853" width="0.0165%" height="15" fill="rgb(222,223,25)" fg:x="163541" fg:w="55"/><text x="49.2304%" y="863.50"></text></g><g><title>bevy_render::primitives::HalfSpace::normal_d (34 samples, 0.01%)</title><rect x="48.9968%" y="853" width="0.0102%" height="15" fill="rgb(214,198,28)" fg:x="163596" fg:w="34"/><text x="49.2468%" y="863.50"></text></g><g><title>bevy_render::view::visibility::check_visibility::_{{closure}} (49 samples, 0.01%)</title><rect x="49.0070%" y="853" width="0.0147%" height="15" fill="rgb(230,46,43)" fg:x="163630" fg:w="49"/><text x="49.2570%" y="863.50"></text></g><g><title>glam::f32::neon::vec3a::Vec3A::dot (88 samples, 0.03%)</title><rect x="49.0277%" y="853" width="0.0264%" height="15" fill="rgb(233,65,53)" fg:x="163699" fg:w="88"/><text x="49.2777%" y="863.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (367 samples, 0.11%)</title><rect x="48.9576%" y="869" width="0.1099%" height="15" fill="rgb(221,121,27)" fg:x="163465" fg:w="367"/><text x="49.2076%" y="879.50"></text></g><g><title>bevy_transform::systems::parallel::propagate_parent_transforms::_{{closure}} (43 samples, 0.01%)</title><rect x="49.0741%" y="869" width="0.0129%" height="15" fill="rgb(247,70,47)" fg:x="163854" fg:w="43"/><text x="49.3241%" y="879.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}}::_{{closure}}::_{{closure}} (628 samples, 0.19%)</title><rect x="48.9202%" y="885" width="0.1881%" height="15" fill="rgb(228,85,35)" fg:x="163340" fg:w="628"/><text x="49.1702%" y="895.50"></text></g><g><title>bevy_render::render_resource::buffer_vec::RawBufferVec&lt;T&gt;::write_buffer (37 samples, 0.01%)</title><rect x="49.1214%" y="837" width="0.0111%" height="15" fill="rgb(209,50,18)" fg:x="164012" fg:w="37"/><text x="49.3714%" y="847.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (37 samples, 0.01%)</title><rect x="49.1214%" y="821" width="0.0111%" height="15" fill="rgb(250,19,35)" fg:x="164012" fg:w="37"/><text x="49.3714%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (86 samples, 0.03%)</title><rect x="49.1193%" y="853" width="0.0258%" height="15" fill="rgb(253,107,29)" fg:x="164005" fg:w="86"/><text x="49.3693%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (140 samples, 0.04%)</title><rect x="49.1082%" y="885" width="0.0419%" height="15" fill="rgb(252,179,29)" fg:x="163968" fg:w="140"/><text x="49.3582%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (140 samples, 0.04%)</title><rect x="49.1082%" y="869" width="0.0419%" height="15" fill="rgb(238,194,6)" fg:x="163968" fg:w="140"/><text x="49.3582%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (40 samples, 0.01%)</title><rect x="49.1502%" y="885" width="0.0120%" height="15" fill="rgb(238,164,29)" fg:x="164108" fg:w="40"/><text x="49.4002%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (40 samples, 0.01%)</title><rect x="49.1502%" y="869" width="0.0120%" height="15" fill="rgb(224,25,9)" fg:x="164108" fg:w="40"/><text x="49.4002%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (976 samples, 0.29%)</title><rect x="48.8719%" y="901" width="0.2923%" height="15" fill="rgb(244,153,23)" fg:x="163179" fg:w="976"/><text x="49.1219%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (38 samples, 0.01%)</title><rect x="49.1648%" y="901" width="0.0114%" height="15" fill="rgb(212,203,14)" fg:x="164157" fg:w="38"/><text x="49.4148%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;)&gt;::par_fold_init_unchecked_manual&lt;core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;,bevy_ecs::query::par_iter::QueryParIter&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;),()&gt;::for_each_init&lt;bevy_render::view::visibility::check_visibility::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}},core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;&gt;::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;)&gt;::par_fold_init_unchecked_manual&lt;core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;,bevy_ecs::query::par_iter::QueryParIter&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;),()&gt;::for_each_init&lt;bevy_render::view::visibility::check_visibility::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}},core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;&gt;::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (34 samples, 0.01%)</title><rect x="49.1762%" y="901" width="0.0102%" height="15" fill="rgb(220,164,20)" fg:x="164195" fg:w="34"/><text x="49.4262%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (59 samples, 0.02%)</title><rect x="49.1975%" y="901" width="0.0177%" height="15" fill="rgb(222,203,48)" fg:x="164266" fg:w="59"/><text x="49.4475%" y="911.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1,183 samples, 0.35%)</title><rect x="48.8644%" y="917" width="0.3543%" height="15" fill="rgb(215,159,22)" fg:x="163154" fg:w="1183"/><text x="49.1144%" y="927.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (66 samples, 0.02%)</title><rect x="49.2191%" y="869" width="0.0198%" height="15" fill="rgb(216,183,47)" fg:x="164338" fg:w="66"/><text x="49.4691%" y="879.50"></text></g><g><title>pthread_cond_signal (66 samples, 0.02%)</title><rect x="49.2191%" y="853" width="0.0198%" height="15" fill="rgb(229,195,25)" fg:x="164338" fg:w="66"/><text x="49.4691%" y="863.50"></text></g><g><title>__psynch_cvsignal (66 samples, 0.02%)</title><rect x="49.2191%" y="837" width="0.0198%" height="15" fill="rgb(224,132,51)" fg:x="164338" fg:w="66"/><text x="49.4691%" y="847.50"></text></g><g><title>alloc::task::raw_waker::wake (68 samples, 0.02%)</title><rect x="49.2188%" y="885" width="0.0204%" height="15" fill="rgb(240,63,7)" fg:x="164337" fg:w="68"/><text x="49.4688%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (92 samples, 0.03%)</title><rect x="49.2188%" y="901" width="0.0276%" height="15" fill="rgb(249,182,41)" fg:x="164337" fg:w="92"/><text x="49.4688%" y="911.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (176 samples, 0.05%)</title><rect x="49.2188%" y="917" width="0.0527%" height="15" fill="rgb(243,47,26)" fg:x="164337" fg:w="176"/><text x="49.4688%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (62 samples, 0.02%)</title><rect x="49.2529%" y="901" width="0.0186%" height="15" fill="rgb(233,48,2)" fg:x="164451" fg:w="62"/><text x="49.5029%" y="911.50"></text></g><g><title>avian2d::sync::update_previous_global_transforms (43 samples, 0.01%)</title><rect x="49.2766%" y="917" width="0.0129%" height="15" fill="rgb(244,165,34)" fg:x="164530" fg:w="43"/><text x="49.5266%" y="927.50"></text></g><g><title>bevy_asset::handle::Handle&lt;A&gt;::id (385 samples, 0.12%)</title><rect x="49.2978%" y="917" width="0.1153%" height="15" fill="rgb(207,89,7)" fg:x="164601" fg:w="385"/><text x="49.5478%" y="927.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;D,F&gt;::fold_over_table_range (99 samples, 0.03%)</title><rect x="49.4748%" y="917" width="0.0297%" height="15" fill="rgb(244,117,36)" fg:x="165192" fg:w="99"/><text x="49.7248%" y="927.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::init (43 samples, 0.01%)</title><rect x="49.5045%" y="917" width="0.0129%" height="15" fill="rgb(226,144,34)" fg:x="165291" fg:w="43"/><text x="49.7545%" y="927.50"></text></g><g><title>bevy_ecs::query::iter::QueryIterationCursor&lt;D,F&gt;::next (341 samples, 0.10%)</title><rect x="49.5180%" y="917" width="0.1021%" height="15" fill="rgb(213,23,19)" fg:x="165336" fg:w="341"/><text x="49.7680%" y="927.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}} (42 samples, 0.01%)</title><rect x="49.6210%" y="917" width="0.0126%" height="15" fill="rgb(217,75,12)" fg:x="165680" fg:w="42"/><text x="49.8710%" y="927.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (36 samples, 0.01%)</title><rect x="49.6431%" y="901" width="0.0108%" height="15" fill="rgb(224,159,17)" fg:x="165754" fg:w="36"/><text x="49.8931%" y="911.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}} (118 samples, 0.04%)</title><rect x="49.6357%" y="917" width="0.0353%" height="15" fill="rgb(217,118,1)" fg:x="165729" fg:w="118"/><text x="49.8857%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::ImmutableSparseSet&lt;I,V&gt;::get (60 samples, 0.02%)</title><rect x="49.6791%" y="917" width="0.0180%" height="15" fill="rgb(232,180,48)" fg:x="165874" fg:w="60"/><text x="49.9291%" y="927.50"></text></g><g><title>bevy_ecs::storage::table::TableRow::as_usize (72 samples, 0.02%)</title><rect x="49.6980%" y="917" width="0.0216%" height="15" fill="rgb(230,27,33)" fg:x="165937" fg:w="72"/><text x="49.9480%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get (247 samples, 0.07%)</title><rect x="49.7327%" y="917" width="0.0740%" height="15" fill="rgb(205,31,21)" fg:x="166053" fg:w="247"/><text x="49.9827%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (53 samples, 0.02%)</title><rect x="49.8067%" y="917" width="0.0159%" height="15" fill="rgb(253,59,4)" fg:x="166300" fg:w="53"/><text x="50.0567%" y="927.50"></text></g><g><title>bevy_pbr::render::mesh::extract_meshes_for_gpu_building (56 samples, 0.02%)</title><rect x="49.8741%" y="917" width="0.0168%" height="15" fill="rgb(224,201,9)" fg:x="166525" fg:w="56"/><text x="50.1241%" y="927.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (35 samples, 0.01%)</title><rect x="49.9391%" y="773" width="0.0105%" height="15" fill="rgb(229,206,30)" fg:x="166742" fg:w="35"/><text x="50.1891%" y="783.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (35 samples, 0.01%)</title><rect x="49.9391%" y="757" width="0.0105%" height="15" fill="rgb(212,67,47)" fg:x="166742" fg:w="35"/><text x="50.1891%" y="767.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (41 samples, 0.01%)</title><rect x="49.9391%" y="821" width="0.0123%" height="15" fill="rgb(211,96,50)" fg:x="166742" fg:w="41"/><text x="50.1891%" y="831.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (41 samples, 0.01%)</title><rect x="49.9391%" y="805" width="0.0123%" height="15" fill="rgb(252,114,18)" fg:x="166742" fg:w="41"/><text x="50.1891%" y="815.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (41 samples, 0.01%)</title><rect x="49.9391%" y="789" width="0.0123%" height="15" fill="rgb(223,58,37)" fg:x="166742" fg:w="41"/><text x="50.1891%" y="799.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (42 samples, 0.01%)</title><rect x="49.9391%" y="837" width="0.0126%" height="15" fill="rgb(237,70,4)" fg:x="166742" fg:w="42"/><text x="50.1891%" y="847.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (62 samples, 0.02%)</title><rect x="49.9391%" y="853" width="0.0186%" height="15" fill="rgb(244,85,46)" fg:x="166742" fg:w="62"/><text x="50.1891%" y="863.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::create_staging_buffer (64 samples, 0.02%)</title><rect x="49.9388%" y="901" width="0.0192%" height="15" fill="rgb(223,39,52)" fg:x="166741" fg:w="64"/><text x="50.1888%" y="911.50"></text></g><g><title>wgpu_core::device::queue::Queue::create_staging_buffer (64 samples, 0.02%)</title><rect x="49.9388%" y="885" width="0.0192%" height="15" fill="rgb(218,200,14)" fg:x="166741" fg:w="64"/><text x="50.1888%" y="895.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (64 samples, 0.02%)</title><rect x="49.9388%" y="869" width="0.0192%" height="15" fill="rgb(208,171,16)" fg:x="166741" fg:w="64"/><text x="50.1888%" y="879.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::copy_element_data (66 samples, 0.02%)</title><rect x="49.9388%" y="917" width="0.0198%" height="15" fill="rgb(234,200,18)" fg:x="166741" fg:w="66"/><text x="50.1888%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,324 samples, 0.40%)</title><rect x="49.9762%" y="885" width="0.3965%" height="15" fill="rgb(228,45,11)" fg:x="166866" fg:w="1324"/><text x="50.2262%" y="895.50"></text></g><g><title>_platform_memmove (1,324 samples, 0.40%)</title><rect x="49.9762%" y="869" width="0.3965%" height="15" fill="rgb(237,182,11)" fg:x="166866" fg:w="1324"/><text x="50.2262%" y="879.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (71 samples, 0.02%)</title><rect x="50.3841%" y="837" width="0.0213%" height="15" fill="rgb(241,175,49)" fg:x="168228" fg:w="71"/><text x="50.6341%" y="847.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (71 samples, 0.02%)</title><rect x="50.3841%" y="821" width="0.0213%" height="15" fill="rgb(247,38,35)" fg:x="168228" fg:w="71"/><text x="50.6341%" y="831.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (76 samples, 0.02%)</title><rect x="50.3841%" y="853" width="0.0228%" height="15" fill="rgb(228,39,49)" fg:x="168228" fg:w="76"/><text x="50.6341%" y="863.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (89 samples, 0.03%)</title><rect x="50.3838%" y="869" width="0.0267%" height="15" fill="rgb(226,101,26)" fg:x="168227" fg:w="89"/><text x="50.6338%" y="879.50"></text></g><g><title>IOConnectCallMethod (678 samples, 0.20%)</title><rect x="50.4221%" y="725" width="0.2031%" height="15" fill="rgb(206,141,19)" fg:x="168355" fg:w="678"/><text x="50.6721%" y="735.50"></text></g><g><title>io_connect_method (677 samples, 0.20%)</title><rect x="50.4224%" y="709" width="0.2028%" height="15" fill="rgb(211,200,13)" fg:x="168356" fg:w="677"/><text x="50.6724%" y="719.50"></text></g><g><title>mach_msg2_internal (671 samples, 0.20%)</title><rect x="50.4242%" y="693" width="0.2010%" height="15" fill="rgb(241,121,6)" fg:x="168362" fg:w="671"/><text x="50.6742%" y="703.50"></text></g><g><title>mach_msg2_trap (668 samples, 0.20%)</title><rect x="50.4251%" y="677" width="0.2001%" height="15" fill="rgb(234,221,29)" fg:x="168365" fg:w="668"/><text x="50.6751%" y="687.50"></text></g><g><title>IOGPUResourceCreate (689 samples, 0.21%)</title><rect x="50.4218%" y="741" width="0.2064%" height="15" fill="rgb(229,136,5)" fg:x="168354" fg:w="689"/><text x="50.6718%" y="751.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (718 samples, 0.22%)</title><rect x="50.4194%" y="757" width="0.2150%" height="15" fill="rgb(238,36,11)" fg:x="168346" fg:w="718"/><text x="50.6694%" y="767.50"></text></g><g><title>-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (724 samples, 0.22%)</title><rect x="50.4180%" y="773" width="0.2168%" height="15" fill="rgb(251,55,41)" fg:x="168341" fg:w="724"/><text x="50.6680%" y="783.50"></text></g><g><title>mach_msg2_internal (188 samples, 0.06%)</title><rect x="50.6420%" y="693" width="0.0563%" height="15" fill="rgb(242,34,40)" fg:x="169089" fg:w="188"/><text x="50.8920%" y="703.50"></text></g><g><title>mach_msg2_trap (188 samples, 0.06%)</title><rect x="50.6420%" y="677" width="0.0563%" height="15" fill="rgb(215,42,17)" fg:x="169089" fg:w="188"/><text x="50.8920%" y="687.50"></text></g><g><title>IOConnectCallMethod (203 samples, 0.06%)</title><rect x="50.6378%" y="725" width="0.0608%" height="15" fill="rgb(207,44,46)" fg:x="169075" fg:w="203"/><text x="50.8878%" y="735.50"></text></g><g><title>io_connect_method (200 samples, 0.06%)</title><rect x="50.6387%" y="709" width="0.0599%" height="15" fill="rgb(211,206,28)" fg:x="169078" fg:w="200"/><text x="50.8887%" y="719.50"></text></g><g><title>IOGPUResourceCreate (216 samples, 0.06%)</title><rect x="50.6375%" y="741" width="0.0647%" height="15" fill="rgb(237,167,16)" fg:x="169074" fg:w="216"/><text x="50.8875%" y="751.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (233 samples, 0.07%)</title><rect x="50.6357%" y="757" width="0.0698%" height="15" fill="rgb(233,66,6)" fg:x="169068" fg:w="233"/><text x="50.8857%" y="767.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (239 samples, 0.07%)</title><rect x="50.6348%" y="773" width="0.0716%" height="15" fill="rgb(246,123,29)" fg:x="169065" fg:w="239"/><text x="50.8848%" y="783.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (1,000 samples, 0.30%)</title><rect x="50.4162%" y="789" width="0.2995%" height="15" fill="rgb(209,62,40)" fg:x="168335" fg:w="1000"/><text x="50.6662%" y="799.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (1,004 samples, 0.30%)</title><rect x="50.4153%" y="805" width="0.3007%" height="15" fill="rgb(218,4,25)" fg:x="168332" fg:w="1004"/><text x="50.6653%" y="815.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (1,008 samples, 0.30%)</title><rect x="50.4144%" y="821" width="0.3019%" height="15" fill="rgb(253,91,49)" fg:x="168329" fg:w="1008"/><text x="50.6644%" y="831.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1,040 samples, 0.31%)</title><rect x="50.4141%" y="837" width="0.3115%" height="15" fill="rgb(228,155,29)" fg:x="168328" fg:w="1040"/><text x="50.6641%" y="847.50"></text></g><g><title>metal::resource::ResourceRef::set_label (36 samples, 0.01%)</title><rect x="50.7303%" y="837" width="0.0108%" height="15" fill="rgb(243,57,37)" fg:x="169384" fg:w="36"/><text x="50.9803%" y="847.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (1,105 samples, 0.33%)</title><rect x="50.4123%" y="853" width="0.3309%" height="15" fill="rgb(244,167,17)" fg:x="168322" fg:w="1105"/><text x="50.6623%" y="863.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (1,238 samples, 0.37%)</title><rect x="50.3733%" y="885" width="0.3708%" height="15" fill="rgb(207,181,38)" fg:x="168192" fg:w="1238"/><text x="50.6233%" y="895.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (1,111 samples, 0.33%)</title><rect x="50.4114%" y="869" width="0.3327%" height="15" fill="rgb(211,8,23)" fg:x="168319" fg:w="1111"/><text x="50.6614%" y="879.50"></text></g><g><title>bevy_render::render_resource::buffer_vec::RawBufferVec&lt;T&gt;::write_buffer (2,599 samples, 0.78%)</title><rect x="49.9681%" y="917" width="0.7784%" height="15" fill="rgb(235,11,44)" fg:x="166839" fg:w="2599"/><text x="50.2181%" y="927.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (2,587 samples, 0.77%)</title><rect x="49.9717%" y="901" width="0.7748%" height="15" fill="rgb(248,18,52)" fg:x="166851" fg:w="2587"/><text x="50.2217%" y="911.50"></text></g><g><title>-[_MTLResource init] (34 samples, 0.01%)</title><rect x="50.7750%" y="741" width="0.0102%" height="15" fill="rgb(208,4,7)" fg:x="169533" fg:w="34"/><text x="51.0250%" y="751.50"></text></g><g><title>io_connect_method (925 samples, 0.28%)</title><rect x="50.7905%" y="709" width="0.2770%" height="15" fill="rgb(240,17,39)" fg:x="169585" fg:w="925"/><text x="51.0405%" y="719.50"></text></g><g><title>mach_msg2_internal (896 samples, 0.27%)</title><rect x="50.7992%" y="693" width="0.2684%" height="15" fill="rgb(207,170,3)" fg:x="169614" fg:w="896"/><text x="51.0492%" y="703.50"></text></g><g><title>mach_msg2_trap (892 samples, 0.27%)</title><rect x="50.8004%" y="677" width="0.2672%" height="15" fill="rgb(236,100,52)" fg:x="169618" fg:w="892"/><text x="51.0504%" y="687.50"></text></g><g><title>IOConnectCallMethod (930 samples, 0.28%)</title><rect x="50.7896%" y="725" width="0.2785%" height="15" fill="rgb(246,78,51)" fg:x="169582" fg:w="930"/><text x="51.0396%" y="735.50"></text></g><g><title>_CFRuntimeCreateInstance (50 samples, 0.01%)</title><rect x="51.0685%" y="725" width="0.0150%" height="15" fill="rgb(211,17,15)" fg:x="170513" fg:w="50"/><text x="51.3185%" y="735.50"></text></g><g><title>IOGPUResourceCreate (1,000 samples, 0.30%)</title><rect x="50.7863%" y="741" width="0.2995%" height="15" fill="rgb(209,59,46)" fg:x="169571" fg:w="1000"/><text x="51.0363%" y="751.50"></text></g><g><title>weak_register_no_lock (41 samples, 0.01%)</title><rect x="51.0945%" y="725" width="0.0123%" height="15" fill="rgb(210,92,25)" fg:x="170600" fg:w="41"/><text x="51.3445%" y="735.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1,128 samples, 0.34%)</title><rect x="50.7693%" y="757" width="0.3378%" height="15" fill="rgb(238,174,52)" fg:x="169514" fg:w="1128"/><text x="51.0193%" y="767.50"></text></g><g><title>objc_storeWeak (55 samples, 0.02%)</title><rect x="51.0906%" y="741" width="0.0165%" height="15" fill="rgb(230,73,7)" fg:x="170587" fg:w="55"/><text x="51.3406%" y="751.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (1,139 samples, 0.34%)</title><rect x="50.7678%" y="773" width="0.3411%" height="15" fill="rgb(243,124,40)" fg:x="169509" fg:w="1139"/><text x="51.0178%" y="783.50"></text></g><g><title>MTLRangeAllocatorGetMaxFreeSize (34 samples, 0.01%)</title><rect x="51.1215%" y="741" width="0.0102%" height="15" fill="rgb(244,170,11)" fg:x="170690" fg:w="34"/><text x="51.3715%" y="751.50"></text></g><g><title>IOGPUMetalSuballocatorAllocate (104 samples, 0.03%)</title><rect x="51.1113%" y="757" width="0.0311%" height="15" fill="rgb(207,114,54)" fg:x="170656" fg:w="104"/><text x="51.3613%" y="767.50"></text></g><g><title>-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (121 samples, 0.04%)</title><rect x="51.1089%" y="773" width="0.0362%" height="15" fill="rgb(205,42,20)" fg:x="170648" fg:w="121"/><text x="51.3589%" y="783.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (1,273 samples, 0.38%)</title><rect x="50.7657%" y="789" width="0.3813%" height="15" fill="rgb(230,30,28)" fg:x="169502" fg:w="1273"/><text x="51.0157%" y="799.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (1,277 samples, 0.38%)</title><rect x="50.7651%" y="805" width="0.3825%" height="15" fill="rgb(205,73,54)" fg:x="169500" fg:w="1277"/><text x="51.0151%" y="815.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (1,292 samples, 0.39%)</title><rect x="50.7618%" y="821" width="0.3870%" height="15" fill="rgb(254,227,23)" fg:x="169489" fg:w="1292"/><text x="51.0118%" y="831.50"></text></g><g><title>_objc_rootAllocWithZone (34 samples, 0.01%)</title><rect x="51.1535%" y="805" width="0.0102%" height="15" fill="rgb(228,202,34)" fg:x="170797" fg:w="34"/><text x="51.4035%" y="815.50"></text></g><g><title>-[AGXG15GFamilyDevice newBufferWithLength:options:] (52 samples, 0.02%)</title><rect x="51.1487%" y="821" width="0.0156%" height="15" fill="rgb(222,225,37)" fg:x="170781" fg:w="52"/><text x="51.3987%" y="831.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1,357 samples, 0.41%)</title><rect x="50.7615%" y="837" width="0.4064%" height="15" fill="rgb(221,14,54)" fg:x="169488" fg:w="1357"/><text x="51.0115%" y="847.50"></text></g><g><title>__psynch_cvwait (63 samples, 0.02%)</title><rect x="51.1724%" y="789" width="0.0189%" height="15" fill="rgb(254,102,2)" fg:x="170860" fg:w="63"/><text x="51.4224%" y="799.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (69 samples, 0.02%)</title><rect x="51.1709%" y="821" width="0.0207%" height="15" fill="rgb(232,104,17)" fg:x="170855" fg:w="69"/><text x="51.4209%" y="831.50"></text></g><g><title>_pthread_cond_wait (69 samples, 0.02%)</title><rect x="51.1709%" y="805" width="0.0207%" height="15" fill="rgb(250,220,14)" fg:x="170855" fg:w="69"/><text x="51.4209%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (408 samples, 0.12%)</title><rect x="51.1679%" y="837" width="0.1222%" height="15" fill="rgb(241,158,9)" fg:x="170845" fg:w="408"/><text x="51.4179%" y="847.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (287 samples, 0.09%)</title><rect x="51.2041%" y="821" width="0.0860%" height="15" fill="rgb(246,9,43)" fg:x="170966" fg:w="287"/><text x="51.4541%" y="831.50"></text></g><g><title>cthread_yield (287 samples, 0.09%)</title><rect x="51.2041%" y="805" width="0.0860%" height="15" fill="rgb(206,73,33)" fg:x="170966" fg:w="287"/><text x="51.4541%" y="815.50"></text></g><g><title>swtch_pri (285 samples, 0.09%)</title><rect x="51.2047%" y="789" width="0.0854%" height="15" fill="rgb(222,79,8)" fg:x="170968" fg:w="285"/><text x="51.4547%" y="799.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (47 samples, 0.01%)</title><rect x="51.2901%" y="821" width="0.0141%" height="15" fill="rgb(234,8,54)" fg:x="171253" fg:w="47"/><text x="51.5401%" y="831.50"></text></g><g><title>pthread_cond_signal (46 samples, 0.01%)</title><rect x="51.2904%" y="805" width="0.0138%" height="15" fill="rgb(209,134,38)" fg:x="171254" fg:w="46"/><text x="51.5404%" y="815.50"></text></g><g><title>__psynch_cvsignal (45 samples, 0.01%)</title><rect x="51.2907%" y="789" width="0.0135%" height="15" fill="rgb(230,127,29)" fg:x="171255" fg:w="45"/><text x="51.5407%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (52 samples, 0.02%)</title><rect x="51.2901%" y="837" width="0.0156%" height="15" fill="rgb(242,44,41)" fg:x="171253" fg:w="52"/><text x="51.5401%" y="847.50"></text></g><g><title>&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (61 samples, 0.02%)</title><rect x="51.3108%" y="821" width="0.0183%" height="15" fill="rgb(222,56,43)" fg:x="171322" fg:w="61"/><text x="51.5608%" y="831.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (52 samples, 0.02%)</title><rect x="51.3135%" y="805" width="0.0156%" height="15" fill="rgb(238,39,47)" fg:x="171331" fg:w="52"/><text x="51.5635%" y="815.50"></text></g><g><title>metal::resource::ResourceRef::set_label (78 samples, 0.02%)</title><rect x="51.3060%" y="837" width="0.0234%" height="15" fill="rgb(226,79,43)" fg:x="171306" fg:w="78"/><text x="51.5560%" y="847.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (1,932 samples, 0.58%)</title><rect x="50.7567%" y="853" width="0.5786%" height="15" fill="rgb(242,105,53)" fg:x="169472" fg:w="1932"/><text x="51.0067%" y="863.50"></text></g><g><title>wgpu_core::device::queue::Queue::create_staging_buffer (1,965 samples, 0.59%)</title><rect x="50.7516%" y="885" width="0.5885%" height="15" fill="rgb(251,132,46)" fg:x="169455" fg:w="1965"/><text x="51.0016%" y="895.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (1,964 samples, 0.59%)</title><rect x="50.7519%" y="869" width="0.5882%" height="15" fill="rgb(231,77,14)" fg:x="169456" fg:w="1964"/><text x="51.0019%" y="879.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::create_staging_buffer (1,988 samples, 0.60%)</title><rect x="50.7489%" y="901" width="0.5954%" height="15" fill="rgb(240,135,9)" fg:x="169446" fg:w="1988"/><text x="50.9989%" y="911.50"></text></g><g><title>bevy_render::render_resource::uniform_buffer::DynamicUniformBuffer&lt;T&gt;::get_writer (2,036 samples, 0.61%)</title><rect x="50.7477%" y="917" width="0.6098%" height="15" fill="rgb(248,109,14)" fg:x="169442" fg:w="2036"/><text x="50.9977%" y="927.50"></text></g><g><title>_dispatch_kq_poll (149 samples, 0.04%)</title><rect x="51.4270%" y="709" width="0.0446%" height="15" fill="rgb(227,146,52)" fg:x="171710" fg:w="149"/><text x="51.6770%" y="719.50"></text></g><g><title>kevent_id (147 samples, 0.04%)</title><rect x="51.4276%" y="693" width="0.0440%" height="15" fill="rgb(232,54,3)" fg:x="171712" fg:w="147"/><text x="51.6776%" y="703.50"></text></g><g><title>_dispatch_event_loop_poke (154 samples, 0.05%)</title><rect x="51.4258%" y="725" width="0.0461%" height="15" fill="rgb(229,201,43)" fg:x="171706" fg:w="154"/><text x="51.6758%" y="735.50"></text></g><g><title>+[FPCAMetalLayerState _updateLayerState:block:] (172 samples, 0.05%)</title><rect x="51.4246%" y="741" width="0.0515%" height="15" fill="rgb(252,161,33)" fg:x="171702" fg:w="172"/><text x="51.6746%" y="751.50"></text></g><g><title>+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:] (174 samples, 0.05%)</title><rect x="51.4243%" y="757" width="0.0521%" height="15" fill="rgb(226,146,40)" fg:x="171701" fg:w="174"/><text x="51.6743%" y="767.50"></text></g><g><title>-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (213 samples, 0.06%)</title><rect x="51.4240%" y="773" width="0.0638%" height="15" fill="rgb(219,47,25)" fg:x="171700" fg:w="213"/><text x="51.6740%" y="783.50"></text></g><g><title>CAImageQueueDidComposite (41 samples, 0.01%)</title><rect x="51.4988%" y="741" width="0.0123%" height="15" fill="rgb(250,135,13)" fg:x="171950" fg:w="41"/><text x="51.7488%" y="751.50"></text></g><g><title>release_images(_CAImageQueue*, CAImageQueueReleased*) (60 samples, 0.02%)</title><rect x="51.4985%" y="757" width="0.0180%" height="15" fill="rgb(219,229,18)" fg:x="171949" fg:w="60"/><text x="51.7485%" y="767.50"></text></g><g><title>CAImageQueueCollect_ (95 samples, 0.03%)</title><rect x="51.4884%" y="773" width="0.0285%" height="15" fill="rgb(217,152,27)" fg:x="171915" fg:w="95"/><text x="51.7384%" y="783.50"></text></g><g><title>CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (418 samples, 0.13%)</title><rect x="51.4237%" y="789" width="0.1252%" height="15" fill="rgb(225,71,47)" fg:x="171699" fg:w="418"/><text x="51.6737%" y="799.50"></text></g><g><title>-[CAMetalLayer nextDrawable] (454 samples, 0.14%)</title><rect x="51.4150%" y="805" width="0.1360%" height="15" fill="rgb(220,139,14)" fg:x="171670" fg:w="454"/><text x="51.6650%" y="815.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (460 samples, 0.14%)</title><rect x="51.4147%" y="821" width="0.1378%" height="15" fill="rgb(247,54,32)" fg:x="171669" fg:w="460"/><text x="51.6647%" y="831.50"></text></g><g><title>&lt;S as wgpu_hal::dynamic::surface::DynSurface&gt;::acquire_texture (476 samples, 0.14%)</title><rect x="51.4120%" y="837" width="0.1426%" height="15" fill="rgb(252,131,39)" fg:x="171660" fg:w="476"/><text x="51.6620%" y="847.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::get_current_texture (549 samples, 0.16%)</title><rect x="51.4036%" y="853" width="0.1644%" height="15" fill="rgb(210,108,39)" fg:x="171632" fg:w="549"/><text x="51.6536%" y="863.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreSurface as wgpu::dispatch::SurfaceInterface&gt;::get_current_texture (579 samples, 0.17%)</title><rect x="51.3955%" y="885" width="0.1734%" height="15" fill="rgb(205,23,29)" fg:x="171605" fg:w="579"/><text x="51.6455%" y="895.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_get_current_texture (567 samples, 0.17%)</title><rect x="51.3991%" y="869" width="0.1698%" height="15" fill="rgb(246,139,46)" fg:x="171617" fg:w="567"/><text x="51.6491%" y="879.50"></text></g><g><title>bevy_render::view::window::prepare_windows (598 samples, 0.18%)</title><rect x="51.3928%" y="917" width="0.1791%" height="15" fill="rgb(250,81,26)" fg:x="171596" fg:w="598"/><text x="51.6428%" y="927.50"></text></g><g><title>wgpu::api::surface::Surface::get_current_texture (593 samples, 0.18%)</title><rect x="51.3943%" y="901" width="0.1776%" height="15" fill="rgb(214,104,7)" fg:x="171601" fg:w="593"/><text x="51.6443%" y="911.50"></text></g><g><title>bevy_sprite::mesh2d::mesh::extract_mesh2d (59 samples, 0.02%)</title><rect x="51.5761%" y="917" width="0.0177%" height="15" fill="rgb(233,189,8)" fg:x="172208" fg:w="59"/><text x="51.8261%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.02%)</title><rect x="51.6303%" y="885" width="0.0183%" height="15" fill="rgb(228,141,17)" fg:x="172389" fg:w="61"/><text x="51.8803%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::run&lt;!,bevy_tasks::task_pool::TaskPool::execute_global_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,bevy_ecs::change_detection::Ref&lt;bevy_transform::components::transform::Transform&gt;,&amp;mut bevy_transform::components::global_transform::GlobalTransform,&amp;bevy_ecs::hierarchy::Children),(bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::TransformTreeChanged&gt;)&gt;::par_fold_init_unchecked_manual&lt;core::cell::RefMut&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt;,bevy_ecs::query::par_iter::QueryParIter&lt;(bevy_ecs::entity::Entity,bevy_ecs::change_detection::Ref&lt;bevy_transform::components::transform::Transform&gt;,&amp;mut bevy_transform::components::global_transform::GlobalTransform,&amp;bevy_ecs::hierarchy::Children),(bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::TransformTreeChanged&gt;)&gt;::for_each_init&lt;bevy_transform::systems::parallel::propagate_parent_transforms::{{closure}},bevy_transform::systems::parallel::propagate_parent_transforms::{{closure}},core::cell::RefMut&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt;&gt;::{{closure}},bevy_transform::systems::parallel::propagate_parent_transforms::{{closure}}&gt;::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (106 samples, 0.03%)</title><rect x="51.6300%" y="901" width="0.0317%" height="15" fill="rgb(247,157,1)" fg:x="172388" fg:w="106"/><text x="51.8800%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}} (140 samples, 0.04%)</title><rect x="51.6207%" y="917" width="0.0419%" height="15" fill="rgb(249,225,5)" fg:x="172357" fg:w="140"/><text x="51.8707%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (90 samples, 0.03%)</title><rect x="51.6687%" y="917" width="0.0270%" height="15" fill="rgb(242,55,13)" fg:x="172517" fg:w="90"/><text x="51.9187%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.01%)</title><rect x="51.7178%" y="901" width="0.0114%" height="15" fill="rgb(230,49,50)" fg:x="172681" fg:w="38"/><text x="51.9678%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (56 samples, 0.02%)</title><rect x="51.7292%" y="901" width="0.0168%" height="15" fill="rgb(241,111,38)" fg:x="172719" fg:w="56"/><text x="51.9792%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (37 samples, 0.01%)</title><rect x="51.7537%" y="901" width="0.0111%" height="15" fill="rgb(252,155,4)" fg:x="172801" fg:w="37"/><text x="52.0037%" y="911.50"></text></g><g><title>bevy_asset::handle::Handle&lt;A&gt;::id (38 samples, 0.01%)</title><rect x="51.7849%" y="901" width="0.0114%" height="15" fill="rgb(212,69,32)" fg:x="172905" fg:w="38"/><text x="52.0349%" y="911.50"></text></g><g><title>bevy_text::pipeline::TextPipeline::queue_text::_{{closure}}::_{{closure}} (102 samples, 0.03%)</title><rect x="51.8010%" y="901" width="0.0305%" height="15" fill="rgb(243,107,47)" fg:x="172959" fg:w="102"/><text x="52.0510%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (48 samples, 0.01%)</title><rect x="51.8523%" y="901" width="0.0144%" height="15" fill="rgb(247,130,12)" fg:x="173130" fg:w="48"/><text x="52.1023%" y="911.50"></text></g><g><title>bevy_text::pipeline::TextPipeline::queue_text::_{{closure}}::_{{closure}} (612 samples, 0.18%)</title><rect x="51.7154%" y="917" width="0.1833%" height="15" fill="rgb(233,74,16)" fg:x="172673" fg:w="612"/><text x="51.9654%" y="927.50"></text></g><g><title>bevy_text::pipeline::TextPipeline::update_buffer (44 samples, 0.01%)</title><rect x="51.9151%" y="901" width="0.0132%" height="15" fill="rgb(208,58,18)" fg:x="173340" fg:w="44"/><text x="52.1651%" y="911.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (47 samples, 0.01%)</title><rect x="51.9340%" y="869" width="0.0141%" height="15" fill="rgb(242,225,1)" fg:x="173403" fg:w="47"/><text x="52.1840%" y="879.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_metrics_and_size (58 samples, 0.02%)</title><rect x="51.9331%" y="901" width="0.0174%" height="15" fill="rgb(249,39,40)" fg:x="173400" fg:w="58"/><text x="52.1831%" y="911.50"></text></g><g><title>cosmic_text::buffer::Buffer::relayout (57 samples, 0.02%)</title><rect x="51.9334%" y="885" width="0.0171%" height="15" fill="rgb(207,72,44)" fg:x="173401" fg:w="57"/><text x="52.1834%" y="895.50"></text></g><g><title>bevy_text::pipeline::TextPipeline::update_buffer (201 samples, 0.06%)</title><rect x="51.8987%" y="917" width="0.0602%" height="15" fill="rgb(215,193,12)" fg:x="173285" fg:w="201"/><text x="52.1487%" y="927.50"></text></g><g><title>bevy_transform::systems::mark_dirty_trees (34 samples, 0.01%)</title><rect x="51.9813%" y="917" width="0.0102%" height="15" fill="rgb(248,41,39)" fg:x="173561" fg:w="34"/><text x="52.2313%" y="927.50"></text></g><g><title>bevy_transform::systems::parallel::propagation_worker (40 samples, 0.01%)</title><rect x="52.0050%" y="901" width="0.0120%" height="15" fill="rgb(253,85,4)" fg:x="173640" fg:w="40"/><text x="52.2550%" y="911.50"></text></g><g><title>bevy_transform::systems::parallel::propagate_parent_transforms::_{{closure}} (97 samples, 0.03%)</title><rect x="51.9921%" y="917" width="0.0291%" height="15" fill="rgb(243,70,31)" fg:x="173597" fg:w="97"/><text x="52.2421%" y="927.50"></text></g><g><title>bevy_ui::layout::convert::from_node (45 samples, 0.01%)</title><rect x="52.0317%" y="885" width="0.0135%" height="15" fill="rgb(253,195,26)" fg:x="173729" fg:w="45"/><text x="52.2817%" y="895.50"></text></g><g><title>bevy_ui::layout::ui_surface::UiSurface::upsert_node (54 samples, 0.02%)</title><rect x="52.0451%" y="885" width="0.0162%" height="15" fill="rgb(243,42,11)" fg:x="173774" fg:w="54"/><text x="52.2951%" y="895.50"></text></g><g><title>taffy::tree::cache::Cache::clear (171 samples, 0.05%)</title><rect x="52.0781%" y="869" width="0.0512%" height="15" fill="rgb(239,66,17)" fg:x="173884" fg:w="171"/><text x="52.3281%" y="879.50"></text></g><g><title>taffy::tree::taffy_tree::TaffyTree&lt;NodeContext&gt;::mark_dirty (236 samples, 0.07%)</title><rect x="52.0643%" y="885" width="0.0707%" height="15" fill="rgb(217,132,21)" fg:x="173838" fg:w="236"/><text x="52.3143%" y="895.50"></text></g><g><title>bevy_ui::layout::ui_surface::UiSurface::upsert_node (378 samples, 0.11%)</title><rect x="52.0296%" y="901" width="0.1132%" height="15" fill="rgb(252,202,21)" fg:x="173722" fg:w="378"/><text x="52.2796%" y="911.50"></text></g><g><title>taffy::tree::cache::Cache::clear (57 samples, 0.02%)</title><rect x="52.1506%" y="885" width="0.0171%" height="15" fill="rgb(233,98,36)" fg:x="174126" fg:w="57"/><text x="52.4006%" y="895.50"></text></g><g><title>taffy::tree::taffy_tree::TaffyTree&lt;NodeContext&gt;::mark_dirty (79 samples, 0.02%)</title><rect x="52.1449%" y="901" width="0.0237%" height="15" fill="rgb(216,153,54)" fg:x="174107" fg:w="79"/><text x="52.3949%" y="911.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::_{{closure}} (492 samples, 0.15%)</title><rect x="52.0296%" y="917" width="0.1474%" height="15" fill="rgb(250,99,7)" fg:x="173722" fg:w="492"/><text x="52.2796%" y="927.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (48 samples, 0.01%)</title><rect x="52.2188%" y="853" width="0.0144%" height="15" fill="rgb(207,56,50)" fg:x="174354" fg:w="48"/><text x="52.4688%" y="863.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (45 samples, 0.01%)</title><rect x="52.2518%" y="837" width="0.0135%" height="15" fill="rgb(244,61,34)" fg:x="174464" fg:w="45"/><text x="52.5018%" y="847.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (185 samples, 0.06%)</title><rect x="52.2335%" y="853" width="0.0554%" height="15" fill="rgb(241,50,38)" fg:x="174403" fg:w="185"/><text x="52.4835%" y="863.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (406 samples, 0.12%)</title><rect x="52.1931%" y="869" width="0.1216%" height="15" fill="rgb(212,166,30)" fg:x="174268" fg:w="406"/><text x="52.4431%" y="879.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (486 samples, 0.15%)</title><rect x="52.1781%" y="885" width="0.1456%" height="15" fill="rgb(249,127,32)" fg:x="174218" fg:w="486"/><text x="52.4281%" y="895.50"></text></g><g><title>bevy_ui::layout::ui_layout_system::update_uinode_geometry_recursive (494 samples, 0.15%)</title><rect x="52.1778%" y="901" width="0.1480%" height="15" fill="rgb(209,103,0)" fg:x="174217" fg:w="494"/><text x="52.4278%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (36 samples, 0.01%)</title><rect x="52.3306%" y="885" width="0.0108%" height="15" fill="rgb(238,209,51)" fg:x="174727" fg:w="36"/><text x="52.5806%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37 samples, 0.01%)</title><rect x="52.3500%" y="885" width="0.0111%" height="15" fill="rgb(237,56,23)" fg:x="174792" fg:w="37"/><text x="52.6000%" y="895.50"></text></g><g><title>_malloc_zone_realloc (58 samples, 0.02%)</title><rect x="52.3905%" y="773" width="0.0174%" height="15" fill="rgb(215,153,46)" fg:x="174927" fg:w="58"/><text x="52.6405%" y="783.50"></text></g><g><title>szone_realloc (57 samples, 0.02%)</title><rect x="52.3908%" y="757" width="0.0171%" height="15" fill="rgb(224,49,31)" fg:x="174928" fg:w="57"/><text x="52.6408%" y="767.50"></text></g><g><title>_realloc (61 samples, 0.02%)</title><rect x="52.3905%" y="789" width="0.0183%" height="15" fill="rgb(250,18,42)" fg:x="174927" fg:w="61"/><text x="52.6405%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (67 samples, 0.02%)</title><rect x="52.3890%" y="821" width="0.0201%" height="15" fill="rgb(215,176,39)" fg:x="174922" fg:w="67"/><text x="52.6390%" y="831.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (62 samples, 0.02%)</title><rect x="52.3905%" y="805" width="0.0186%" height="15" fill="rgb(223,77,29)" fg:x="174927" fg:w="62"/><text x="52.6405%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (71 samples, 0.02%)</title><rect x="52.3881%" y="837" width="0.0213%" height="15" fill="rgb(234,94,52)" fg:x="174919" fg:w="71"/><text x="52.6381%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (72 samples, 0.02%)</title><rect x="52.4093%" y="837" width="0.0216%" height="15" fill="rgb(220,154,50)" fg:x="174990" fg:w="72"/><text x="52.6593%" y="847.50"></text></g><g><title>taffy::compute::compute_cached_layout (55 samples, 0.02%)</title><rect x="52.4533%" y="821" width="0.0165%" height="15" fill="rgb(212,11,10)" fg:x="175137" fg:w="55"/><text x="52.7033%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (66 samples, 0.02%)</title><rect x="52.4938%" y="789" width="0.0198%" height="15" fill="rgb(205,166,19)" fg:x="175272" fg:w="66"/><text x="52.7438%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (169 samples, 0.05%)</title><rect x="52.4701%" y="805" width="0.0506%" height="15" fill="rgb(244,198,16)" fg:x="175193" fg:w="169"/><text x="52.7201%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (187 samples, 0.06%)</title><rect x="52.5333%" y="805" width="0.0560%" height="15" fill="rgb(219,69,12)" fg:x="175404" fg:w="187"/><text x="52.7833%" y="815.50"></text></g><g><title>szone_malloc_should_clear (191 samples, 0.06%)</title><rect x="52.6193%" y="789" width="0.0572%" height="15" fill="rgb(245,30,7)" fg:x="175691" fg:w="191"/><text x="52.8693%" y="799.50"></text></g><g><title>tiny_malloc_should_clear (167 samples, 0.05%)</title><rect x="52.6265%" y="773" width="0.0500%" height="15" fill="rgb(218,221,48)" fg:x="175715" fg:w="167"/><text x="52.8765%" y="783.50"></text></g><g><title>tiny_malloc_from_free_list (117 samples, 0.04%)</title><rect x="52.6414%" y="757" width="0.0350%" height="15" fill="rgb(216,66,15)" fg:x="175765" fg:w="117"/><text x="52.8914%" y="767.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (384 samples, 0.12%)</title><rect x="52.5911%" y="805" width="0.1150%" height="15" fill="rgb(226,122,50)" fg:x="175597" fg:w="384"/><text x="52.8411%" y="815.50"></text></g><g><title>_platform_memset (52 samples, 0.02%)</title><rect x="52.7531%" y="773" width="0.0156%" height="15" fill="rgb(239,156,16)" fg:x="176138" fg:w="52"/><text x="53.0031%" y="783.50"></text></g><g><title>free_tiny (284 samples, 0.09%)</title><rect x="52.7229%" y="789" width="0.0851%" height="15" fill="rgb(224,27,38)" fg:x="176037" fg:w="284"/><text x="52.9729%" y="799.50"></text></g><g><title>tiny_free_no_lock (131 samples, 0.04%)</title><rect x="52.7687%" y="773" width="0.0392%" height="15" fill="rgb(224,39,27)" fg:x="176190" fg:w="131"/><text x="53.0187%" y="783.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (368 samples, 0.11%)</title><rect x="52.7061%" y="805" width="0.1102%" height="15" fill="rgb(215,92,29)" fg:x="175981" fg:w="368"/><text x="52.9561%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (66 samples, 0.02%)</title><rect x="52.8580%" y="789" width="0.0198%" height="15" fill="rgb(207,159,16)" fg:x="176488" fg:w="66"/><text x="53.1080%" y="799.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout::_{{closure}} (42 samples, 0.01%)</title><rect x="52.9161%" y="773" width="0.0126%" height="15" fill="rgb(238,163,47)" fg:x="176682" fg:w="42"/><text x="53.1661%" y="783.50"></text></g><g><title>taffy::compute::compute_cached_layout (171 samples, 0.05%)</title><rect x="52.8903%" y="789" width="0.0512%" height="15" fill="rgb(219,91,49)" fg:x="176596" fg:w="171"/><text x="53.1403%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.02%)</title><rect x="53.0493%" y="757" width="0.0189%" height="15" fill="rgb(227,167,31)" fg:x="177127" fg:w="63"/><text x="53.2993%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (189 samples, 0.06%)</title><rect x="53.1131%" y="757" width="0.0566%" height="15" fill="rgb(234,80,54)" fg:x="177340" fg:w="189"/><text x="53.3631%" y="767.50"></text></g><g><title>taffy::compute::flexbox::generate_anonymous_flex_items::_{{closure}} (79 samples, 0.02%)</title><rect x="53.1709%" y="757" width="0.0237%" height="15" fill="rgb(212,114,2)" fg:x="177533" fg:w="79"/><text x="53.4209%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (515 samples, 0.15%)</title><rect x="53.0428%" y="773" width="0.1542%" height="15" fill="rgb(234,50,24)" fg:x="177105" fg:w="515"/><text x="53.2928%" y="783.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (58 samples, 0.02%)</title><rect x="53.2419%" y="757" width="0.0174%" height="15" fill="rgb(221,68,8)" fg:x="177770" fg:w="58"/><text x="53.4919%" y="767.50"></text></g><g><title>taffy::style::flex::FlexDirection::is_row (41 samples, 0.01%)</title><rect x="53.2611%" y="757" width="0.0123%" height="15" fill="rgb(254,180,31)" fg:x="177834" fg:w="41"/><text x="53.5111%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (223 samples, 0.07%)</title><rect x="53.2087%" y="773" width="0.0668%" height="15" fill="rgb(247,130,50)" fg:x="177659" fg:w="223"/><text x="53.4587%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 0.01%)</title><rect x="53.2782%" y="757" width="0.0129%" height="15" fill="rgb(211,109,4)" fg:x="177891" fg:w="43"/><text x="53.5282%" y="767.50"></text></g><g><title>_malloc_zone_malloc (91 samples, 0.03%)</title><rect x="53.3138%" y="757" width="0.0273%" height="15" fill="rgb(238,50,21)" fg:x="178010" fg:w="91"/><text x="53.5638%" y="767.50"></text></g><g><title>rack_get_thread_index (47 samples, 0.01%)</title><rect x="53.4204%" y="725" width="0.0141%" height="15" fill="rgb(225,57,45)" fg:x="178366" fg:w="47"/><text x="53.6704%" y="735.50"></text></g><g><title>_tiny_check_and_zero_inline_meta_from_freelist (37 samples, 0.01%)</title><rect x="53.5058%" y="709" width="0.0111%" height="15" fill="rgb(209,196,50)" fg:x="178651" fg:w="37"/><text x="53.7558%" y="719.50"></text></g><g><title>szone_malloc_should_clear (563 samples, 0.17%)</title><rect x="53.3554%" y="757" width="0.1686%" height="15" fill="rgb(242,140,13)" fg:x="178149" fg:w="563"/><text x="53.6054%" y="767.50"></text></g><g><title>tiny_malloc_should_clear (494 samples, 0.15%)</title><rect x="53.3761%" y="741" width="0.1480%" height="15" fill="rgb(217,111,7)" fg:x="178218" fg:w="494"/><text x="53.6261%" y="751.50"></text></g><g><title>tiny_malloc_from_free_list (299 samples, 0.09%)</title><rect x="53.4345%" y="725" width="0.0896%" height="15" fill="rgb(253,193,51)" fg:x="178413" fg:w="299"/><text x="53.6845%" y="735.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (39 samples, 0.01%)</title><rect x="53.5259%" y="757" width="0.0117%" height="15" fill="rgb(252,70,29)" fg:x="178718" fg:w="39"/><text x="53.7759%" y="767.50"></text></g><g><title>taffy::compute::flexbox::determine_container_main_size::_{{closure}} (100 samples, 0.03%)</title><rect x="53.5390%" y="757" width="0.0299%" height="15" fill="rgb(232,127,12)" fg:x="178762" fg:w="100"/><text x="53.7890%" y="767.50"></text></g><g><title>taffy::compute::flexbox::resolve_flexible_lengths (39 samples, 0.01%)</title><rect x="53.5869%" y="757" width="0.0117%" height="15" fill="rgb(211,180,21)" fg:x="178922" fg:w="39"/><text x="53.8369%" y="767.50"></text></g><g><title>taffy::style::flex::FlexDirection::is_row (67 samples, 0.02%)</title><rect x="53.6226%" y="757" width="0.0201%" height="15" fill="rgb(229,72,13)" fg:x="179041" fg:w="67"/><text x="53.8726%" y="767.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,223 samples, 0.37%)</title><rect x="53.2782%" y="773" width="0.3663%" height="15" fill="rgb(240,211,49)" fg:x="177891" fg:w="1223"/><text x="53.5282%" y="783.50"></text></g><g><title>_free (96 samples, 0.03%)</title><rect x="53.6513%" y="757" width="0.0288%" height="15" fill="rgb(219,149,40)" fg:x="179137" fg:w="96"/><text x="53.9013%" y="767.50"></text></g><g><title>_szone_free (44 samples, 0.01%)</title><rect x="53.6825%" y="757" width="0.0132%" height="15" fill="rgb(210,127,46)" fg:x="179241" fg:w="44"/><text x="53.9325%" y="767.50"></text></g><g><title>_platform_memset (157 samples, 0.05%)</title><rect x="53.7819%" y="741" width="0.0470%" height="15" fill="rgb(220,106,7)" fg:x="179573" fg:w="157"/><text x="54.0319%" y="751.50"></text></g><g><title>get_tiny_previous_free_msize (35 samples, 0.01%)</title><rect x="53.8864%" y="725" width="0.0105%" height="15" fill="rgb(249,31,22)" fg:x="179922" fg:w="35"/><text x="54.1364%" y="735.50"></text></g><g><title>tiny_free_list_add_ptr (50 samples, 0.01%)</title><rect x="53.8969%" y="725" width="0.0150%" height="15" fill="rgb(253,1,49)" fg:x="179957" fg:w="50"/><text x="54.1469%" y="735.50"></text></g><g><title>free_tiny (743 samples, 0.22%)</title><rect x="53.6960%" y="757" width="0.2225%" height="15" fill="rgb(227,144,33)" fg:x="179286" fg:w="743"/><text x="53.9460%" y="767.50"></text></g><g><title>tiny_free_no_lock (299 samples, 0.09%)</title><rect x="53.8289%" y="741" width="0.0896%" height="15" fill="rgb(249,163,44)" fg:x="179730" fg:w="299"/><text x="54.0789%" y="751.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (958 samples, 0.29%)</title><rect x="53.6445%" y="773" width="0.2869%" height="15" fill="rgb(234,15,39)" fg:x="179114" fg:w="958"/><text x="53.8945%" y="783.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::CacheTree&gt;::cache_get (47 samples, 0.01%)</title><rect x="53.9664%" y="757" width="0.0141%" height="15" fill="rgb(207,66,16)" fg:x="180189" fg:w="47"/><text x="54.2164%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (98 samples, 0.03%)</title><rect x="53.9946%" y="757" width="0.0294%" height="15" fill="rgb(233,112,24)" fg:x="180283" fg:w="98"/><text x="54.2446%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (123 samples, 0.04%)</title><rect x="54.0272%" y="757" width="0.0368%" height="15" fill="rgb(230,90,22)" fg:x="180392" fg:w="123"/><text x="54.2772%" y="767.50"></text></g><g><title>taffy::compute::compute_cached_layout (56 samples, 0.02%)</title><rect x="54.0676%" y="757" width="0.0168%" height="15" fill="rgb(229,61,13)" fg:x="180527" fg:w="56"/><text x="54.3176%" y="767.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (48 samples, 0.01%)</title><rect x="54.1123%" y="757" width="0.0144%" height="15" fill="rgb(225,57,24)" fg:x="180676" fg:w="48"/><text x="54.3623%" y="767.50"></text></g><g><title>taffy::compute::flexbox::determine_used_cross_size (34 samples, 0.01%)</title><rect x="54.1359%" y="757" width="0.0102%" height="15" fill="rgb(208,169,48)" fg:x="180755" fg:w="34"/><text x="54.3859%" y="767.50"></text></g><g><title>taffy::style::flex::FlexDirection::is_row (73 samples, 0.02%)</title><rect x="54.1743%" y="757" width="0.0219%" height="15" fill="rgb(244,218,51)" fg:x="180883" fg:w="73"/><text x="54.4243%" y="767.50"></text></g><g><title>taffy::tree::cache::Cache::get (313 samples, 0.09%)</title><rect x="54.1994%" y="757" width="0.0937%" height="15" fill="rgb(214,148,10)" fg:x="180967" fg:w="313"/><text x="54.4494%" y="767.50"></text></g><g><title>taffy::compute::compute_cached_layout (1,203 samples, 0.36%)</title><rect x="53.9344%" y="773" width="0.3603%" height="15" fill="rgb(225,174,27)" fg:x="180082" fg:w="1203"/><text x="54.1844%" y="783.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyTree&lt;NodeContext&gt; as taffy::tree::traits::TraversePartialTree&gt;::child_ids (34 samples, 0.01%)</title><rect x="54.3180%" y="757" width="0.0102%" height="15" fill="rgb(230,96,26)" fg:x="181363" fg:w="34"/><text x="54.5680%" y="767.50"></text></g><g><title>taffy::compute::flexbox::compute_constants (102 samples, 0.03%)</title><rect x="54.3366%" y="757" width="0.0305%" height="15" fill="rgb(232,10,30)" fg:x="181425" fg:w="102"/><text x="54.5866%" y="767.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (245 samples, 0.07%)</title><rect x="54.2947%" y="773" width="0.0734%" height="15" fill="rgb(222,8,50)" fg:x="181285" fg:w="245"/><text x="54.5447%" y="783.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (4,762 samples, 1.43%)</title><rect x="52.9517%" y="789" width="1.4262%" height="15" fill="rgb(213,81,27)" fg:x="176801" fg:w="4762"/><text x="53.2017%" y="799.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (49 samples, 0.01%)</title><rect x="54.3824%" y="789" width="0.0147%" height="15" fill="rgb(245,50,10)" fg:x="181578" fg:w="49"/><text x="54.6324%" y="799.50"></text></g><g><title>taffy::style::flex::FlexDirection::is_row (56 samples, 0.02%)</title><rect x="54.4435%" y="789" width="0.0168%" height="15" fill="rgb(216,100,18)" fg:x="181782" fg:w="56"/><text x="54.6935%" y="799.50"></text></g><g><title>taffy::tree::cache::Cache::get (186 samples, 0.06%)</title><rect x="54.4654%" y="789" width="0.0557%" height="15" fill="rgb(236,147,54)" fg:x="181855" fg:w="186"/><text x="54.7154%" y="799.50"></text></g><g><title>taffy::compute::compute_cached_layout (5,711 samples, 1.71%)</title><rect x="52.8178%" y="805" width="1.7104%" height="15" fill="rgb(205,143,26)" fg:x="176354" fg:w="5711"/><text x="53.0678%" y="815.50"></text></g><g><title>taffy::compute::flexbox::compute_constants (37 samples, 0.01%)</title><rect x="54.5370%" y="789" width="0.0111%" height="15" fill="rgb(236,26,9)" fg:x="182094" fg:w="37"/><text x="54.7870%" y="799.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (67 samples, 0.02%)</title><rect x="54.5283%" y="805" width="0.0201%" height="15" fill="rgb(221,165,53)" fg:x="182065" fg:w="67"/><text x="54.7783%" y="815.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (6,948 samples, 2.08%)</title><rect x="52.4701%" y="821" width="2.0809%" height="15" fill="rgb(214,110,17)" fg:x="175193" fg:w="6948"/><text x="52.7201%" y="831.50">t..</text></g><g><title>taffy::compute::compute_cached_layout (7,111 samples, 2.13%)</title><rect x="52.4411%" y="837" width="2.1297%" height="15" fill="rgb(237,197,12)" fg:x="175096" fg:w="7111"/><text x="52.6911%" y="847.50">t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 0.01%)</title><rect x="54.5882%" y="789" width="0.0141%" height="15" fill="rgb(205,84,17)" fg:x="182265" fg:w="47"/><text x="54.8382%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (64 samples, 0.02%)</title><rect x="54.6034%" y="789" width="0.0192%" height="15" fill="rgb(237,18,45)" fg:x="182316" fg:w="64"/><text x="54.8534%" y="799.50"></text></g><g><title>szone_malloc_should_clear (59 samples, 0.02%)</title><rect x="54.6328%" y="773" width="0.0177%" height="15" fill="rgb(221,87,14)" fg:x="182414" fg:w="59"/><text x="54.8828%" y="783.50"></text></g><g><title>tiny_malloc_should_clear (55 samples, 0.02%)</title><rect x="54.6340%" y="757" width="0.0165%" height="15" fill="rgb(238,186,15)" fg:x="182418" fg:w="55"/><text x="54.8840%" y="767.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (135 samples, 0.04%)</title><rect x="54.6232%" y="789" width="0.0404%" height="15" fill="rgb(208,115,11)" fg:x="182382" fg:w="135"/><text x="54.8732%" y="799.50"></text></g><g><title>free_tiny (106 samples, 0.03%)</title><rect x="54.6726%" y="773" width="0.0317%" height="15" fill="rgb(254,175,0)" fg:x="182547" fg:w="106"/><text x="54.9226%" y="783.50"></text></g><g><title>tiny_free_no_lock (44 samples, 0.01%)</title><rect x="54.6912%" y="757" width="0.0132%" height="15" fill="rgb(227,24,42)" fg:x="182609" fg:w="44"/><text x="54.9412%" y="767.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (146 samples, 0.04%)</title><rect x="54.6636%" y="789" width="0.0437%" height="15" fill="rgb(223,211,37)" fg:x="182517" fg:w="146"/><text x="54.9136%" y="799.50"></text></g><g><title>taffy::compute::compute_cached_layout (203 samples, 0.06%)</title><rect x="54.7074%" y="789" width="0.0608%" height="15" fill="rgb(235,49,27)" fg:x="182663" fg:w="203"/><text x="54.9574%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (42 samples, 0.01%)</title><rect x="54.8050%" y="741" width="0.0126%" height="15" fill="rgb(254,97,51)" fg:x="182989" fg:w="42"/><text x="55.0550%" y="751.50"></text></g><g><title>szone_malloc_should_clear (89 samples, 0.03%)</title><rect x="54.8341%" y="725" width="0.0267%" height="15" fill="rgb(249,51,40)" fg:x="183086" fg:w="89"/><text x="55.0841%" y="735.50"></text></g><g><title>tiny_malloc_should_clear (80 samples, 0.02%)</title><rect x="54.8368%" y="709" width="0.0240%" height="15" fill="rgb(210,128,45)" fg:x="183095" fg:w="80"/><text x="55.0868%" y="719.50"></text></g><g><title>tiny_malloc_from_free_list (47 samples, 0.01%)</title><rect x="54.8466%" y="693" width="0.0141%" height="15" fill="rgb(224,137,50)" fg:x="183128" fg:w="47"/><text x="55.0966%" y="703.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (129 samples, 0.04%)</title><rect x="54.8266%" y="741" width="0.0386%" height="15" fill="rgb(242,15,9)" fg:x="183061" fg:w="129"/><text x="55.0766%" y="751.50"></text></g><g><title>free_tiny (88 samples, 0.03%)</title><rect x="54.8718%" y="725" width="0.0264%" height="15" fill="rgb(233,187,41)" fg:x="183212" fg:w="88"/><text x="55.1218%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (120 samples, 0.04%)</title><rect x="54.8652%" y="741" width="0.0359%" height="15" fill="rgb(227,2,29)" fg:x="183190" fg:w="120"/><text x="55.1152%" y="751.50"></text></g><g><title>taffy::compute::compute_cached_layout (86 samples, 0.03%)</title><rect x="54.9017%" y="741" width="0.0258%" height="15" fill="rgb(222,70,3)" fg:x="183312" fg:w="86"/><text x="55.1517%" y="751.50"></text></g><g><title>taffy::compute::compute_cached_layout (55 samples, 0.02%)</title><rect x="54.9293%" y="725" width="0.0165%" height="15" fill="rgb(213,11,42)" fg:x="183404" fg:w="55"/><text x="55.1793%" y="735.50"></text></g><g><title>taffy::compute::flexbox::calculate_layout_line (64 samples, 0.02%)</title><rect x="54.9287%" y="741" width="0.0192%" height="15" fill="rgb(225,150,9)" fg:x="183402" fg:w="64"/><text x="55.1787%" y="751.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (562 samples, 0.17%)</title><rect x="54.7867%" y="757" width="0.1683%" height="15" fill="rgb(230,162,45)" fg:x="182928" fg:w="562"/><text x="55.0367%" y="767.50"></text></g><g><title>taffy::compute::compute_cached_layout (629 samples, 0.19%)</title><rect x="54.7712%" y="773" width="0.1884%" height="15" fill="rgb(222,14,52)" fg:x="182876" fg:w="629"/><text x="55.0212%" y="783.50"></text></g><g><title>taffy::compute::flexbox::calculate_layout_line (642 samples, 0.19%)</title><rect x="54.7700%" y="789" width="0.1923%" height="15" fill="rgb(254,198,14)" fg:x="182872" fg:w="642"/><text x="55.0200%" y="799.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (1,305 samples, 0.39%)</title><rect x="54.5822%" y="805" width="0.3908%" height="15" fill="rgb(220,217,30)" fg:x="182245" fg:w="1305"/><text x="54.8322%" y="815.50"></text></g><g><title>taffy::compute::compute_cached_layout (1,348 samples, 0.40%)</title><rect x="54.5720%" y="821" width="0.4037%" height="15" fill="rgb(215,146,41)" fg:x="182211" fg:w="1348"/><text x="54.8220%" y="831.50"></text></g><g><title>taffy::compute::flexbox::calculate_layout_line (1,354 samples, 0.41%)</title><rect x="54.5720%" y="837" width="0.4055%" height="15" fill="rgb(217,27,36)" fg:x="182211" fg:w="1354"/><text x="54.8220%" y="847.50"></text></g><g><title>taffy::compute::compute_cached_layout (8,711 samples, 2.61%)</title><rect x="52.3692%" y="869" width="2.6089%" height="15" fill="rgb(219,218,39)" fg:x="174856" fg:w="8711"/><text x="52.6192%" y="879.50">ta..</text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (8,698 samples, 2.61%)</title><rect x="52.3731%" y="853" width="2.6050%" height="15" fill="rgb(219,4,42)" fg:x="174869" fg:w="8698"/><text x="52.6231%" y="863.50">ta..</text></g><g><title>taffy::compute::grid::compute_grid_layout::_{{closure}} (8,717 samples, 2.61%)</title><rect x="52.3689%" y="885" width="2.6107%" height="15" fill="rgb(249,119,36)" fg:x="174855" fg:w="8717"/><text x="52.6189%" y="895.50">ta..</text></g><g><title>taffy::compute::grid::compute_grid_layout (77 samples, 0.02%)</title><rect x="54.9796%" y="885" width="0.0231%" height="15" fill="rgb(209,23,33)" fg:x="183572" fg:w="77"/><text x="55.2296%" y="895.50"></text></g><g><title>taffy::compute::compute_cached_layout (8,941 samples, 2.68%)</title><rect x="52.3276%" y="901" width="2.6778%" height="15" fill="rgb(211,10,0)" fg:x="174717" fg:w="8941"/><text x="52.5776%" y="911.50">ta..</text></g><g><title>bevy_ui::layout::ui_layout_system (9,552 samples, 2.86%)</title><rect x="52.1769%" y="917" width="2.8608%" height="15" fill="rgb(208,99,37)" fg:x="174214" fg:w="9552"/><text x="52.4269%" y="927.50">be..</text></g><g><title>taffy::compute::round_layout (106 samples, 0.03%)</title><rect x="55.0060%" y="901" width="0.0317%" height="15" fill="rgb(213,132,31)" fg:x="183660" fg:w="106"/><text x="55.2560%" y="911.50"></text></g><g><title>taffy::compute::round_layout::round_layout_inner (104 samples, 0.03%)</title><rect x="55.0066%" y="885" width="0.0311%" height="15" fill="rgb(243,129,40)" fg:x="183662" fg:w="104"/><text x="55.2566%" y="895.50"></text></g><g><title>taffy::compute::round_layout::round_layout_inner (100 samples, 0.03%)</title><rect x="55.0078%" y="869" width="0.0299%" height="15" fill="rgb(210,66,33)" fg:x="183666" fg:w="100"/><text x="55.2578%" y="879.50"></text></g><g><title>taffy::compute::round_layout::round_layout_inner (84 samples, 0.03%)</title><rect x="55.0126%" y="853" width="0.0252%" height="15" fill="rgb(209,189,4)" fg:x="183682" fg:w="84"/><text x="55.2626%" y="863.50"></text></g><g><title>taffy::compute::round_layout::round_layout_inner (46 samples, 0.01%)</title><rect x="55.0239%" y="837" width="0.0138%" height="15" fill="rgb(214,107,37)" fg:x="183720" fg:w="46"/><text x="55.2739%" y="847.50"></text></g><g><title>bevy_ui::render::extract_text_sections (56 samples, 0.02%)</title><rect x="55.0410%" y="917" width="0.0168%" height="15" fill="rgb(245,88,54)" fg:x="183777" fg:w="56"/><text x="55.2910%" y="927.50"></text></g><g><title>bevy_color::color::_&lt;impl core::convert::From&lt;bevy_color::color::Color&gt; for bevy_color::linear_rgba::LinearRgba&gt;::from (41 samples, 0.01%)</title><rect x="55.0659%" y="901" width="0.0123%" height="15" fill="rgb(205,146,20)" fg:x="183860" fg:w="41"/><text x="55.3159%" y="911.50"></text></g><g><title>bevy_ui::render::extract_text_sections::_{{closure}} (106 samples, 0.03%)</title><rect x="55.0578%" y="917" width="0.0317%" height="15" fill="rgb(220,161,25)" fg:x="183833" fg:w="106"/><text x="55.3078%" y="927.50"></text></g><g><title>bevy_asset::handle::Handle&lt;A&gt;::id (39 samples, 0.01%)</title><rect x="55.1396%" y="901" width="0.0117%" height="15" fill="rgb(215,152,15)" fg:x="184106" fg:w="39"/><text x="55.3896%" y="911.50"></text></g><g><title>bevy_ui::render::extract_text_sections (287 samples, 0.09%)</title><rect x="55.0895%" y="917" width="0.0860%" height="15" fill="rgb(233,192,44)" fg:x="183939" fg:w="287"/><text x="55.3395%" y="927.50"></text></g><g><title>core::ptr::write (40 samples, 0.01%)</title><rect x="55.1635%" y="901" width="0.0120%" height="15" fill="rgb(240,170,46)" fg:x="184186" fg:w="40"/><text x="55.4135%" y="911.50"></text></g><g><title>bevy_ui::render::extract_uinode_borders (36 samples, 0.01%)</title><rect x="55.1824%" y="917" width="0.0108%" height="15" fill="rgb(207,104,33)" fg:x="184249" fg:w="36"/><text x="55.4324%" y="927.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::change_detection::DetectChangesMut&gt;::set_changed (60 samples, 0.02%)</title><rect x="55.1992%" y="901" width="0.0180%" height="15" fill="rgb(219,21,39)" fg:x="184305" fg:w="60"/><text x="55.4492%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (55 samples, 0.02%)</title><rect x="55.2171%" y="901" width="0.0165%" height="15" fill="rgb(214,133,29)" fg:x="184365" fg:w="55"/><text x="55.4671%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (245 samples, 0.07%)</title><rect x="55.2372%" y="901" width="0.0734%" height="15" fill="rgb(226,93,6)" fg:x="184432" fg:w="245"/><text x="55.4872%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (77 samples, 0.02%)</title><rect x="55.3124%" y="901" width="0.0231%" height="15" fill="rgb(252,222,34)" fg:x="184683" fg:w="77"/><text x="55.5624%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.02%)</title><rect x="55.3354%" y="901" width="0.0213%" height="15" fill="rgb(252,92,48)" fg:x="184760" fg:w="71"/><text x="55.5854%" y="911.50"></text></g><g><title>bevy_ecs::change_detection::MaybeLocation&lt;&amp;mut T&gt;::assign (64 samples, 0.02%)</title><rect x="55.3591%" y="901" width="0.0192%" height="15" fill="rgb(245,223,24)" fg:x="184839" fg:w="64"/><text x="55.6091%" y="911.50"></text></g><g><title>bevy_ui::render::prepare_uinodes (139 samples, 0.04%)</title><rect x="55.3786%" y="901" width="0.0416%" height="15" fill="rgb(205,176,3)" fg:x="184904" fg:w="139"/><text x="55.6286%" y="911.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vaddq_f32 (57 samples, 0.02%)</title><rect x="55.4202%" y="901" width="0.0171%" height="15" fill="rgb(235,151,15)" fg:x="185043" fg:w="57"/><text x="55.6702%" y="911.50"></text></g><g><title>core::ptr::write (201 samples, 0.06%)</title><rect x="55.4402%" y="901" width="0.0602%" height="15" fill="rgb(237,209,11)" fg:x="185110" fg:w="201"/><text x="55.6902%" y="911.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_staging_buffer_impl (36 samples, 0.01%)</title><rect x="55.5157%" y="869" width="0.0108%" height="15" fill="rgb(243,227,24)" fg:x="185362" fg:w="36"/><text x="55.7657%" y="879.50"></text></g><g><title>IOConnectCallMethod (179 samples, 0.05%)</title><rect x="55.5301%" y="725" width="0.0536%" height="15" fill="rgb(239,193,16)" fg:x="185410" fg:w="179"/><text x="55.7801%" y="735.50"></text></g><g><title>io_connect_method (176 samples, 0.05%)</title><rect x="55.5310%" y="709" width="0.0527%" height="15" fill="rgb(231,27,9)" fg:x="185413" fg:w="176"/><text x="55.7810%" y="719.50"></text></g><g><title>mach_msg2_internal (172 samples, 0.05%)</title><rect x="55.5322%" y="693" width="0.0515%" height="15" fill="rgb(219,169,10)" fg:x="185417" fg:w="172"/><text x="55.7822%" y="703.50"></text></g><g><title>mach_msg2_trap (172 samples, 0.05%)</title><rect x="55.5322%" y="677" width="0.0515%" height="15" fill="rgb(244,229,43)" fg:x="185417" fg:w="172"/><text x="55.7822%" y="687.50"></text></g><g><title>IOGPUResourceCreate (186 samples, 0.06%)</title><rect x="55.5298%" y="741" width="0.0557%" height="15" fill="rgb(254,38,20)" fg:x="185409" fg:w="186"/><text x="55.7798%" y="751.50"></text></g><g><title>-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (207 samples, 0.06%)</title><rect x="55.5280%" y="773" width="0.0620%" height="15" fill="rgb(250,47,30)" fg:x="185403" fg:w="207"/><text x="55.7780%" y="783.50"></text></g><g><title>-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (207 samples, 0.06%)</title><rect x="55.5280%" y="757" width="0.0620%" height="15" fill="rgb(224,124,36)" fg:x="185403" fg:w="207"/><text x="55.7780%" y="767.50"></text></g><g><title>-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (35 samples, 0.01%)</title><rect x="55.5900%" y="773" width="0.0105%" height="15" fill="rgb(246,68,51)" fg:x="185610" fg:w="35"/><text x="55.8400%" y="783.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (244 samples, 0.07%)</title><rect x="55.5277%" y="789" width="0.0731%" height="15" fill="rgb(253,43,49)" fg:x="185402" fg:w="244"/><text x="55.7777%" y="799.50"></text></g><g><title>-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (247 samples, 0.07%)</title><rect x="55.5274%" y="821" width="0.0740%" height="15" fill="rgb(219,54,36)" fg:x="185401" fg:w="247"/><text x="55.7774%" y="831.50"></text></g><g><title>-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (247 samples, 0.07%)</title><rect x="55.5274%" y="805" width="0.0740%" height="15" fill="rgb(227,133,34)" fg:x="185401" fg:w="247"/><text x="55.7774%" y="815.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (253 samples, 0.08%)</title><rect x="55.5271%" y="837" width="0.0758%" height="15" fill="rgb(247,227,15)" fg:x="185400" fg:w="253"/><text x="55.7771%" y="847.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (268 samples, 0.08%)</title><rect x="55.5265%" y="853" width="0.0803%" height="15" fill="rgb(229,96,14)" fg:x="185398" fg:w="268"/><text x="55.7765%" y="863.50"></text></g><g><title>wgpu_core::device::queue::Queue::write_buffer (316 samples, 0.09%)</title><rect x="55.5133%" y="885" width="0.0946%" height="15" fill="rgb(220,79,17)" fg:x="185354" fg:w="316"/><text x="55.7633%" y="895.50"></text></g><g><title>wgpu_core::resource::StagingBuffer::new (272 samples, 0.08%)</title><rect x="55.5265%" y="869" width="0.0815%" height="15" fill="rgb(205,131,53)" fg:x="185398" fg:w="272"/><text x="55.7765%" y="879.50"></text></g><g><title>bevy_ui::render::prepare_uinodes (1,384 samples, 0.41%)</title><rect x="55.1944%" y="917" width="0.4145%" height="15" fill="rgb(209,50,29)" fg:x="184289" fg:w="1384"/><text x="55.4444%" y="927.50"></text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (334 samples, 0.10%)</title><rect x="55.5088%" y="901" width="0.1000%" height="15" fill="rgb(245,86,46)" fg:x="185339" fg:w="334"/><text x="55.7588%" y="911.50"></text></g><g><title>bevy_ui::update::update_clipping (162 samples, 0.05%)</title><rect x="55.6535%" y="869" width="0.0485%" height="15" fill="rgb(235,66,46)" fg:x="185822" fg:w="162"/><text x="55.9035%" y="879.50"></text></g><g><title>bevy_ui::update::update_clipping (224 samples, 0.07%)</title><rect x="55.6361%" y="885" width="0.0671%" height="15" fill="rgb(232,148,31)" fg:x="185764" fg:w="224"/><text x="55.8861%" y="895.50"></text></g><g><title>bevy_ui::update::update_clipping (283 samples, 0.08%)</title><rect x="55.6223%" y="901" width="0.0848%" height="15" fill="rgb(217,149,8)" fg:x="185718" fg:w="283"/><text x="55.8723%" y="911.50"></text></g><g><title>bevy_ui::update::update_clipping_system (300 samples, 0.09%)</title><rect x="55.6179%" y="917" width="0.0898%" height="15" fill="rgb(209,183,11)" fg:x="185703" fg:w="300"/><text x="55.8679%" y="927.50"></text></g><g><title>core::convert::num::_&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (43 samples, 0.01%)</title><rect x="55.7299%" y="917" width="0.0129%" height="15" fill="rgb(208,55,20)" fg:x="186077" fg:w="43"/><text x="55.9799%" y="927.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vgetq_lane_u32 (67 samples, 0.02%)</title><rect x="55.7463%" y="917" width="0.0201%" height="15" fill="rgb(218,39,14)" fg:x="186132" fg:w="67"/><text x="55.9963%" y="927.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (79 samples, 0.02%)</title><rect x="55.7679%" y="917" width="0.0237%" height="15" fill="rgb(216,169,33)" fg:x="186204" fg:w="79"/><text x="56.0179%" y="927.50"></text></g><g><title>_platform_memmove (105 samples, 0.03%)</title><rect x="55.8209%" y="901" width="0.0314%" height="15" fill="rgb(233,80,24)" fg:x="186381" fg:w="105"/><text x="56.0709%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (229 samples, 0.07%)</title><rect x="55.7925%" y="917" width="0.0686%" height="15" fill="rgb(213,179,31)" fg:x="186286" fg:w="229"/><text x="56.0425%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (69 samples, 0.02%)</title><rect x="55.8688%" y="917" width="0.0207%" height="15" fill="rgb(209,19,5)" fg:x="186541" fg:w="69"/><text x="56.1188%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.01%)</title><rect x="55.8907%" y="917" width="0.0135%" height="15" fill="rgb(219,18,35)" fg:x="186614" fg:w="45"/><text x="56.1407%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (180 samples, 0.05%)</title><rect x="55.9203%" y="917" width="0.0539%" height="15" fill="rgb(209,169,16)" fg:x="186713" fg:w="180"/><text x="56.1703%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (59 samples, 0.02%)</title><rect x="55.9796%" y="917" width="0.0177%" height="15" fill="rgb(245,90,51)" fg:x="186911" fg:w="59"/><text x="56.2296%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smallvec::SmallVec&lt;[bevy_render::render_phase::BinnedRenderPhaseBatch (48 samples, 0.01%)</title><rect x="56.0075%" y="917" width="0.0144%" height="15" fill="rgb(220,99,45)" fg:x="187004" fg:w="48"/><text x="56.2575%" y="927.50"></text></g><g><title> 1]&gt;]&gt; (48 samples, 0.01%)</title><rect x="56.0075%" y="901" width="0.0144%" height="15" fill="rgb(249,89,25)" fg:x="187004" fg:w="48"/><text x="56.2575%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.02%)</title><rect x="56.0267%" y="885" width="0.0210%" height="15" fill="rgb(239,193,0)" fg:x="187068" fg:w="70"/><text x="56.2767%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (66 samples, 0.02%)</title><rect x="56.0279%" y="869" width="0.0198%" height="15" fill="rgb(231,126,1)" fg:x="187072" fg:w="66"/><text x="56.2779%" y="879.50"></text></g><g><title>free_tiny (54 samples, 0.02%)</title><rect x="56.0315%" y="853" width="0.0162%" height="15" fill="rgb(243,166,3)" fg:x="187084" fg:w="54"/><text x="56.2815%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::function_system::SystemMeta&gt; (88 samples, 0.03%)</title><rect x="56.0267%" y="901" width="0.0264%" height="15" fill="rgb(223,22,34)" fg:x="187068" fg:w="88"/><text x="56.2767%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::system_param::ParamSet&lt;(bevy_ecs::system::query::Query&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;,bevy_ecs::system::query::Query&lt;(bevy_ecs::change_detection::Ref&lt;bevy_transform::components::transform::Transform&gt;,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;)&gt;&gt; (103 samples, 0.03%)</title><rect x="56.0255%" y="917" width="0.0308%" height="15" fill="rgb(251,52,51)" fg:x="187064" fg:w="103"/><text x="56.2755%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (54 samples, 0.02%)</title><rect x="56.0596%" y="917" width="0.0162%" height="15" fill="rgb(221,165,28)" fg:x="187178" fg:w="54"/><text x="56.3096%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (43 samples, 0.01%)</title><rect x="56.0761%" y="917" width="0.0129%" height="15" fill="rgb(218,121,47)" fg:x="187233" fg:w="43"/><text x="56.3261%" y="927.50"></text></g><g><title>szone_malloc_should_clear (144 samples, 0.04%)</title><rect x="56.1174%" y="869" width="0.0431%" height="15" fill="rgb(209,120,9)" fg:x="187371" fg:w="144"/><text x="56.3674%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (117 samples, 0.04%)</title><rect x="56.1255%" y="853" width="0.0350%" height="15" fill="rgb(236,68,12)" fg:x="187398" fg:w="117"/><text x="56.3755%" y="863.50"></text></g><g><title>tiny_malloc_from_free_list (92 samples, 0.03%)</title><rect x="56.1330%" y="837" width="0.0276%" height="15" fill="rgb(225,194,26)" fg:x="187423" fg:w="92"/><text x="56.3830%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (150 samples, 0.04%)</title><rect x="56.1159%" y="885" width="0.0449%" height="15" fill="rgb(231,84,39)" fg:x="187366" fg:w="150"/><text x="56.3659%" y="895.50"></text></g><g><title>cosmic_text::attrs::AttrsList::add_span (192 samples, 0.06%)</title><rect x="56.1039%" y="917" width="0.0575%" height="15" fill="rgb(210,11,45)" fg:x="187326" fg:w="192"/><text x="56.3539%" y="927.50"></text></g><g><title>rangemap::map::RangeMap&lt;K,V&gt;::insert (187 samples, 0.06%)</title><rect x="56.1054%" y="901" width="0.0560%" height="15" fill="rgb(224,54,52)" fg:x="187331" fg:w="187"/><text x="56.3554%" y="911.50"></text></g><g><title>cosmic_text::attrs::FamilyOwned::new (144 samples, 0.04%)</title><rect x="56.1719%" y="901" width="0.0431%" height="15" fill="rgb(238,102,14)" fg:x="187553" fg:w="144"/><text x="56.4219%" y="911.50"></text></g><g><title>cosmic_text::attrs::AttrsOwned::new (178 samples, 0.05%)</title><rect x="56.1638%" y="917" width="0.0533%" height="15" fill="rgb(243,160,52)" fg:x="187526" fg:w="178"/><text x="56.4138%" y="927.50"></text></g><g><title>szone_malloc_should_clear (83 samples, 0.02%)</title><rect x="56.2360%" y="821" width="0.0249%" height="15" fill="rgb(216,114,19)" fg:x="187767" fg:w="83"/><text x="56.4860%" y="831.50"></text></g><g><title>tiny_malloc_should_clear (78 samples, 0.02%)</title><rect x="56.2375%" y="805" width="0.0234%" height="15" fill="rgb(244,166,37)" fg:x="187772" fg:w="78"/><text x="56.4875%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (108 samples, 0.03%)</title><rect x="56.2291%" y="853" width="0.0323%" height="15" fill="rgb(246,29,44)" fg:x="187744" fg:w="108"/><text x="56.4791%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 samples, 0.03%)</title><rect x="56.2291%" y="837" width="0.0323%" height="15" fill="rgb(215,56,53)" fg:x="187744" fg:w="108"/><text x="56.4791%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (135 samples, 0.04%)</title><rect x="56.2267%" y="869" width="0.0404%" height="15" fill="rgb(217,60,2)" fg:x="187736" fg:w="135"/><text x="56.4767%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.02%)</title><rect x="56.2690%" y="853" width="0.0216%" height="15" fill="rgb(207,26,24)" fg:x="187877" fg:w="72"/><text x="56.5190%" y="863.50"></text></g><g><title>cosmic_text::shape::ShapeGlyph::width (39 samples, 0.01%)</title><rect x="56.3049%" y="853" width="0.0117%" height="15" fill="rgb(252,210,15)" fg:x="187997" fg:w="39"/><text x="56.5549%" y="863.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (175 samples, 0.05%)</title><rect x="56.2690%" y="869" width="0.0524%" height="15" fill="rgb(253,209,26)" fg:x="187877" fg:w="175"/><text x="56.5190%" y="879.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (199 samples, 0.06%)</title><rect x="56.3214%" y="869" width="0.0596%" height="15" fill="rgb(238,170,14)" fg:x="188052" fg:w="199"/><text x="56.5714%" y="879.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (176 samples, 0.05%)</title><rect x="56.3283%" y="853" width="0.0527%" height="15" fill="rgb(216,178,15)" fg:x="188075" fg:w="176"/><text x="56.5783%" y="863.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (108 samples, 0.03%)</title><rect x="56.3486%" y="837" width="0.0323%" height="15" fill="rgb(250,197,2)" fg:x="188143" fg:w="108"/><text x="56.5986%" y="847.50"></text></g><g><title>szone_malloc_should_clear (59 samples, 0.02%)</title><rect x="56.3843%" y="853" width="0.0177%" height="15" fill="rgb(212,70,42)" fg:x="188262" fg:w="59"/><text x="56.6343%" y="863.50"></text></g><g><title>tiny_malloc_should_clear (50 samples, 0.01%)</title><rect x="56.3870%" y="837" width="0.0150%" height="15" fill="rgb(227,213,9)" fg:x="188271" fg:w="50"/><text x="56.6370%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (69 samples, 0.02%)</title><rect x="56.3816%" y="869" width="0.0207%" height="15" fill="rgb(245,99,25)" fg:x="188253" fg:w="69"/><text x="56.6316%" y="879.50"></text></g><g><title>free_tiny (119 samples, 0.04%)</title><rect x="56.4223%" y="853" width="0.0356%" height="15" fill="rgb(250,82,29)" fg:x="188389" fg:w="119"/><text x="56.6723%" y="863.50"></text></g><g><title>tiny_free_no_lock (51 samples, 0.02%)</title><rect x="56.4427%" y="837" width="0.0153%" height="15" fill="rgb(241,226,54)" fg:x="188457" fg:w="51"/><text x="56.6927%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (189 samples, 0.06%)</title><rect x="56.4022%" y="869" width="0.0566%" height="15" fill="rgb(221,99,41)" fg:x="188322" fg:w="189"/><text x="56.6522%" y="879.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (784 samples, 0.23%)</title><rect x="56.2246%" y="885" width="0.2348%" height="15" fill="rgb(213,90,21)" fg:x="187729" fg:w="784"/><text x="56.4746%" y="895.50"></text></g><g><title>mach_absolute_time (95 samples, 0.03%)</title><rect x="56.4675%" y="837" width="0.0285%" height="15" fill="rgb(205,208,24)" fg:x="188540" fg:w="95"/><text x="56.7175%" y="847.50"></text></g><g><title>clock_gettime_nsec_np (107 samples, 0.03%)</title><rect x="56.4645%" y="853" width="0.0320%" height="15" fill="rgb(246,31,12)" fg:x="188530" fg:w="107"/><text x="56.7145%" y="863.50"></text></g><g><title>cosmic_text::buffer::Buffer::relayout (927 samples, 0.28%)</title><rect x="56.2192%" y="901" width="0.2776%" height="15" fill="rgb(213,154,6)" fg:x="187711" fg:w="927"/><text x="56.4692%" y="911.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (120 samples, 0.04%)</title><rect x="56.4609%" y="885" width="0.0359%" height="15" fill="rgb(222,163,29)" fg:x="188518" fg:w="120"/><text x="56.7109%" y="895.50"></text></g><g><title>clock_gettime (115 samples, 0.03%)</title><rect x="56.4624%" y="869" width="0.0344%" height="15" fill="rgb(227,201,8)" fg:x="188523" fg:w="115"/><text x="56.7124%" y="879.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_metrics_and_size (955 samples, 0.29%)</title><rect x="56.2180%" y="917" width="0.2860%" height="15" fill="rgb(233,9,32)" fg:x="187707" fg:w="955"/><text x="56.4680%" y="927.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (130 samples, 0.04%)</title><rect x="56.5098%" y="885" width="0.0389%" height="15" fill="rgb(217,54,24)" fg:x="188681" fg:w="130"/><text x="56.7598%" y="895.50"></text></g><g><title>_platform_memset (38 samples, 0.01%)</title><rect x="56.5789%" y="853" width="0.0114%" height="15" fill="rgb(235,192,0)" fg:x="188912" fg:w="38"/><text x="56.8289%" y="863.50"></text></g><g><title>free_tiny (207 samples, 0.06%)</title><rect x="56.5613%" y="869" width="0.0620%" height="15" fill="rgb(235,45,9)" fg:x="188853" fg:w="207"/><text x="56.8113%" y="879.50"></text></g><g><title>tiny_free_no_lock (107 samples, 0.03%)</title><rect x="56.5912%" y="853" width="0.0320%" height="15" fill="rgb(246,42,40)" fg:x="188953" fg:w="107"/><text x="56.8412%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (398 samples, 0.12%)</title><rect x="56.5044%" y="901" width="0.1192%" height="15" fill="rgb(248,111,24)" fg:x="188663" fg:w="398"/><text x="56.7544%" y="911.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (227 samples, 0.07%)</title><rect x="56.5556%" y="885" width="0.0680%" height="15" fill="rgb(249,65,22)" fg:x="188834" fg:w="227"/><text x="56.8056%" y="895.50"></text></g><g><title>cosmic_text::buffer::Buffer::shape_until_scroll (34 samples, 0.01%)</title><rect x="56.6541%" y="885" width="0.0102%" height="15" fill="rgb(238,111,51)" fg:x="189163" fg:w="34"/><text x="56.9041%" y="895.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_rich_text (57 samples, 0.02%)</title><rect x="56.6508%" y="901" width="0.0171%" height="15" fill="rgb(250,118,22)" fg:x="189152" fg:w="57"/><text x="56.9008%" y="911.50"></text></g><g><title>szone_malloc_should_clear (84 samples, 0.03%)</title><rect x="56.6793%" y="837" width="0.0252%" height="15" fill="rgb(234,84,26)" fg:x="189247" fg:w="84"/><text x="56.9293%" y="847.50"></text></g><g><title>tiny_malloc_should_clear (73 samples, 0.02%)</title><rect x="56.6826%" y="821" width="0.0219%" height="15" fill="rgb(243,172,12)" fg:x="189258" fg:w="73"/><text x="56.9326%" y="831.50"></text></g><g><title>tiny_malloc_from_free_list (42 samples, 0.01%)</title><rect x="56.6919%" y="805" width="0.0126%" height="15" fill="rgb(236,150,49)" fg:x="189289" fg:w="42"/><text x="56.9419%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (98 samples, 0.03%)</title><rect x="56.6754%" y="869" width="0.0294%" height="15" fill="rgb(225,197,26)" fg:x="189234" fg:w="98"/><text x="56.9254%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.03%)</title><rect x="56.6754%" y="853" width="0.0294%" height="15" fill="rgb(214,17,42)" fg:x="189234" fg:w="98"/><text x="56.9254%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (118 samples, 0.04%)</title><rect x="56.6706%" y="885" width="0.0353%" height="15" fill="rgb(224,165,40)" fg:x="189218" fg:w="118"/><text x="56.9206%" y="895.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (148 samples, 0.04%)</title><rect x="56.7110%" y="885" width="0.0443%" height="15" fill="rgb(246,100,4)" fg:x="189353" fg:w="148"/><text x="56.9610%" y="895.50"></text></g><g><title>cosmic_text::shape::ShapeLine::adjust_levels (47 samples, 0.01%)</title><rect x="56.8132%" y="869" width="0.0141%" height="15" fill="rgb(222,103,0)" fg:x="189694" fg:w="47"/><text x="57.0632%" y="879.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::binary_search_by (69 samples, 0.02%)</title><rect x="56.9015%" y="837" width="0.0207%" height="15" fill="rgb(227,189,26)" fg:x="189989" fg:w="69"/><text x="57.1515%" y="847.50"></text></g><g><title>core::str::_&lt;impl str&gt;::is_char_boundary (42 samples, 0.01%)</title><rect x="56.9228%" y="837" width="0.0126%" height="15" fill="rgb(214,202,17)" fg:x="190060" fg:w="42"/><text x="57.1728%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (278 samples, 0.08%)</title><rect x="56.9707%" y="789" width="0.0833%" height="15" fill="rgb(229,111,3)" fg:x="190220" fg:w="278"/><text x="57.2207%" y="799.50"></text></g><g><title>szone_malloc_should_clear (228 samples, 0.07%)</title><rect x="56.9857%" y="773" width="0.0683%" height="15" fill="rgb(229,172,15)" fg:x="190270" fg:w="228"/><text x="57.2357%" y="783.50"></text></g><g><title>tiny_malloc_should_clear (205 samples, 0.06%)</title><rect x="56.9926%" y="757" width="0.0614%" height="15" fill="rgb(230,224,35)" fg:x="190293" fg:w="205"/><text x="57.2426%" y="767.50"></text></g><g><title>tiny_malloc_from_free_list (168 samples, 0.05%)</title><rect x="57.0036%" y="741" width="0.0503%" height="15" fill="rgb(251,141,6)" fg:x="190330" fg:w="168"/><text x="57.2536%" y="751.50"></text></g><g><title>tiny_free_list_add_ptr (49 samples, 0.01%)</title><rect x="57.0393%" y="725" width="0.0147%" height="15" fill="rgb(225,208,6)" fg:x="190449" fg:w="49"/><text x="57.2893%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (279 samples, 0.08%)</title><rect x="56.9707%" y="805" width="0.0836%" height="15" fill="rgb(246,181,16)" fg:x="190220" fg:w="279"/><text x="57.2207%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (311 samples, 0.09%)</title><rect x="56.9671%" y="821" width="0.0931%" height="15" fill="rgb(227,129,36)" fg:x="190208" fg:w="311"/><text x="57.2171%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.02%)</title><rect x="57.0638%" y="821" width="0.0180%" height="15" fill="rgb(248,117,24)" fg:x="190531" fg:w="60"/><text x="57.3138%" y="831.50"></text></g><g><title>alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (39 samples, 0.01%)</title><rect x="57.1028%" y="805" width="0.0117%" height="15" fill="rgb(214,185,35)" fg:x="190661" fg:w="39"/><text x="57.3528%" y="815.50"></text></g><g><title>cosmic_text::shape::shape_run_cached (65 samples, 0.02%)</title><rect x="57.1315%" y="805" width="0.0195%" height="15" fill="rgb(236,150,34)" fg:x="190757" fg:w="65"/><text x="57.3815%" y="815.50"></text></g><g><title>cosmic_text::attrs::AttrsOwned::new (198 samples, 0.06%)</title><rect x="57.0944%" y="821" width="0.0593%" height="15" fill="rgb(243,228,27)" fg:x="190633" fg:w="198"/><text x="57.3444%" y="831.50"></text></g><g><title>cosmic_text::shape::ShapeWord::build (51 samples, 0.02%)</title><rect x="57.1585%" y="821" width="0.0153%" height="15" fill="rgb(245,77,44)" fg:x="190847" fg:w="51"/><text x="57.4085%" y="831.50"></text></g><g><title>cosmic_text::shape::Shaping::run (37 samples, 0.01%)</title><rect x="57.1737%" y="821" width="0.0111%" height="15" fill="rgb(235,214,42)" fg:x="190898" fg:w="37"/><text x="57.4237%" y="831.50"></text></g><g><title>szone_malloc_should_clear (69 samples, 0.02%)</title><rect x="57.2540%" y="741" width="0.0207%" height="15" fill="rgb(221,74,3)" fg:x="191166" fg:w="69"/><text x="57.5040%" y="751.50"></text></g><g><title>tiny_malloc_should_clear (59 samples, 0.02%)</title><rect x="57.2570%" y="725" width="0.0177%" height="15" fill="rgb(206,121,29)" fg:x="191176" fg:w="59"/><text x="57.5070%" y="735.50"></text></g><g><title>tiny_malloc_from_free_list (40 samples, 0.01%)</title><rect x="57.2627%" y="709" width="0.0120%" height="15" fill="rgb(249,131,53)" fg:x="191195" fg:w="40"/><text x="57.5127%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.03%)</title><rect x="57.2468%" y="757" width="0.0282%" height="15" fill="rgb(236,170,29)" fg:x="191142" fg:w="94"/><text x="57.4968%" y="767.50"></text></g><g><title>free_tiny (36 samples, 0.01%)</title><rect x="57.2870%" y="693" width="0.0108%" height="15" fill="rgb(247,96,15)" fg:x="191276" fg:w="36"/><text x="57.5370%" y="703.50"></text></g><g><title>szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="57.2980%" y="693" width="0.0165%" height="15" fill="rgb(211,210,7)" fg:x="191313" fg:w="55"/><text x="57.5480%" y="703.50"></text></g><g><title>tiny_malloc_should_clear (40 samples, 0.01%)</title><rect x="57.3025%" y="677" width="0.0120%" height="15" fill="rgb(240,88,50)" fg:x="191328" fg:w="40"/><text x="57.5525%" y="687.50"></text></g><g><title>szone_realloc (138 samples, 0.04%)</title><rect x="57.2783%" y="709" width="0.0413%" height="15" fill="rgb(209,229,26)" fg:x="191247" fg:w="138"/><text x="57.5283%" y="719.50"></text></g><g><title>_malloc_zone_realloc (143 samples, 0.04%)</title><rect x="57.2774%" y="725" width="0.0428%" height="15" fill="rgb(210,68,23)" fg:x="191244" fg:w="143"/><text x="57.5274%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (163 samples, 0.05%)</title><rect x="57.2750%" y="757" width="0.0488%" height="15" fill="rgb(229,180,13)" fg:x="191236" fg:w="163"/><text x="57.5250%" y="767.50"></text></g><g><title>_realloc (163 samples, 0.05%)</title><rect x="57.2750%" y="741" width="0.0488%" height="15" fill="rgb(236,53,44)" fg:x="191236" fg:w="163"/><text x="57.5250%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (261 samples, 0.08%)</title><rect x="57.2459%" y="773" width="0.0782%" height="15" fill="rgb(244,214,29)" fg:x="191139" fg:w="261"/><text x="57.4959%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (293 samples, 0.09%)</title><rect x="57.2390%" y="789" width="0.0878%" height="15" fill="rgb(220,75,29)" fg:x="191116" fg:w="293"/><text x="57.4890%" y="799.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (107 samples, 0.03%)</title><rect x="57.3403%" y="757" width="0.0320%" height="15" fill="rgb(214,183,37)" fg:x="191454" fg:w="107"/><text x="57.5903%" y="767.50"></text></g><g><title>core::slice::sort::stable::sort (125 samples, 0.04%)</title><rect x="57.3391%" y="789" width="0.0374%" height="15" fill="rgb(239,117,29)" fg:x="191450" fg:w="125"/><text x="57.5891%" y="799.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (123 samples, 0.04%)</title><rect x="57.3397%" y="773" width="0.0368%" height="15" fill="rgb(237,171,35)" fg:x="191452" fg:w="123"/><text x="57.5897%" y="783.50"></text></g><g><title>rustybuzz::hb::ot_map::hb_ot_map_builder_t::collect_feature_maps (119 samples, 0.04%)</title><rect x="57.4017%" y="773" width="0.0356%" height="15" fill="rgb(229,178,53)" fg:x="191659" fg:w="119"/><text x="57.6517%" y="783.50"></text></g><g><title>rustybuzz::hb::ot_map::hb_ot_map_builder_t::collect_feature_maps (190 samples, 0.06%)</title><rect x="57.3870%" y="789" width="0.0569%" height="15" fill="rgb(210,102,19)" fg:x="191610" fg:w="190"/><text x="57.6370%" y="799.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (112 samples, 0.03%)</title><rect x="57.4622%" y="789" width="0.0335%" height="15" fill="rgb(235,127,22)" fg:x="191861" fg:w="112"/><text x="57.7122%" y="799.50"></text></g><g><title>free_tiny (87 samples, 0.03%)</title><rect x="57.4697%" y="773" width="0.0261%" height="15" fill="rgb(244,31,31)" fg:x="191886" fg:w="87"/><text x="57.7197%" y="783.50"></text></g><g><title>tiny_free_no_lock (48 samples, 0.01%)</title><rect x="57.4813%" y="757" width="0.0144%" height="15" fill="rgb(231,43,21)" fg:x="191925" fg:w="48"/><text x="57.7313%" y="767.50"></text></g><g><title>cosmic_text::shape::shape_fallback (922 samples, 0.28%)</title><rect x="57.2208%" y="805" width="0.2761%" height="15" fill="rgb(217,131,35)" fg:x="191055" fg:w="922"/><text x="57.4708%" y="815.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::binary_search_by (38 samples, 0.01%)</title><rect x="57.5152%" y="757" width="0.0114%" height="15" fill="rgb(221,149,4)" fg:x="192038" fg:w="38"/><text x="57.7652%" y="767.50"></text></g><g><title>rustybuzz::hb::buffer::hb_buffer_t::guess_segment_properties (67 samples, 0.02%)</title><rect x="57.5083%" y="789" width="0.0201%" height="15" fill="rgb(232,170,28)" fg:x="192015" fg:w="67"/><text x="57.7583%" y="799.50"></text></g><g><title>&lt;char as rustybuzz::hb::unicode::CharExt&gt;::script (52 samples, 0.02%)</title><rect x="57.5128%" y="773" width="0.0156%" height="15" fill="rgb(238,56,10)" fg:x="192030" fg:w="52"/><text x="57.7628%" y="783.50"></text></g><g><title>rustybuzz::hb::buffer::UnicodeBuffer::guess_segment_properties (74 samples, 0.02%)</title><rect x="57.5068%" y="805" width="0.0222%" height="15" fill="rgb(235,196,14)" fg:x="192010" fg:w="74"/><text x="57.7568%" y="815.50"></text></g><g><title>&lt;char as rustybuzz::hb::unicode::CharExt&gt;::general_category (41 samples, 0.01%)</title><rect x="57.5709%" y="773" width="0.0123%" height="15" fill="rgb(216,45,48)" fg:x="192224" fg:w="41"/><text x="57.8209%" y="783.50"></text></g><g><title>rustybuzz::hb::face::hb_font_t::get_nominal_glyph (50 samples, 0.01%)</title><rect x="57.5936%" y="773" width="0.0150%" height="15" fill="rgb(238,213,17)" fg:x="192300" fg:w="50"/><text x="57.8436%" y="783.50"></text></g><g><title>rustybuzz::hb::ot_shape::shape_internal (258 samples, 0.08%)</title><rect x="57.5502%" y="789" width="0.0773%" height="15" fill="rgb(212,13,2)" fg:x="192155" fg:w="258"/><text x="57.8002%" y="799.50"></text></g><g><title>rustybuzz::hb::shape::shape_with_plan (304 samples, 0.09%)</title><rect x="57.5367%" y="805" width="0.0910%" height="15" fill="rgb(240,114,20)" fg:x="192110" fg:w="304"/><text x="57.7867%" y="815.50"></text></g><g><title>cosmic_text::shape::shape_run (1,488 samples, 0.45%)</title><rect x="57.1848%" y="821" width="0.4457%" height="15" fill="rgb(228,41,40)" fg:x="190935" fg:w="1488"/><text x="57.4348%" y="831.50"></text></g><g><title>_platform_memset (34 samples, 0.01%)</title><rect x="57.6805%" y="789" width="0.0102%" height="15" fill="rgb(244,132,35)" fg:x="192590" fg:w="34"/><text x="57.9305%" y="799.50"></text></g><g><title>free_tiny (221 samples, 0.07%)</title><rect x="57.6655%" y="805" width="0.0662%" height="15" fill="rgb(253,189,4)" fg:x="192540" fg:w="221"/><text x="57.9155%" y="815.50"></text></g><g><title>tiny_free_no_lock (137 samples, 0.04%)</title><rect x="57.6907%" y="789" width="0.0410%" height="15" fill="rgb(224,37,19)" fg:x="192624" fg:w="137"/><text x="57.9407%" y="799.50"></text></g><g><title>free_tiny (67 samples, 0.02%)</title><rect x="57.7512%" y="789" width="0.0201%" height="15" fill="rgb(235,223,18)" fg:x="192826" fg:w="67"/><text x="58.0012%" y="799.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (103 samples, 0.03%)</title><rect x="57.7407%" y="805" width="0.0308%" height="15" fill="rgb(235,163,25)" fg:x="192791" fg:w="103"/><text x="57.9907%" y="815.50"></text></g><g><title>cosmic_text::shape::shape_run_cached (475 samples, 0.14%)</title><rect x="57.6305%" y="821" width="0.1423%" height="15" fill="rgb(217,145,28)" fg:x="192423" fg:w="475"/><text x="57.8805%" y="831.50"></text></g><g><title>&lt;cosmic_text::shape_run_cache::ShapeRunKey as core::hash::Hash&gt;::hash (51 samples, 0.02%)</title><rect x="57.7760%" y="805" width="0.0153%" height="15" fill="rgb(223,223,32)" fg:x="192909" fg:w="51"/><text x="58.0260%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (52 samples, 0.02%)</title><rect x="57.7955%" y="805" width="0.0156%" height="15" fill="rgb(227,189,39)" fg:x="192974" fg:w="52"/><text x="58.0455%" y="815.50"></text></g><g><title>core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (70 samples, 0.02%)</title><rect x="57.8162%" y="805" width="0.0210%" height="15" fill="rgb(248,10,22)" fg:x="193043" fg:w="70"/><text x="58.0662%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (266 samples, 0.08%)</title><rect x="57.7760%" y="821" width="0.0797%" height="15" fill="rgb(248,46,39)" fg:x="192909" fg:w="266"/><text x="58.0260%" y="831.50"></text></g><g><title>&lt;cosmic_text::shape::ShapeGlyph as core::clone::Clone&gt;::clone (35 samples, 0.01%)</title><rect x="57.8899%" y="805" width="0.0105%" height="15" fill="rgb(248,113,48)" fg:x="193289" fg:w="35"/><text x="58.1399%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (41 samples, 0.01%)</title><rect x="57.9129%" y="805" width="0.0123%" height="15" fill="rgb(245,16,25)" fg:x="193366" fg:w="41"/><text x="58.1629%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (166 samples, 0.05%)</title><rect x="57.9267%" y="805" width="0.0497%" height="15" fill="rgb(249,152,16)" fg:x="193412" fg:w="166"/><text x="58.1767%" y="815.50"></text></g><g><title>core::ptr::write (111 samples, 0.03%)</title><rect x="57.9821%" y="805" width="0.0332%" height="15" fill="rgb(250,16,1)" fg:x="193597" fg:w="111"/><text x="58.2321%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (540 samples, 0.16%)</title><rect x="57.8557%" y="821" width="0.1617%" height="15" fill="rgb(249,138,3)" fg:x="193175" fg:w="540"/><text x="58.1057%" y="831.50"></text></g><g><title>szone_malloc_should_clear (81 samples, 0.02%)</title><rect x="58.0309%" y="805" width="0.0243%" height="15" fill="rgb(227,71,41)" fg:x="193760" fg:w="81"/><text x="58.2809%" y="815.50"></text></g><g><title>tiny_malloc_should_clear (72 samples, 0.02%)</title><rect x="58.0336%" y="789" width="0.0216%" height="15" fill="rgb(209,184,23)" fg:x="193769" fg:w="72"/><text x="58.2836%" y="799.50"></text></g><g><title>tiny_malloc_from_free_list (40 samples, 0.01%)</title><rect x="58.0432%" y="773" width="0.0120%" height="15" fill="rgb(223,215,31)" fg:x="193801" fg:w="40"/><text x="58.2932%" y="783.50"></text></g><g><title>cosmic_text::shape::ShapeWord::build (3,697 samples, 1.11%)</title><rect x="56.9482%" y="837" width="1.1072%" height="15" fill="rgb(210,146,28)" fg:x="190145" fg:w="3697"/><text x="57.1982%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (104 samples, 0.03%)</title><rect x="58.0243%" y="821" width="0.0311%" height="15" fill="rgb(209,183,41)" fg:x="193738" fg:w="104"/><text x="58.2743%" y="831.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (83 samples, 0.02%)</title><rect x="58.0591%" y="837" width="0.0249%" height="15" fill="rgb(209,224,45)" fg:x="193854" fg:w="83"/><text x="58.3091%" y="847.50"></text></g><g><title>unicode_segmentation::grapheme::check_pair (61 samples, 0.02%)</title><rect x="58.0839%" y="837" width="0.0183%" height="15" fill="rgb(224,209,51)" fg:x="193937" fg:w="61"/><text x="58.3339%" y="847.50"></text></g><g><title>cosmic_text::shape::ShapeSpan::build (4,146 samples, 1.24%)</title><rect x="56.8635%" y="853" width="1.2417%" height="15" fill="rgb(223,17,39)" fg:x="189862" fg:w="4146"/><text x="57.1135%" y="863.50"></text></g><g><title>cosmic_text::shape::ShapeLine::build (4,304 samples, 1.29%)</title><rect x="56.8272%" y="869" width="1.2890%" height="15" fill="rgb(234,204,37)" fg:x="189741" fg:w="4304"/><text x="57.0772%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (48 samples, 0.01%)</title><rect x="58.1178%" y="869" width="0.0144%" height="15" fill="rgb(236,120,5)" fg:x="194050" fg:w="48"/><text x="58.3678%" y="879.50"></text></g><g><title>_platform_memset (38 samples, 0.01%)</title><rect x="58.1753%" y="837" width="0.0114%" height="15" fill="rgb(248,97,27)" fg:x="194242" fg:w="38"/><text x="58.4253%" y="847.50"></text></g><g><title>tiny_free_list_add_ptr (76 samples, 0.02%)</title><rect x="58.2229%" y="821" width="0.0228%" height="15" fill="rgb(240,66,17)" fg:x="194401" fg:w="76"/><text x="58.4729%" y="831.50"></text></g><g><title>free_tiny (331 samples, 0.10%)</title><rect x="58.1474%" y="853" width="0.0991%" height="15" fill="rgb(210,79,3)" fg:x="194149" fg:w="331"/><text x="58.3974%" y="863.50"></text></g><g><title>tiny_free_no_lock (199 samples, 0.06%)</title><rect x="58.1870%" y="837" width="0.0596%" height="15" fill="rgb(214,176,27)" fg:x="194281" fg:w="199"/><text x="58.4370%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (386 samples, 0.12%)</title><rect x="58.1321%" y="869" width="0.1156%" height="15" fill="rgb(235,185,3)" fg:x="194098" fg:w="386"/><text x="58.3821%" y="879.50"></text></g><g><title>_platform_memmove (41 samples, 0.01%)</title><rect x="58.3550%" y="837" width="0.0123%" height="15" fill="rgb(227,24,12)" fg:x="194842" fg:w="41"/><text x="58.6050%" y="847.50"></text></g><g><title>_platform_memset (57 samples, 0.02%)</title><rect x="58.3673%" y="837" width="0.0171%" height="15" fill="rgb(252,169,48)" fg:x="194883" fg:w="57"/><text x="58.6173%" y="847.50"></text></g><g><title>szone_malloc_should_clear (171 samples, 0.05%)</title><rect x="58.4002%" y="805" width="0.0512%" height="15" fill="rgb(212,65,1)" fg:x="194993" fg:w="171"/><text x="58.6502%" y="815.50"></text></g><g><title>tiny_malloc_should_clear (156 samples, 0.05%)</title><rect x="58.4047%" y="789" width="0.0467%" height="15" fill="rgb(242,39,24)" fg:x="195008" fg:w="156"/><text x="58.6547%" y="799.50"></text></g><g><title>tiny_malloc_from_free_list (104 samples, 0.03%)</title><rect x="58.4203%" y="773" width="0.0311%" height="15" fill="rgb(249,32,23)" fg:x="195060" fg:w="104"/><text x="58.6703%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (217 samples, 0.06%)</title><rect x="58.3870%" y="821" width="0.0650%" height="15" fill="rgb(251,195,23)" fg:x="194949" fg:w="217"/><text x="58.6370%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (221 samples, 0.07%)</title><rect x="58.3870%" y="837" width="0.0662%" height="15" fill="rgb(236,174,8)" fg:x="194949" fg:w="221"/><text x="58.6370%" y="847.50"></text></g><g><title>free_tiny (121 samples, 0.04%)</title><rect x="58.4562%" y="837" width="0.0362%" height="15" fill="rgb(220,197,8)" fg:x="195180" fg:w="121"/><text x="58.7062%" y="847.50"></text></g><g><title>tiny_free_no_lock (49 samples, 0.01%)</title><rect x="58.4778%" y="821" width="0.0147%" height="15" fill="rgb(240,108,37)" fg:x="195252" fg:w="49"/><text x="58.7278%" y="831.50"></text></g><g><title>szone_malloc_should_clear (123 samples, 0.04%)</title><rect x="58.4924%" y="837" width="0.0368%" height="15" fill="rgb(232,176,24)" fg:x="195301" fg:w="123"/><text x="58.7424%" y="847.50"></text></g><g><title>tiny_malloc_should_clear (101 samples, 0.03%)</title><rect x="58.4990%" y="821" width="0.0302%" height="15" fill="rgb(243,35,29)" fg:x="195323" fg:w="101"/><text x="58.7490%" y="831.50"></text></g><g><title>tiny_malloc_from_free_list (56 samples, 0.02%)</title><rect x="58.5125%" y="805" width="0.0168%" height="15" fill="rgb(210,37,18)" fg:x="195368" fg:w="56"/><text x="58.7625%" y="815.50"></text></g><g><title>unicode_bidi::BidiInfo::new (1,092 samples, 0.33%)</title><rect x="58.2481%" y="869" width="0.3271%" height="15" fill="rgb(224,184,40)" fg:x="194485" fg:w="1092"/><text x="58.4981%" y="879.50"></text></g><g><title>unicode_bidi::BidiInfo::new_with_data_source (1,079 samples, 0.32%)</title><rect x="58.2519%" y="853" width="0.3232%" height="15" fill="rgb(236,39,29)" fg:x="194498" fg:w="1079"/><text x="58.5019%" y="863.50"></text></g><g><title>unicode_bidi::char_data::bsearch_range_value_table (147 samples, 0.04%)</title><rect x="58.5311%" y="837" width="0.0440%" height="15" fill="rgb(232,48,39)" fg:x="195430" fg:w="147"/><text x="58.7811%" y="847.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::shape (6,083 samples, 1.82%)</title><rect x="56.7553%" y="885" width="1.8219%" height="15" fill="rgb(236,34,42)" fg:x="189501" fg:w="6083"/><text x="57.0053%" y="895.50">c..</text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (209 samples, 0.06%)</title><rect x="58.5811%" y="885" width="0.0626%" height="15" fill="rgb(243,106,37)" fg:x="195597" fg:w="209"/><text x="58.8311%" y="895.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (189 samples, 0.06%)</title><rect x="58.5871%" y="869" width="0.0566%" height="15" fill="rgb(218,96,6)" fg:x="195617" fg:w="189"/><text x="58.8371%" y="879.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (128 samples, 0.04%)</title><rect x="58.6054%" y="853" width="0.0383%" height="15" fill="rgb(235,130,12)" fg:x="195678" fg:w="128"/><text x="58.8554%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (73 samples, 0.02%)</title><rect x="58.6455%" y="885" width="0.0219%" height="15" fill="rgb(231,95,0)" fg:x="195812" fg:w="73"/><text x="58.8955%" y="895.50"></text></g><g><title>szone_malloc_should_clear (58 samples, 0.02%)</title><rect x="58.6500%" y="869" width="0.0174%" height="15" fill="rgb(228,12,23)" fg:x="195827" fg:w="58"/><text x="58.9000%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (47 samples, 0.01%)</title><rect x="58.6533%" y="853" width="0.0141%" height="15" fill="rgb(216,12,1)" fg:x="195838" fg:w="47"/><text x="58.9033%" y="863.50"></text></g><g><title>free_tiny (155 samples, 0.05%)</title><rect x="58.6928%" y="869" width="0.0464%" height="15" fill="rgb(219,59,3)" fg:x="195970" fg:w="155"/><text x="58.9428%" y="879.50"></text></g><g><title>tiny_free_no_lock (88 samples, 0.03%)</title><rect x="58.7129%" y="853" width="0.0264%" height="15" fill="rgb(215,208,46)" fg:x="196037" fg:w="88"/><text x="58.9629%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (245 samples, 0.07%)</title><rect x="58.6673%" y="885" width="0.0734%" height="15" fill="rgb(254,224,29)" fg:x="195885" fg:w="245"/><text x="58.9173%" y="895.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (6,917 samples, 2.07%)</title><rect x="56.6694%" y="901" width="2.0716%" height="15" fill="rgb(232,14,29)" fg:x="189214" fg:w="6917"/><text x="56.9194%" y="911.50">c..</text></g><g><title>cosmic_text::cached::Cached&lt;T&gt;::set_unused (78 samples, 0.02%)</title><rect x="58.7449%" y="901" width="0.0234%" height="15" fill="rgb(208,45,52)" fg:x="196144" fg:w="78"/><text x="58.9949%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;cosmic_text::shape::ShapeLine&gt;&gt; (53 samples, 0.02%)</title><rect x="58.7524%" y="885" width="0.0159%" height="15" fill="rgb(234,191,28)" fg:x="196169" fg:w="53"/><text x="59.0024%" y="895.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_rich_text (7,577 samples, 2.27%)</title><rect x="56.5041%" y="917" width="2.2693%" height="15" fill="rgb(244,67,43)" fg:x="188662" fg:w="7577"/><text x="56.7541%" y="927.50">c..</text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.02%)</title><rect x="58.7815%" y="821" width="0.0153%" height="15" fill="rgb(236,189,24)" fg:x="196266" fg:w="51"/><text x="59.0315%" y="831.50"></text></g><g><title>szone_malloc_should_clear (34 samples, 0.01%)</title><rect x="58.7866%" y="805" width="0.0102%" height="15" fill="rgb(239,214,33)" fg:x="196283" fg:w="34"/><text x="59.0366%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (52 samples, 0.02%)</title><rect x="58.7815%" y="837" width="0.0156%" height="15" fill="rgb(226,176,41)" fg:x="196266" fg:w="52"/><text x="59.0315%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60 samples, 0.02%)</title><rect x="58.7797%" y="853" width="0.0180%" height="15" fill="rgb(248,47,8)" fg:x="196260" fg:w="60"/><text x="59.0297%" y="863.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (84 samples, 0.03%)</title><rect x="58.7994%" y="853" width="0.0252%" height="15" fill="rgb(218,81,44)" fg:x="196326" fg:w="84"/><text x="59.0494%" y="863.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (75 samples, 0.02%)</title><rect x="58.8246%" y="853" width="0.0225%" height="15" fill="rgb(213,98,6)" fg:x="196410" fg:w="75"/><text x="59.0746%" y="863.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer (70 samples, 0.02%)</title><rect x="58.8261%" y="837" width="0.0210%" height="15" fill="rgb(222,85,22)" fg:x="196415" fg:w="70"/><text x="59.0761%" y="847.50"></text></g><g><title>cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (45 samples, 0.01%)</title><rect x="58.8336%" y="821" width="0.0135%" height="15" fill="rgb(239,46,39)" fg:x="196440" fg:w="45"/><text x="59.0836%" y="831.50"></text></g><g><title>free_tiny (58 samples, 0.02%)</title><rect x="58.8674%" y="837" width="0.0174%" height="15" fill="rgb(237,12,29)" fg:x="196553" fg:w="58"/><text x="59.1174%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (105 samples, 0.03%)</title><rect x="58.8539%" y="853" width="0.0314%" height="15" fill="rgb(214,77,8)" fg:x="196508" fg:w="105"/><text x="59.1039%" y="863.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (355 samples, 0.11%)</title><rect x="58.7794%" y="869" width="0.1063%" height="15" fill="rgb(217,168,37)" fg:x="196259" fg:w="355"/><text x="59.0294%" y="879.50"></text></g><g><title>mach_absolute_time (46 samples, 0.01%)</title><rect x="58.8911%" y="821" width="0.0138%" height="15" fill="rgb(221,217,23)" fg:x="196632" fg:w="46"/><text x="59.1411%" y="831.50"></text></g><g><title>clock_gettime_nsec_np (54 samples, 0.02%)</title><rect x="58.8896%" y="837" width="0.0162%" height="15" fill="rgb(243,229,36)" fg:x="196627" fg:w="54"/><text x="59.1396%" y="847.50"></text></g><g><title>cosmic_text::buffer::Buffer::relayout (428 samples, 0.13%)</title><rect x="58.7779%" y="885" width="0.1282%" height="15" fill="rgb(251,163,40)" fg:x="196254" fg:w="428"/><text x="59.0279%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (64 samples, 0.02%)</title><rect x="58.8869%" y="869" width="0.0192%" height="15" fill="rgb(237,222,12)" fg:x="196618" fg:w="64"/><text x="59.1369%" y="879.50"></text></g><g><title>clock_gettime (60 samples, 0.02%)</title><rect x="58.8881%" y="853" width="0.0180%" height="15" fill="rgb(248,132,6)" fg:x="196622" fg:w="60"/><text x="59.1381%" y="863.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_metrics_and_size (432 samples, 0.13%)</title><rect x="58.7770%" y="901" width="0.1294%" height="15" fill="rgb(227,167,50)" fg:x="196251" fg:w="432"/><text x="59.0270%" y="911.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_size (462 samples, 0.14%)</title><rect x="58.7734%" y="917" width="0.1384%" height="15" fill="rgb(242,84,37)" fg:x="196239" fg:w="462"/><text x="59.0234%" y="927.50"></text></g><g><title>bevy_sprite::render::prepare_sprite_image_bind_groups (40 samples, 0.01%)</title><rect x="58.9381%" y="901" width="0.0120%" height="15" fill="rgb(212,4,50)" fg:x="196789" fg:w="40"/><text x="59.1881%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (86 samples, 0.03%)</title><rect x="58.9345%" y="917" width="0.0258%" height="15" fill="rgb(230,228,32)" fg:x="196777" fg:w="86"/><text x="59.1845%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.03%)</title><rect x="58.9686%" y="917" width="0.0338%" height="15" fill="rgb(248,217,23)" fg:x="196891" fg:w="113"/><text x="59.2186%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (35 samples, 0.01%)</title><rect x="59.0399%" y="901" width="0.0105%" height="15" fill="rgb(238,197,32)" fg:x="197129" fg:w="35"/><text x="59.2899%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (79 samples, 0.02%)</title><rect x="59.0270%" y="917" width="0.0237%" height="15" fill="rgb(236,106,1)" fg:x="197086" fg:w="79"/><text x="59.2770%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (56 samples, 0.02%)</title><rect x="59.0534%" y="917" width="0.0168%" height="15" fill="rgb(219,228,13)" fg:x="197174" fg:w="56"/><text x="59.3034%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (262 samples, 0.08%)</title><rect x="59.0872%" y="917" width="0.0785%" height="15" fill="rgb(238,30,35)" fg:x="197287" fg:w="262"/><text x="59.3372%" y="927.50"></text></g><g><title>__psynch_cvwait (140 samples, 0.04%)</title><rect x="59.1813%" y="869" width="0.0419%" height="15" fill="rgb(236,70,23)" fg:x="197601" fg:w="140"/><text x="59.4313%" y="879.50"></text></g><g><title>_pthread_cond_wait (145 samples, 0.04%)</title><rect x="59.1810%" y="885" width="0.0434%" height="15" fill="rgb(249,104,48)" fg:x="197600" fg:w="145"/><text x="59.4310%" y="895.50"></text></g><g><title>parking::Parker::park (161 samples, 0.05%)</title><rect x="59.1792%" y="917" width="0.0482%" height="15" fill="rgb(254,117,50)" fg:x="197594" fg:w="161"/><text x="59.4292%" y="927.50"></text></g><g><title>parking::Inner::park (161 samples, 0.05%)</title><rect x="59.1792%" y="901" width="0.0482%" height="15" fill="rgb(223,152,4)" fg:x="197594" fg:w="161"/><text x="59.4292%" y="911.50"></text></g><g><title>szone_malloc_should_clear (148 samples, 0.04%)</title><rect x="59.2939%" y="901" width="0.0443%" height="15" fill="rgb(245,6,2)" fg:x="197977" fg:w="148"/><text x="59.5439%" y="911.50"></text></g><g><title>tiny_malloc_should_clear (129 samples, 0.04%)</title><rect x="59.2996%" y="885" width="0.0386%" height="15" fill="rgb(249,150,24)" fg:x="197996" fg:w="129"/><text x="59.5496%" y="895.50"></text></g><g><title>tiny_malloc_from_free_list (98 samples, 0.03%)</title><rect x="59.3089%" y="869" width="0.0294%" height="15" fill="rgb(228,185,42)" fg:x="198027" fg:w="98"/><text x="59.5589%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (350 samples, 0.10%)</title><rect x="59.2343%" y="917" width="0.1048%" height="15" fill="rgb(226,39,33)" fg:x="197778" fg:w="350"/><text x="59.4843%" y="927.50"></text></g><g><title>_free (34 samples, 0.01%)</title><rect x="59.3421%" y="901" width="0.0102%" height="15" fill="rgb(221,166,19)" fg:x="198138" fg:w="34"/><text x="59.5921%" y="911.50"></text></g><g><title>_platform_memset (77 samples, 0.02%)</title><rect x="59.4059%" y="885" width="0.0231%" height="15" fill="rgb(209,109,2)" fg:x="198351" fg:w="77"/><text x="59.6559%" y="895.50"></text></g><g><title>get_tiny_previous_free_msize (38 samples, 0.01%)</title><rect x="59.4682%" y="869" width="0.0114%" height="15" fill="rgb(252,216,26)" fg:x="198559" fg:w="38"/><text x="59.7182%" y="879.50"></text></g><g><title>tiny_free_list_add_ptr (97 samples, 0.03%)</title><rect x="59.4796%" y="869" width="0.0291%" height="15" fill="rgb(227,173,36)" fg:x="198597" fg:w="97"/><text x="59.7296%" y="879.50"></text></g><g><title>free_tiny (487 samples, 0.15%)</title><rect x="59.3661%" y="901" width="0.1459%" height="15" fill="rgb(209,90,7)" fg:x="198218" fg:w="487"/><text x="59.6161%" y="911.50"></text></g><g><title>tiny_free_no_lock (276 samples, 0.08%)</title><rect x="59.4293%" y="885" width="0.0827%" height="15" fill="rgb(250,194,11)" fg:x="198429" fg:w="276"/><text x="59.6793%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (586 samples, 0.18%)</title><rect x="59.3391%" y="917" width="0.1755%" height="15" fill="rgb(220,72,50)" fg:x="198128" fg:w="586"/><text x="59.5891%" y="927.50"></text></g><g><title>szone_realloc (36 samples, 0.01%)</title><rect x="59.5236%" y="869" width="0.0108%" height="15" fill="rgb(222,106,48)" fg:x="198744" fg:w="36"/><text x="59.7736%" y="879.50"></text></g><g><title>_malloc_zone_realloc (47 samples, 0.01%)</title><rect x="59.5206%" y="885" width="0.0141%" height="15" fill="rgb(216,220,45)" fg:x="198734" fg:w="47"/><text x="59.7706%" y="895.50"></text></g><g><title>_realloc (78 samples, 0.02%)</title><rect x="59.5152%" y="901" width="0.0234%" height="15" fill="rgb(234,112,18)" fg:x="198716" fg:w="78"/><text x="59.7652%" y="911.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (81 samples, 0.02%)</title><rect x="59.5146%" y="917" width="0.0243%" height="15" fill="rgb(206,179,9)" fg:x="198714" fg:w="81"/><text x="59.7646%" y="927.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (34 samples, 0.01%)</title><rect x="59.5446%" y="901" width="0.0102%" height="15" fill="rgb(215,115,40)" fg:x="198814" fg:w="34"/><text x="59.7946%" y="911.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (39 samples, 0.01%)</title><rect x="59.5446%" y="917" width="0.0117%" height="15" fill="rgb(222,69,34)" fg:x="198814" fg:w="39"/><text x="59.7946%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (62 samples, 0.02%)</title><rect x="59.5563%" y="917" width="0.0186%" height="15" fill="rgb(209,161,10)" fg:x="198853" fg:w="62"/><text x="59.8063%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (40 samples, 0.01%)</title><rect x="59.5629%" y="901" width="0.0120%" height="15" fill="rgb(217,6,38)" fg:x="198875" fg:w="40"/><text x="59.8129%" y="911.50"></text></g><g><title>clock_gettime (38 samples, 0.01%)</title><rect x="59.5635%" y="885" width="0.0114%" height="15" fill="rgb(229,229,48)" fg:x="198877" fg:w="38"/><text x="59.8135%" y="895.50"></text></g><g><title>clock_gettime_nsec_np (34 samples, 0.01%)</title><rect x="59.5646%" y="869" width="0.0102%" height="15" fill="rgb(225,21,28)" fg:x="198881" fg:w="34"/><text x="59.8146%" y="879.50"></text></g><g><title>_platform_memmove (55 samples, 0.02%)</title><rect x="59.7039%" y="885" width="0.0165%" height="15" fill="rgb(206,33,13)" fg:x="199346" fg:w="55"/><text x="59.9539%" y="895.50"></text></g><g><title>_platform_memset (58 samples, 0.02%)</title><rect x="59.7204%" y="885" width="0.0174%" height="15" fill="rgb(242,178,17)" fg:x="199401" fg:w="58"/><text x="59.9704%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (159 samples, 0.05%)</title><rect x="59.7434%" y="869" width="0.0476%" height="15" fill="rgb(220,162,5)" fg:x="199478" fg:w="159"/><text x="59.9934%" y="879.50"></text></g><g><title>szone_malloc_should_clear (115 samples, 0.03%)</title><rect x="59.7566%" y="853" width="0.0344%" height="15" fill="rgb(210,33,43)" fg:x="199522" fg:w="115"/><text x="60.0066%" y="863.50"></text></g><g><title>tiny_malloc_should_clear (111 samples, 0.03%)</title><rect x="59.7578%" y="837" width="0.0332%" height="15" fill="rgb(216,116,54)" fg:x="199526" fg:w="111"/><text x="60.0078%" y="847.50"></text></g><g><title>tiny_malloc_from_free_list (78 samples, 0.02%)</title><rect x="59.7677%" y="821" width="0.0234%" height="15" fill="rgb(249,92,24)" fg:x="199559" fg:w="78"/><text x="60.0177%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (164 samples, 0.05%)</title><rect x="59.7423%" y="885" width="0.0491%" height="15" fill="rgb(231,189,14)" fg:x="199474" fg:w="164"/><text x="59.9923%" y="895.50"></text></g><g><title>free_tiny (156 samples, 0.05%)</title><rect x="59.7935%" y="885" width="0.0467%" height="15" fill="rgb(230,8,41)" fg:x="199645" fg:w="156"/><text x="60.0435%" y="895.50"></text></g><g><title>tiny_free_no_lock (79 samples, 0.02%)</title><rect x="59.8165%" y="869" width="0.0237%" height="15" fill="rgb(249,7,27)" fg:x="199722" fg:w="79"/><text x="60.0665%" y="879.50"></text></g><g><title>szone_malloc_should_clear (127 samples, 0.04%)</title><rect x="59.8402%" y="885" width="0.0380%" height="15" fill="rgb(232,86,5)" fg:x="199801" fg:w="127"/><text x="60.0902%" y="895.50"></text></g><g><title>tiny_malloc_should_clear (103 samples, 0.03%)</title><rect x="59.8474%" y="869" width="0.0308%" height="15" fill="rgb(224,175,18)" fg:x="199825" fg:w="103"/><text x="60.0974%" y="879.50"></text></g><g><title>tiny_malloc_from_free_list (66 samples, 0.02%)</title><rect x="59.8585%" y="853" width="0.0198%" height="15" fill="rgb(220,129,12)" fg:x="199862" fg:w="66"/><text x="60.1085%" y="863.50"></text></g><g><title>unicode_bidi::BidiInfo::new (1,178 samples, 0.35%)</title><rect x="59.5844%" y="917" width="0.3528%" height="15" fill="rgb(210,19,36)" fg:x="198947" fg:w="1178"/><text x="59.8344%" y="927.50"></text></g><g><title>unicode_bidi::BidiInfo::new_with_data_source (1,159 samples, 0.35%)</title><rect x="59.5901%" y="901" width="0.3471%" height="15" fill="rgb(219,96,14)" fg:x="198966" fg:w="1159"/><text x="59.8401%" y="911.50"></text></g><g><title>unicode_bidi::char_data::bsearch_range_value_table (190 samples, 0.06%)</title><rect x="59.8803%" y="885" width="0.0569%" height="15" fill="rgb(249,106,1)" fg:x="199935" fg:w="190"/><text x="60.1303%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (58 samples, 0.02%)</title><rect x="59.9573%" y="885" width="0.0174%" height="15" fill="rgb(249,155,20)" fg:x="200192" fg:w="58"/><text x="60.2073%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (50 samples, 0.01%)</title><rect x="59.9597%" y="869" width="0.0150%" height="15" fill="rgb(244,168,9)" fg:x="200200" fg:w="50"/><text x="60.2097%" y="879.50"></text></g><g><title>szone_malloc_should_clear (48 samples, 0.01%)</title><rect x="59.9603%" y="853" width="0.0144%" height="15" fill="rgb(216,23,50)" fg:x="200202" fg:w="48"/><text x="60.2103%" y="863.50"></text></g><g><title>tiny_malloc_should_clear (45 samples, 0.01%)</title><rect x="59.9612%" y="837" width="0.0135%" height="15" fill="rgb(224,219,20)" fg:x="200205" fg:w="45"/><text x="60.2112%" y="847.50"></text></g><g><title>szone_malloc_should_clear (75 samples, 0.02%)</title><rect x="60.0082%" y="869" width="0.0225%" height="15" fill="rgb(222,156,15)" fg:x="200362" fg:w="75"/><text x="60.2582%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (74 samples, 0.02%)</title><rect x="60.0085%" y="853" width="0.0222%" height="15" fill="rgb(231,97,17)" fg:x="200363" fg:w="74"/><text x="60.2585%" y="863.50"></text></g><g><title>tiny_malloc_from_free_list (52 samples, 0.02%)</title><rect x="60.0151%" y="837" width="0.0156%" height="15" fill="rgb(218,70,48)" fg:x="200385" fg:w="52"/><text x="60.2651%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (79 samples, 0.02%)</title><rect x="60.0073%" y="885" width="0.0237%" height="15" fill="rgb(212,196,52)" fg:x="200359" fg:w="79"/><text x="60.2573%" y="895.50"></text></g><g><title>free_tiny (73 samples, 0.02%)</title><rect x="60.0343%" y="869" width="0.0219%" height="15" fill="rgb(243,203,18)" fg:x="200449" fg:w="73"/><text x="60.2843%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (86 samples, 0.03%)</title><rect x="60.0310%" y="885" width="0.0258%" height="15" fill="rgb(252,125,41)" fg:x="200438" fg:w="86"/><text x="60.2810%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (43 samples, 0.01%)</title><rect x="60.0690%" y="853" width="0.0129%" height="15" fill="rgb(223,180,33)" fg:x="200565" fg:w="43"/><text x="60.3190%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (42 samples, 0.01%)</title><rect x="60.0693%" y="837" width="0.0126%" height="15" fill="rgb(254,159,46)" fg:x="200566" fg:w="42"/><text x="60.3193%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.01%)</title><rect x="60.0702%" y="821" width="0.0117%" height="15" fill="rgb(254,38,10)" fg:x="200569" fg:w="39"/><text x="60.3202%" y="831.50"></text></g><g><title>&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_bind_group (113 samples, 0.03%)</title><rect x="60.0636%" y="869" width="0.0338%" height="15" fill="rgb(208,217,32)" fg:x="200547" fg:w="113"/><text x="60.3136%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.01%)</title><rect x="60.1151%" y="837" width="0.0117%" height="15" fill="rgb(221,120,13)" fg:x="200719" fg:w="39"/><text x="60.3651%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (40 samples, 0.01%)</title><rect x="60.1151%" y="853" width="0.0120%" height="15" fill="rgb(246,54,52)" fg:x="200719" fg:w="40"/><text x="60.3651%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (52 samples, 0.02%)</title><rect x="60.1118%" y="869" width="0.0156%" height="15" fill="rgb(242,34,25)" fg:x="200708" fg:w="52"/><text x="60.3618%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (57 samples, 0.02%)</title><rect x="60.1370%" y="869" width="0.0171%" height="15" fill="rgb(247,209,9)" fg:x="200792" fg:w="57"/><text x="60.3870%" y="879.50"></text></g><g><title>szone_malloc_should_clear (48 samples, 0.01%)</title><rect x="60.1397%" y="853" width="0.0144%" height="15" fill="rgb(228,71,26)" fg:x="200801" fg:w="48"/><text x="60.3897%" y="863.50"></text></g><g><title>tiny_malloc_should_clear (45 samples, 0.01%)</title><rect x="60.1406%" y="837" width="0.0135%" height="15" fill="rgb(222,145,49)" fg:x="200804" fg:w="45"/><text x="60.3906%" y="847.50"></text></g><g><title>free_tiny (50 samples, 0.01%)</title><rect x="60.1574%" y="853" width="0.0150%" height="15" fill="rgb(218,121,17)" fg:x="200860" fg:w="50"/><text x="60.4074%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (62 samples, 0.02%)</title><rect x="60.1541%" y="869" width="0.0186%" height="15" fill="rgb(244,50,7)" fg:x="200849" fg:w="62"/><text x="60.4041%" y="879.50"></text></g><g><title>wgpu_core::device::resource::Device::create_buffer_binding (39 samples, 0.01%)</title><rect x="60.1729%" y="869" width="0.0117%" height="15" fill="rgb(246,229,37)" fg:x="200912" fg:w="39"/><text x="60.4229%" y="879.50"></text></g><g><title>wgpu_core::device::resource::Device::create_bind_group (433 samples, 0.13%)</title><rect x="60.0606%" y="885" width="0.1297%" height="15" fill="rgb(225,18,5)" fg:x="200537" fg:w="433"/><text x="60.3106%" y="895.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_bind_group (827 samples, 0.25%)</title><rect x="59.9477%" y="901" width="0.2477%" height="15" fill="rgb(213,204,8)" fg:x="200160" fg:w="827"/><text x="60.1977%" y="911.50"></text></g><g><title>szone_malloc_should_clear (37 samples, 0.01%)</title><rect x="60.2026%" y="885" width="0.0111%" height="15" fill="rgb(238,103,6)" fg:x="201011" fg:w="37"/><text x="60.4526%" y="895.50"></text></g><g><title>tiny_malloc_should_clear (34 samples, 0.01%)</title><rect x="60.2035%" y="869" width="0.0102%" height="15" fill="rgb(222,25,35)" fg:x="201014" fg:w="34"/><text x="60.4535%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (45 samples, 0.01%)</title><rect x="60.2005%" y="901" width="0.0135%" height="15" fill="rgb(213,203,35)" fg:x="201004" fg:w="45"/><text x="60.4505%" y="911.50"></text></g><g><title>wgpu::api::device::Device::create_bind_group (949 samples, 0.28%)</title><rect x="59.9378%" y="917" width="0.2842%" height="15" fill="rgb(221,79,53)" fg:x="200127" fg:w="949"/><text x="60.1878%" y="927.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreTexture as wgpu::dispatch::TextureInterface&gt;::create_view (50 samples, 0.01%)</title><rect x="60.2220%" y="901" width="0.0150%" height="15" fill="rgb(243,200,35)" fg:x="201076" fg:w="50"/><text x="60.4720%" y="911.50"></text></g><g><title>wgpu::api::texture::Texture::create_view (51 samples, 0.02%)</title><rect x="60.2220%" y="917" width="0.0153%" height="15" fill="rgb(248,60,25)" fg:x="201076" fg:w="51"/><text x="60.4720%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (42,631 samples, 12.77%)</title><rect x="47.4769%" y="933" width="12.7679%" height="15" fill="rgb(227,53,46)" fg:x="158521" fg:w="42631"/><text x="47.7269%" y="943.50">core::ops::function..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (105 samples, 0.03%)</title><rect x="60.2466%" y="933" width="0.0314%" height="15" fill="rgb(216,120,32)" fg:x="201158" fg:w="105"/><text x="60.4966%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (193 samples, 0.06%)</title><rect x="60.2781%" y="933" width="0.0578%" height="15" fill="rgb(220,134,1)" fg:x="201263" fg:w="193"/><text x="60.5281%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (47 samples, 0.01%)</title><rect x="60.3562%" y="933" width="0.0141%" height="15" fill="rgb(237,168,5)" fg:x="201524" fg:w="47"/><text x="60.6062%" y="943.50"></text></g><g><title>core::ptr::write (93 samples, 0.03%)</title><rect x="60.3820%" y="933" width="0.0279%" height="15" fill="rgb(231,100,33)" fg:x="201610" fg:w="93"/><text x="60.6320%" y="943.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (54 samples, 0.02%)</title><rect x="60.4188%" y="901" width="0.0162%" height="15" fill="rgb(236,177,47)" fg:x="201733" fg:w="54"/><text x="60.6688%" y="911.50"></text></g><g><title>core::slice::sort::stable::sort (83 samples, 0.02%)</title><rect x="60.4134%" y="933" width="0.0249%" height="15" fill="rgb(235,7,49)" fg:x="201715" fg:w="83"/><text x="60.6634%" y="943.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (83 samples, 0.02%)</title><rect x="60.4134%" y="917" width="0.0249%" height="15" fill="rgb(232,119,22)" fg:x="201715" fg:w="83"/><text x="60.6634%" y="927.50"></text></g><g><title>bevy_asset::id::UntypedAssetId::type_id (42 samples, 0.01%)</title><rect x="60.4587%" y="917" width="0.0126%" height="15" fill="rgb(254,73,53)" fg:x="201866" fg:w="42"/><text x="60.7087%" y="927.50"></text></g><g><title>core::slice::sort::unstable::sort (197 samples, 0.06%)</title><rect x="60.4383%" y="933" width="0.0590%" height="15" fill="rgb(251,35,20)" fg:x="201798" fg:w="197"/><text x="60.6883%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (273 samples, 0.08%)</title><rect x="60.5081%" y="933" width="0.0818%" height="15" fill="rgb(241,119,20)" fg:x="202031" fg:w="273"/><text x="60.7581%" y="943.50"></text></g><g><title>glam::f32::neon::vec4::Vec4::new (54 samples, 0.02%)</title><rect x="60.6267%" y="933" width="0.0162%" height="15" fill="rgb(207,102,14)" fg:x="202427" fg:w="54"/><text x="60.8767%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (95 samples, 0.03%)</title><rect x="60.6689%" y="933" width="0.0285%" height="15" fill="rgb(248,201,50)" fg:x="202568" fg:w="95"/><text x="60.9189%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (47 samples, 0.01%)</title><rect x="60.7018%" y="933" width="0.0141%" height="15" fill="rgb(222,185,44)" fg:x="202678" fg:w="47"/><text x="60.9518%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (49 samples, 0.01%)</title><rect x="60.7408%" y="933" width="0.0147%" height="15" fill="rgb(218,107,18)" fg:x="202808" fg:w="49"/><text x="60.9908%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (35 samples, 0.01%)</title><rect x="60.7665%" y="917" width="0.0105%" height="15" fill="rgb(237,177,39)" fg:x="202894" fg:w="35"/><text x="61.0165%" y="927.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (54 samples, 0.02%)</title><rect x="60.7611%" y="933" width="0.0162%" height="15" fill="rgb(246,69,6)" fg:x="202876" fg:w="54"/><text x="61.0111%" y="943.50"></text></g><g><title>hashbrown::util::likely (34 samples, 0.01%)</title><rect x="60.7776%" y="933" width="0.0102%" height="15" fill="rgb(234,208,37)" fg:x="202931" fg:w="34"/><text x="61.0276%" y="943.50"></text></g><g><title>nonmax::NonMaxUsize::get (47 samples, 0.01%)</title><rect x="60.7998%" y="933" width="0.0141%" height="15" fill="rgb(225,4,6)" fg:x="203005" fg:w="47"/><text x="61.0498%" y="943.50"></text></g><g><title>&lt;u32 as radsort::sort::RadixKey&gt;::radix_sort_u32 (54 samples, 0.02%)</title><rect x="60.8219%" y="917" width="0.0162%" height="15" fill="rgb(233,45,0)" fg:x="203079" fg:w="54"/><text x="61.0719%" y="927.50"></text></g><g><title>radsort::sort::RadixKey::radix_sort (109 samples, 0.03%)</title><rect x="60.8166%" y="933" width="0.0326%" height="15" fill="rgb(226,136,5)" fg:x="203061" fg:w="109"/><text x="61.0666%" y="943.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (85 samples, 0.03%)</title><rect x="60.8495%" y="933" width="0.0255%" height="15" fill="rgb(211,91,47)" fg:x="203171" fg:w="85"/><text x="61.0995%" y="943.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (209 samples, 0.06%)</title><rect x="60.8842%" y="933" width="0.0626%" height="15" fill="rgb(242,88,51)" fg:x="203287" fg:w="209"/><text x="61.1342%" y="943.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (52 samples, 0.02%)</title><rect x="60.9468%" y="933" width="0.0156%" height="15" fill="rgb(230,91,28)" fg:x="203496" fg:w="52"/><text x="61.1968%" y="943.50"></text></g><g><title>szone_malloc_should_clear (36 samples, 0.01%)</title><rect x="60.9654%" y="917" width="0.0108%" height="15" fill="rgb(254,186,29)" fg:x="203558" fg:w="36"/><text x="61.2154%" y="927.50"></text></g><g><title>tiny_malloc_should_clear (35 samples, 0.01%)</title><rect x="60.9657%" y="901" width="0.0105%" height="15" fill="rgb(238,6,4)" fg:x="203559" fg:w="35"/><text x="61.2157%" y="911.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (43 samples, 0.01%)</title><rect x="60.9639%" y="933" width="0.0129%" height="15" fill="rgb(221,151,16)" fg:x="203553" fg:w="43"/><text x="61.2139%" y="943.50"></text></g><g><title>tiny_free_list_add_ptr (50 samples, 0.01%)</title><rect x="61.0373%" y="885" width="0.0150%" height="15" fill="rgb(251,143,52)" fg:x="203798" fg:w="50"/><text x="61.2873%" y="895.50"></text></g><g><title>free_tiny (205 samples, 0.06%)</title><rect x="60.9936%" y="917" width="0.0614%" height="15" fill="rgb(206,90,15)" fg:x="203652" fg:w="205"/><text x="61.2436%" y="927.50"></text></g><g><title>tiny_free_no_lock (101 samples, 0.03%)</title><rect x="61.0247%" y="901" width="0.0302%" height="15" fill="rgb(218,35,8)" fg:x="203756" fg:w="101"/><text x="61.2747%" y="911.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (264 samples, 0.08%)</title><rect x="60.9768%" y="933" width="0.0791%" height="15" fill="rgb(239,215,6)" fg:x="203596" fg:w="264"/><text x="61.2268%" y="943.50"></text></g><g><title>wgpu_core::device::resource::Device::create_bind_group (74 samples, 0.02%)</title><rect x="61.0837%" y="901" width="0.0222%" height="15" fill="rgb(245,116,39)" fg:x="203953" fg:w="74"/><text x="61.3337%" y="911.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_bind_group (131 samples, 0.04%)</title><rect x="61.0672%" y="917" width="0.0392%" height="15" fill="rgb(242,65,28)" fg:x="203898" fg:w="131"/><text x="61.3172%" y="927.50"></text></g><g><title>wgpu::api::device::Device::create_bind_group (149 samples, 0.04%)</title><rect x="61.0669%" y="933" width="0.0446%" height="15" fill="rgb(252,132,53)" fg:x="203897" fg:w="149"/><text x="61.3169%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (61,197 samples, 18.33%)</title><rect x="42.7891%" y="965" width="18.3284%" height="15" fill="rgb(224,159,50)" fg:x="142869" fg:w="61197"/><text x="43.0391%" y="975.50">bevy_ecs::schedule::executor:..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (61,113 samples, 18.30%)</title><rect x="42.8143%" y="949" width="18.3033%" height="15" fill="rgb(224,93,4)" fg:x="142953" fg:w="61113"/><text x="43.0643%" y="959.50">bevy_ecs::schedule::executor:..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.05%)</title><rect x="61.1466%" y="933" width="0.0464%" height="15" fill="rgb(208,81,34)" fg:x="204163" fg:w="155"/><text x="61.3966%" y="943.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.02%)</title><rect x="61.1930%" y="933" width="0.0198%" height="15" fill="rgb(233,92,54)" fg:x="204318" fg:w="66"/><text x="61.4430%" y="943.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (45 samples, 0.01%)</title><rect x="61.2128%" y="933" width="0.0135%" height="15" fill="rgb(237,21,14)" fg:x="204384" fg:w="45"/><text x="61.4628%" y="943.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (414 samples, 0.12%)</title><rect x="61.2290%" y="933" width="0.1240%" height="15" fill="rgb(249,128,51)" fg:x="204438" fg:w="414"/><text x="61.4790%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (87 samples, 0.03%)</title><rect x="61.3631%" y="933" width="0.0261%" height="15" fill="rgb(223,129,24)" fg:x="204886" fg:w="87"/><text x="61.6131%" y="943.50"></text></g><g><title>parking::Inner::unpark (40 samples, 0.01%)</title><rect x="61.4021%" y="885" width="0.0120%" height="15" fill="rgb(231,168,25)" fg:x="205016" fg:w="40"/><text x="61.6521%" y="895.50"></text></g><g><title>__psynch_cvsignal (1,018 samples, 0.30%)</title><rect x="61.4179%" y="853" width="0.3049%" height="15" fill="rgb(224,39,20)" fg:x="205069" fg:w="1018"/><text x="61.6679%" y="863.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (1,034 samples, 0.31%)</title><rect x="61.4141%" y="885" width="0.3097%" height="15" fill="rgb(225,152,53)" fg:x="205056" fg:w="1034"/><text x="61.6641%" y="895.50"></text></g><g><title>pthread_cond_signal (1,032 samples, 0.31%)</title><rect x="61.4147%" y="869" width="0.3091%" height="15" fill="rgb(252,17,24)" fg:x="205058" fg:w="1032"/><text x="61.6647%" y="879.50"></text></g><g><title>alloc::task::raw_waker::wake (1,082 samples, 0.32%)</title><rect x="61.4009%" y="901" width="0.3241%" height="15" fill="rgb(250,114,30)" fg:x="205012" fg:w="1082"/><text x="61.6509%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (1,134 samples, 0.34%)</title><rect x="61.4000%" y="917" width="0.3396%" height="15" fill="rgb(229,5,4)" fg:x="205009" fg:w="1134"/><text x="61.6500%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (38 samples, 0.01%)</title><rect x="61.7417%" y="917" width="0.0114%" height="15" fill="rgb(225,176,49)" fg:x="206150" fg:w="38"/><text x="61.9917%" y="927.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (1,183 samples, 0.35%)</title><rect x="61.4000%" y="933" width="0.3543%" height="15" fill="rgb(224,221,49)" fg:x="205009" fg:w="1183"/><text x="61.6500%" y="943.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (83 samples, 0.02%)</title><rect x="61.7543%" y="933" width="0.0249%" height="15" fill="rgb(253,169,27)" fg:x="206192" fg:w="83"/><text x="62.0043%" y="943.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (99 samples, 0.03%)</title><rect x="61.7791%" y="933" width="0.0297%" height="15" fill="rgb(211,206,16)" fg:x="206275" fg:w="99"/><text x="62.0291%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (107 samples, 0.03%)</title><rect x="61.8208%" y="933" width="0.0320%" height="15" fill="rgb(244,87,35)" fg:x="206414" fg:w="107"/><text x="62.0708%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::try_lock (124 samples, 0.04%)</title><rect x="61.8528%" y="933" width="0.0371%" height="15" fill="rgb(246,28,10)" fg:x="206521" fg:w="124"/><text x="62.1028%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (42 samples, 0.01%)</title><rect x="62.0002%" y="917" width="0.0126%" height="15" fill="rgb(229,12,44)" fg:x="207013" fg:w="42"/><text x="62.2502%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (195 samples, 0.06%)</title><rect x="62.0128%" y="917" width="0.0584%" height="15" fill="rgb(210,145,37)" fg:x="207055" fg:w="195"/><text x="62.2628%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (403 samples, 0.12%)</title><rect x="62.0712%" y="917" width="0.1207%" height="15" fill="rgb(227,112,52)" fg:x="207250" fg:w="403"/><text x="62.3212%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (810 samples, 0.24%)</title><rect x="62.1978%" y="917" width="0.2426%" height="15" fill="rgb(238,155,34)" fg:x="207673" fg:w="810"/><text x="62.4478%" y="927.50"></text></g><g><title>&lt;bevy_ecs::world::identifier::WorldId as core::cmp::PartialEq&gt;::eq (40 samples, 0.01%)</title><rect x="62.4404%" y="917" width="0.0120%" height="15" fill="rgb(239,226,36)" fg:x="208483" fg:w="40"/><text x="62.6904%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (398 samples, 0.12%)</title><rect x="62.4524%" y="917" width="0.1192%" height="15" fill="rgb(230,16,23)" fg:x="208523" fg:w="398"/><text x="62.7024%" y="927.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_components_compatible (126 samples, 0.04%)</title><rect x="62.5905%" y="917" width="0.0377%" height="15" fill="rgb(236,171,36)" fg:x="208984" fg:w="126"/><text x="62.8405%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (189 samples, 0.06%)</title><rect x="62.6836%" y="901" width="0.0566%" height="15" fill="rgb(221,22,14)" fg:x="209295" fg:w="189"/><text x="62.9336%" y="911.50"></text></g><g><title>core::cmp::Ord::min (74 samples, 0.02%)</title><rect x="62.7408%" y="901" width="0.0222%" height="15" fill="rgb(242,43,11)" fg:x="209486" fg:w="74"/><text x="62.9908%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (79 samples, 0.02%)</title><rect x="62.7630%" y="901" width="0.0237%" height="15" fill="rgb(232,69,23)" fg:x="209560" fg:w="79"/><text x="63.0130%" y="911.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (52 samples, 0.02%)</title><rect x="62.7876%" y="901" width="0.0156%" height="15" fill="rgb(216,180,54)" fg:x="209642" fg:w="52"/><text x="63.0376%" y="911.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_resources_compatible (606 samples, 0.18%)</title><rect x="62.6282%" y="917" width="0.1815%" height="15" fill="rgb(216,5,24)" fg:x="209110" fg:w="606"/><text x="62.8782%" y="927.50"></text></g><g><title>core::cmp::Ord::min (162 samples, 0.05%)</title><rect x="62.8133%" y="917" width="0.0485%" height="15" fill="rgb(225,89,9)" fg:x="209728" fg:w="162"/><text x="63.0633%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (394 samples, 0.12%)</title><rect x="62.8618%" y="917" width="0.1180%" height="15" fill="rgb(243,75,33)" fg:x="209890" fg:w="394"/><text x="63.1118%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (66 samples, 0.02%)</title><rect x="62.9834%" y="917" width="0.0198%" height="15" fill="rgb(247,141,45)" fg:x="210296" fg:w="66"/><text x="63.2334%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (78 samples, 0.02%)</title><rect x="63.0074%" y="917" width="0.0234%" height="15" fill="rgb(232,177,36)" fg:x="210376" fg:w="78"/><text x="63.2574%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (3,829 samples, 1.15%)</title><rect x="61.8900%" y="933" width="1.1468%" height="15" fill="rgb(219,125,36)" fg:x="206645" fg:w="3829"/><text x="62.1400%" y="943.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (92 samples, 0.03%)</title><rect x="63.0490%" y="917" width="0.0276%" height="15" fill="rgb(227,94,9)" fg:x="210515" fg:w="92"/><text x="63.2990%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::signal_dependents (280 samples, 0.08%)</title><rect x="63.0859%" y="917" width="0.0839%" height="15" fill="rgb(240,34,52)" fg:x="210638" fg:w="280"/><text x="63.3359%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (128 samples, 0.04%)</title><rect x="63.1697%" y="917" width="0.0383%" height="15" fill="rgb(216,45,12)" fg:x="210918" fg:w="128"/><text x="63.4197%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::finish_system_and_handle_dependents (603 samples, 0.18%)</title><rect x="63.0367%" y="933" width="0.1806%" height="15" fill="rgb(246,21,19)" fg:x="210474" fg:w="603"/><text x="63.2867%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (150 samples, 0.04%)</title><rect x="63.2329%" y="917" width="0.0449%" height="15" fill="rgb(213,98,42)" fg:x="211129" fg:w="150"/><text x="63.4829%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (433 samples, 0.13%)</title><rect x="63.2778%" y="917" width="0.1297%" height="15" fill="rgb(250,136,47)" fg:x="211279" fg:w="433"/><text x="63.5278%" y="927.50"></text></g><g><title>&lt;usize as core::ops::bit::BitOrAssign&gt;::bitor_assign (227 samples, 0.07%)</title><rect x="63.4075%" y="917" width="0.0680%" height="15" fill="rgb(251,124,27)" fg:x="211712" fg:w="227"/><text x="63.6575%" y="927.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (503 samples, 0.15%)</title><rect x="63.4755%" y="917" width="0.1506%" height="15" fill="rgb(229,180,14)" fg:x="211939" fg:w="503"/><text x="63.7255%" y="927.50"></text></g><g><title>core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (235 samples, 0.07%)</title><rect x="63.6357%" y="917" width="0.0704%" height="15" fill="rgb(245,216,25)" fg:x="212474" fg:w="235"/><text x="63.8857%" y="927.50"></text></g><g><title>core::num::_&lt;impl usize&gt;::unchecked_add (178 samples, 0.05%)</title><rect x="63.7061%" y="917" width="0.0533%" height="15" fill="rgb(251,43,5)" fg:x="212709" fg:w="178"/><text x="63.9561%" y="927.50"></text></g><g><title>core::ptr::const_ptr::_&lt;impl *const T&gt;::offset_from_unsigned (34 samples, 0.01%)</title><rect x="63.7594%" y="917" width="0.0102%" height="15" fill="rgb(250,128,24)" fg:x="212887" fg:w="34"/><text x="64.0094%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::add (36 samples, 0.01%)</title><rect x="63.7696%" y="917" width="0.0108%" height="15" fill="rgb(217,117,27)" fg:x="212921" fg:w="36"/><text x="64.0196%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::len (252 samples, 0.08%)</title><rect x="63.7804%" y="917" width="0.0755%" height="15" fill="rgb(245,147,4)" fg:x="212957" fg:w="252"/><text x="64.0304%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::simd_block_len (37 samples, 0.01%)</title><rect x="63.8559%" y="917" width="0.0111%" height="15" fill="rgb(242,201,35)" fg:x="213209" fg:w="37"/><text x="64.1059%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::rebuild_active_access (2,178 samples, 0.65%)</title><rect x="63.2173%" y="933" width="0.6523%" height="15" fill="rgb(218,181,1)" fg:x="211077" fg:w="2178"/><text x="63.4673%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::validate_param_unsafe (176 samples, 0.05%)</title><rect x="63.9280%" y="917" width="0.0527%" height="15" fill="rgb(222,6,29)" fg:x="213450" fg:w="176"/><text x="64.1780%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::evaluate_and_fold_conditions (42 samples, 0.01%)</title><rect x="63.9873%" y="917" width="0.0126%" height="15" fill="rgb(208,186,3)" fg:x="213648" fg:w="42"/><text x="64.2373%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (63 samples, 0.02%)</title><rect x="64.0149%" y="885" width="0.0189%" height="15" fill="rgb(216,36,26)" fg:x="213740" fg:w="63"/><text x="64.2649%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::readonly_run_unsafe (160 samples, 0.05%)</title><rect x="64.0101%" y="901" width="0.0479%" height="15" fill="rgb(248,201,23)" fg:x="213724" fg:w="160"/><text x="64.2601%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::evaluate_and_fold_conditions::_{{closure}} (279 samples, 0.08%)</title><rect x="63.9999%" y="917" width="0.0836%" height="15" fill="rgb(251,170,31)" fg:x="213690" fg:w="279"/><text x="64.2499%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (81 samples, 0.02%)</title><rect x="64.0592%" y="901" width="0.0243%" height="15" fill="rgb(207,110,25)" fg:x="213888" fg:w="81"/><text x="64.3092%" y="911.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (34 samples, 0.01%)</title><rect x="64.0835%" y="917" width="0.0102%" height="15" fill="rgb(250,54,15)" fg:x="213969" fg:w="34"/><text x="64.3335%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (319 samples, 0.10%)</title><rect x="64.1000%" y="917" width="0.0955%" height="15" fill="rgb(227,68,33)" fg:x="214024" fg:w="319"/><text x="64.3500%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::should_run (1,143 samples, 0.34%)</title><rect x="63.8696%" y="933" width="0.3423%" height="15" fill="rgb(238,34,41)" fg:x="213255" fg:w="1143"/><text x="64.1196%" y="943.50"></text></g><g><title>nonmax::NonMaxUsize::get (55 samples, 0.02%)</title><rect x="64.1955%" y="917" width="0.0165%" height="15" fill="rgb(220,11,15)" fg:x="214343" fg:w="55"/><text x="64.4455%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (82 samples, 0.02%)</title><rect x="64.2317%" y="917" width="0.0246%" height="15" fill="rgb(246,111,35)" fg:x="214464" fg:w="82"/><text x="64.4817%" y="927.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (71 samples, 0.02%)</title><rect x="64.2656%" y="917" width="0.0213%" height="15" fill="rgb(209,88,53)" fg:x="214577" fg:w="71"/><text x="64.5156%" y="927.50"></text></g><g><title>core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (56 samples, 0.02%)</title><rect x="64.2886%" y="917" width="0.0168%" height="15" fill="rgb(231,185,47)" fg:x="214654" fg:w="56"/><text x="64.5386%" y="927.50"></text></g><g><title>core::num::_&lt;impl usize&gt;::unchecked_add (48 samples, 0.01%)</title><rect x="64.3054%" y="917" width="0.0144%" height="15" fill="rgb(233,154,1)" fg:x="214710" fg:w="48"/><text x="64.5554%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::len (53 samples, 0.02%)</title><rect x="64.3210%" y="917" width="0.0159%" height="15" fill="rgb(225,15,46)" fg:x="214762" fg:w="53"/><text x="64.5710%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (405 samples, 0.12%)</title><rect x="64.2192%" y="933" width="0.1213%" height="15" fill="rgb(211,135,41)" fg:x="214422" fg:w="405"/><text x="64.4692%" y="943.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone_from (154 samples, 0.05%)</title><rect x="64.4177%" y="917" width="0.0461%" height="15" fill="rgb(208,54,0)" fg:x="215085" fg:w="154"/><text x="64.6677%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (90 samples, 0.03%)</title><rect x="64.4698%" y="917" width="0.0270%" height="15" fill="rgb(244,136,14)" fg:x="215259" fg:w="90"/><text x="64.7198%" y="927.50"></text></g><g><title>_platform_memmove (80 samples, 0.02%)</title><rect x="64.4728%" y="901" width="0.0240%" height="15" fill="rgb(241,56,14)" fg:x="215269" fg:w="80"/><text x="64.7228%" y="911.50"></text></g><g><title>fixedbitset::FixedBitSet::as_mut_simd_slice_uninit (69 samples, 0.02%)</title><rect x="64.4989%" y="917" width="0.0207%" height="15" fill="rgb(205,80,24)" fg:x="215356" fg:w="69"/><text x="64.7489%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (601 samples, 0.18%)</title><rect x="64.3405%" y="933" width="0.1800%" height="15" fill="rgb(220,57,4)" fg:x="214827" fg:w="601"/><text x="64.5905%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (125 samples, 0.04%)</title><rect x="64.5205%" y="933" width="0.0374%" height="15" fill="rgb(226,193,50)" fg:x="215428" fg:w="125"/><text x="64.7705%" y="943.50"></text></g><g><title>async_executor::Executor::spawn_inner (74 samples, 0.02%)</title><rect x="64.5816%" y="917" width="0.0222%" height="15" fill="rgb(231,168,22)" fg:x="215632" fg:w="74"/><text x="64.8316%" y="927.50"></text></g><g><title>__psynch_cvsignal (1,716 samples, 0.51%)</title><rect x="64.6379%" y="837" width="0.5139%" height="15" fill="rgb(254,215,14)" fg:x="215820" fg:w="1716"/><text x="64.8879%" y="847.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (1,763 samples, 0.53%)</title><rect x="64.6286%" y="869" width="0.5280%" height="15" fill="rgb(211,115,16)" fg:x="215789" fg:w="1763"/><text x="64.8786%" y="879.50"></text></g><g><title>pthread_cond_signal (1,760 samples, 0.53%)</title><rect x="64.6295%" y="853" width="0.5271%" height="15" fill="rgb(236,210,16)" fg:x="215792" fg:w="1760"/><text x="64.8795%" y="863.50"></text></g><g><title>alloc::task::raw_waker::wake (1,807 samples, 0.54%)</title><rect x="64.6211%" y="885" width="0.5412%" height="15" fill="rgb(221,94,12)" fg:x="215764" fg:w="1807"/><text x="64.8711%" y="895.50"></text></g><g><title>async_executor::State::notify (43 samples, 0.01%)</title><rect x="65.1647%" y="885" width="0.0129%" height="15" fill="rgb(235,218,49)" fg:x="217579" fg:w="43"/><text x="65.4147%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (41 samples, 0.01%)</title><rect x="65.1856%" y="885" width="0.0123%" height="15" fill="rgb(217,114,14)" fg:x="217649" fg:w="41"/><text x="65.4356%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.02%)</title><rect x="65.2012%" y="885" width="0.0192%" height="15" fill="rgb(216,145,22)" fg:x="217701" fg:w="64"/><text x="65.4512%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (43 samples, 0.01%)</title><rect x="65.2246%" y="885" width="0.0129%" height="15" fill="rgb(217,112,39)" fg:x="217779" fg:w="43"/><text x="65.4746%" y="895.50"></text></g><g><title>szone_malloc_should_clear (37 samples, 0.01%)</title><rect x="65.2446%" y="869" width="0.0111%" height="15" fill="rgb(225,85,32)" fg:x="217846" fg:w="37"/><text x="65.4946%" y="879.50"></text></g><g><title>tiny_malloc_should_clear (35 samples, 0.01%)</title><rect x="65.2452%" y="853" width="0.0105%" height="15" fill="rgb(245,209,47)" fg:x="217848" fg:w="35"/><text x="65.4952%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (58 samples, 0.02%)</title><rect x="65.2387%" y="885" width="0.0174%" height="15" fill="rgb(218,220,15)" fg:x="217826" fg:w="58"/><text x="65.4887%" y="895.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (63 samples, 0.02%)</title><rect x="65.2590%" y="869" width="0.0189%" height="15" fill="rgb(222,202,31)" fg:x="217894" fg:w="63"/><text x="65.5090%" y="879.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (62 samples, 0.02%)</title><rect x="65.2593%" y="853" width="0.0186%" height="15" fill="rgb(243,203,4)" fg:x="217895" fg:w="62"/><text x="65.5093%" y="863.50"></text></g><g><title>__psynch_mutexwait (61 samples, 0.02%)</title><rect x="65.2596%" y="837" width="0.0183%" height="15" fill="rgb(237,92,17)" fg:x="217896" fg:w="61"/><text x="65.5096%" y="847.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (89 samples, 0.03%)</title><rect x="65.2560%" y="885" width="0.0267%" height="15" fill="rgb(231,119,7)" fg:x="217884" fg:w="89"/><text x="65.5060%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (2,235 samples, 0.67%)</title><rect x="64.6202%" y="901" width="0.6694%" height="15" fill="rgb(237,82,41)" fg:x="215761" fg:w="2235"/><text x="64.8702%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,319 samples, 0.40%)</title><rect x="65.3168%" y="901" width="0.3950%" height="15" fill="rgb(226,81,48)" fg:x="218087" fg:w="1319"/><text x="65.5668%" y="911.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (3,654 samples, 1.09%)</title><rect x="64.6178%" y="917" width="1.0944%" height="15" fill="rgb(234,70,51)" fg:x="215753" fg:w="3654"/><text x="64.8678%" y="927.50"></text></g><g><title>_malloc_zone_malloc (51 samples, 0.02%)</title><rect x="65.7655%" y="901" width="0.0153%" height="15" fill="rgb(251,86,4)" fg:x="219585" fg:w="51"/><text x="66.0155%" y="911.50"></text></g><g><title>_os_unfair_lock_lock_slow (43 samples, 0.01%)</title><rect x="65.8691%" y="869" width="0.0129%" height="15" fill="rgb(244,144,28)" fg:x="219931" fg:w="43"/><text x="66.1191%" y="879.50"></text></g><g><title>szone_malloc_should_clear (929 samples, 0.28%)</title><rect x="65.7840%" y="901" width="0.2782%" height="15" fill="rgb(232,161,39)" fg:x="219647" fg:w="929"/><text x="66.0340%" y="911.50"></text></g><g><title>tiny_malloc_should_clear (856 samples, 0.26%)</title><rect x="65.8059%" y="885" width="0.2564%" height="15" fill="rgb(247,34,51)" fg:x="219720" fg:w="856"/><text x="66.0559%" y="895.50"></text></g><g><title>tiny_malloc_from_free_list (547 samples, 0.16%)</title><rect x="65.8985%" y="869" width="0.1638%" height="15" fill="rgb(225,132,2)" fg:x="220029" fg:w="547"/><text x="66.1485%" y="879.50"></text></g><g><title>tiny_free_list_add_ptr (81 samples, 0.02%)</title><rect x="66.0380%" y="853" width="0.0243%" height="15" fill="rgb(209,159,44)" fg:x="220495" fg:w="81"/><text x="66.2880%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,018 samples, 0.30%)</title><rect x="65.7628%" y="917" width="0.3049%" height="15" fill="rgb(251,214,1)" fg:x="219576" fg:w="1018"/><text x="66.0128%" y="927.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (3,147 samples, 0.94%)</title><rect x="66.0764%" y="901" width="0.9425%" height="15" fill="rgb(247,84,47)" fg:x="220623" fg:w="3147"/><text x="66.3264%" y="911.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (3,076 samples, 0.92%)</title><rect x="66.0976%" y="885" width="0.9213%" height="15" fill="rgb(240,111,43)" fg:x="220694" fg:w="3076"/><text x="66.3476%" y="895.50"></text></g><g><title>__psynch_mutexwait (3,031 samples, 0.91%)</title><rect x="66.1111%" y="869" width="0.9078%" height="15" fill="rgb(215,214,35)" fg:x="220739" fg:w="3031"/><text x="66.3611%" y="879.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (3,313 samples, 0.99%)</title><rect x="66.0677%" y="917" width="0.9922%" height="15" fill="rgb(248,207,23)" fg:x="220594" fg:w="3313"/><text x="66.3177%" y="927.50"></text></g><g><title>pthread_mutex_lock (135 samples, 0.04%)</title><rect x="67.0195%" y="901" width="0.0404%" height="15" fill="rgb(214,186,4)" fg:x="223772" fg:w="135"/><text x="67.2695%" y="911.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (4,916 samples, 1.47%)</title><rect x="67.0635%" y="901" width="1.4723%" height="15" fill="rgb(220,133,22)" fg:x="223919" fg:w="4916"/><text x="67.3135%" y="911.50"></text></g><g><title>_pthread_mutex_firstfit_wake (4,876 samples, 1.46%)</title><rect x="67.0755%" y="885" width="1.4604%" height="15" fill="rgb(239,134,19)" fg:x="223959" fg:w="4876"/><text x="67.3255%" y="895.50"></text></g><g><title>__psynch_mutexdrop (4,865 samples, 1.46%)</title><rect x="67.0788%" y="869" width="1.4571%" height="15" fill="rgb(250,140,9)" fg:x="223970" fg:w="4865"/><text x="67.3288%" y="879.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (5,058 samples, 1.51%)</title><rect x="67.0599%" y="917" width="1.5149%" height="15" fill="rgb(225,59,14)" fg:x="223907" fg:w="5058"/><text x="67.3099%" y="927.50"></text></g><g><title>pthread_mutex_unlock (130 samples, 0.04%)</title><rect x="68.5358%" y="901" width="0.0389%" height="15" fill="rgb(214,152,51)" fg:x="228835" fg:w="130"/><text x="68.7858%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (13,388 samples, 4.01%)</title><rect x="64.5660%" y="933" width="4.0097%" height="15" fill="rgb(251,227,43)" fg:x="215580" fg:w="13388"/><text x="64.8160%" y="943.50">bevy..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (38 samples, 0.01%)</title><rect x="68.5930%" y="933" width="0.0114%" height="15" fill="rgb(241,96,17)" fg:x="229026" fg:w="38"/><text x="68.8430%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (149 samples, 0.04%)</title><rect x="68.6143%" y="933" width="0.0446%" height="15" fill="rgb(234,198,43)" fg:x="229097" fg:w="149"/><text x="68.8643%" y="943.50"></text></g><g><title>core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (87 samples, 0.03%)</title><rect x="68.6670%" y="933" width="0.0261%" height="15" fill="rgb(220,108,29)" fg:x="229273" fg:w="87"/><text x="68.9170%" y="943.50"></text></g><g><title>DYLD-STUB$$memcpy (65 samples, 0.02%)</title><rect x="68.6964%" y="917" width="0.0195%" height="15" fill="rgb(226,163,33)" fg:x="229371" fg:w="65"/><text x="68.9464%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (482 samples, 0.14%)</title><rect x="68.6931%" y="933" width="0.1444%" height="15" fill="rgb(205,194,45)" fg:x="229360" fg:w="482"/><text x="68.9431%" y="943.50"></text></g><g><title>_platform_memmove (406 samples, 0.12%)</title><rect x="68.7158%" y="917" width="0.1216%" height="15" fill="rgb(206,143,44)" fg:x="229436" fg:w="406"/><text x="68.9658%" y="927.50"></text></g><g><title>core::mem::replace (38 samples, 0.01%)</title><rect x="68.8374%" y="933" width="0.0114%" height="15" fill="rgb(236,136,36)" fg:x="229842" fg:w="38"/><text x="69.0874%" y="943.50"></text></g><g><title>core::num::_&lt;impl usize&gt;::trailing_zeros (142 samples, 0.04%)</title><rect x="68.8488%" y="933" width="0.0425%" height="15" fill="rgb(249,172,42)" fg:x="229880" fg:w="142"/><text x="69.0988%" y="943.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::copy_from_slice (47 samples, 0.01%)</title><rect x="68.9117%" y="933" width="0.0141%" height="15" fill="rgb(216,139,23)" fg:x="230090" fg:w="47"/><text x="69.1617%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (146 samples, 0.04%)</title><rect x="68.9381%" y="933" width="0.0437%" height="15" fill="rgb(207,166,20)" fg:x="230178" fg:w="146"/><text x="69.1881%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::as_mut_simd_slice_uninit (44 samples, 0.01%)</title><rect x="68.9830%" y="933" width="0.0132%" height="15" fill="rgb(210,209,22)" fg:x="230328" fg:w="44"/><text x="69.2330%" y="943.50"></text></g><g><title>DYLD-STUB$$bzero (45 samples, 0.01%)</title><rect x="68.9965%" y="917" width="0.0135%" height="15" fill="rgb(232,118,20)" fg:x="230373" fg:w="45"/><text x="69.2465%" y="927.50"></text></g><g><title>__bzero (72 samples, 0.02%)</title><rect x="69.0099%" y="917" width="0.0216%" height="15" fill="rgb(238,113,42)" fg:x="230418" fg:w="72"/><text x="69.2599%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (700 samples, 0.21%)</title><rect x="68.9962%" y="933" width="0.2096%" height="15" fill="rgb(231,42,5)" fg:x="230372" fg:w="700"/><text x="69.2462%" y="943.50"></text></g><g><title>_platform_memset (582 samples, 0.17%)</title><rect x="69.0315%" y="917" width="0.1743%" height="15" fill="rgb(243,166,24)" fg:x="230490" fg:w="582"/><text x="69.2815%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::insert (45 samples, 0.01%)</title><rect x="69.2169%" y="933" width="0.0135%" height="15" fill="rgb(237,226,12)" fg:x="231109" fg:w="45"/><text x="69.4669%" y="943.50"></text></g><g><title>szone_malloc_should_clear (168 samples, 0.05%)</title><rect x="69.2762%" y="917" width="0.0503%" height="15" fill="rgb(229,133,24)" fg:x="231307" fg:w="168"/><text x="69.5262%" y="927.50"></text></g><g><title>tiny_malloc_should_clear (149 samples, 0.04%)</title><rect x="69.2819%" y="901" width="0.0446%" height="15" fill="rgb(238,33,43)" fg:x="231326" fg:w="149"/><text x="69.5319%" y="911.50"></text></g><g><title>tiny_malloc_from_free_list (92 samples, 0.03%)</title><rect x="69.2990%" y="885" width="0.0276%" height="15" fill="rgb(227,59,38)" fg:x="231383" fg:w="92"/><text x="69.5490%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (184 samples, 0.06%)</title><rect x="69.2720%" y="933" width="0.0551%" height="15" fill="rgb(230,97,0)" fg:x="231293" fg:w="184"/><text x="69.5220%" y="943.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::try_lock (491 samples, 0.15%)</title><rect x="69.3292%" y="933" width="0.1471%" height="15" fill="rgb(250,173,50)" fg:x="231484" fg:w="491"/><text x="69.5792%" y="943.50"></text></g><g><title>pthread_mutex_trylock (474 samples, 0.14%)</title><rect x="69.3343%" y="917" width="0.1420%" height="15" fill="rgb(240,15,50)" fg:x="231501" fg:w="474"/><text x="69.5843%" y="927.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (147 samples, 0.04%)</title><rect x="69.4790%" y="917" width="0.0440%" height="15" fill="rgb(221,93,22)" fg:x="231984" fg:w="147"/><text x="69.7290%" y="927.50"></text></g><g><title>_pthread_mutex_firstfit_wake (144 samples, 0.04%)</title><rect x="69.4799%" y="901" width="0.0431%" height="15" fill="rgb(245,180,53)" fg:x="231987" fg:w="144"/><text x="69.7299%" y="911.50"></text></g><g><title>__psynch_mutexdrop (144 samples, 0.04%)</title><rect x="69.4799%" y="885" width="0.0431%" height="15" fill="rgb(231,88,51)" fg:x="231987" fg:w="144"/><text x="69.7299%" y="895.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (196 samples, 0.06%)</title><rect x="69.4763%" y="933" width="0.0587%" height="15" fill="rgb(240,58,21)" fg:x="231975" fg:w="196"/><text x="69.7263%" y="943.50"></text></g><g><title>pthread_mutex_unlock (40 samples, 0.01%)</title><rect x="69.5230%" y="917" width="0.0120%" height="15" fill="rgb(237,21,10)" fg:x="232131" fg:w="40"/><text x="69.7730%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (28,106 samples, 8.42%)</title><rect x="61.1176%" y="949" width="8.4177%" height="15" fill="rgb(218,43,11)" fg:x="204066" fg:w="28106"/><text x="61.3676%" y="959.50">bevy_ecs::sc..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (43 samples, 0.01%)</title><rect x="69.5353%" y="949" width="0.0129%" height="15" fill="rgb(218,221,29)" fg:x="232172" fg:w="43"/><text x="69.7853%" y="959.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.01%)</title><rect x="69.5481%" y="949" width="0.0126%" height="15" fill="rgb(214,118,42)" fg:x="232215" fg:w="42"/><text x="69.7981%" y="959.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push_or_else (113 samples, 0.03%)</title><rect x="69.5607%" y="949" width="0.0338%" height="15" fill="rgb(251,200,26)" fg:x="232257" fg:w="113"/><text x="69.8107%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (92 samples, 0.03%)</title><rect x="69.5985%" y="949" width="0.0276%" height="15" fill="rgb(237,101,39)" fg:x="232383" fg:w="92"/><text x="69.8485%" y="959.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (28,453 samples, 8.52%)</title><rect x="61.1176%" y="965" width="8.5216%" height="15" fill="rgb(251,117,11)" fg:x="204066" fg:w="28453"/><text x="61.3676%" y="975.50">bevy_ecs::sc..</text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;T&gt;::set_table (44 samples, 0.01%)</title><rect x="69.6754%" y="933" width="0.0132%" height="15" fill="rgb(216,223,23)" fg:x="232640" fg:w="44"/><text x="69.9254%" y="943.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get (132 samples, 0.04%)</title><rect x="69.6641%" y="949" width="0.0395%" height="15" fill="rgb(251,54,12)" fg:x="232602" fg:w="132"/><text x="69.9141%" y="959.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (47 samples, 0.01%)</title><rect x="69.7036%" y="949" width="0.0141%" height="15" fill="rgb(254,176,54)" fg:x="232734" fg:w="47"/><text x="69.9536%" y="959.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get (306 samples, 0.09%)</title><rect x="69.6392%" y="965" width="0.0916%" height="15" fill="rgb(210,32,8)" fg:x="232519" fg:w="306"/><text x="69.8892%" y="975.50"></text></g><g><title>bevy_ecs::query::fetch::_&lt;impl bevy_ecs::query::world_query::WorldQuery for &amp;T&gt;::matches_component_set (52 samples, 0.02%)</title><rect x="69.7635%" y="949" width="0.0156%" height="15" fill="rgb(235,52,38)" fg:x="232934" fg:w="52"/><text x="70.0135%" y="959.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_inner (36 samples, 0.01%)</title><rect x="69.7856%" y="949" width="0.0108%" height="15" fill="rgb(231,4,44)" fg:x="233008" fg:w="36"/><text x="70.0356%" y="959.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_impl (169 samples, 0.05%)</title><rect x="69.7964%" y="949" width="0.0506%" height="15" fill="rgb(249,2,32)" fg:x="233044" fg:w="169"/><text x="70.0464%" y="959.50"></text></g><g><title>_platform_memmove (44 samples, 0.01%)</title><rect x="69.8339%" y="933" width="0.0132%" height="15" fill="rgb(224,65,26)" fg:x="233169" fg:w="44"/><text x="70.0839%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (57 samples, 0.02%)</title><rect x="69.8536%" y="949" width="0.0171%" height="15" fill="rgb(250,73,40)" fg:x="233235" fg:w="57"/><text x="70.1036%" y="959.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_inner (561 samples, 0.17%)</title><rect x="69.7335%" y="965" width="0.1680%" height="15" fill="rgb(253,177,16)" fg:x="232834" fg:w="561"/><text x="69.9835%" y="975.50"></text></g><g><title>_malloc_zone_malloc (53 samples, 0.02%)</title><rect x="69.9270%" y="949" width="0.0159%" height="15" fill="rgb(217,32,34)" fg:x="233480" fg:w="53"/><text x="70.1770%" y="959.50"></text></g><g><title>szone_malloc_should_clear (117 samples, 0.04%)</title><rect x="69.9725%" y="949" width="0.0350%" height="15" fill="rgb(212,7,10)" fg:x="233632" fg:w="117"/><text x="70.2225%" y="959.50"></text></g><g><title>tiny_malloc_should_clear (106 samples, 0.03%)</title><rect x="69.9758%" y="933" width="0.0317%" height="15" fill="rgb(245,89,8)" fg:x="233643" fg:w="106"/><text x="70.2258%" y="943.50"></text></g><g><title>tiny_malloc_from_free_list (91 samples, 0.03%)</title><rect x="69.9803%" y="917" width="0.0273%" height="15" fill="rgb(237,16,53)" fg:x="233658" fg:w="91"/><text x="70.2303%" y="927.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (285 samples, 0.09%)</title><rect x="69.9240%" y="965" width="0.0854%" height="15" fill="rgb(250,204,30)" fg:x="233470" fg:w="285"/><text x="70.1740%" y="975.50"></text></g><g><title>free_tiny (194 samples, 0.06%)</title><rect x="70.0240%" y="949" width="0.0581%" height="15" fill="rgb(208,77,27)" fg:x="233804" fg:w="194"/><text x="70.2740%" y="959.50"></text></g><g><title>tiny_free_no_lock (88 samples, 0.03%)</title><rect x="70.0558%" y="933" width="0.0264%" height="15" fill="rgb(250,204,28)" fg:x="233910" fg:w="88"/><text x="70.3058%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (245 samples, 0.07%)</title><rect x="70.0094%" y="965" width="0.0734%" height="15" fill="rgb(244,63,21)" fg:x="233755" fg:w="245"/><text x="70.2594%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (102,381 samples, 30.66%)</title><rect x="39.4482%" y="981" width="30.6630%" height="15" fill="rgb(236,85,44)" fg:x="131714" fg:w="102381"/><text x="39.6982%" y="991.50">async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closur..</text></g><g><title>thread_local::thread_id::get::_{{closure}} (62 samples, 0.02%)</title><rect x="70.0926%" y="965" width="0.0186%" height="15" fill="rgb(215,98,4)" fg:x="234033" fg:w="62"/><text x="70.3426%" y="975.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (106 samples, 0.03%)</title><rect x="70.1154%" y="981" width="0.0317%" height="15" fill="rgb(235,38,11)" fg:x="234109" fg:w="106"/><text x="70.3654%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;(&amp;bevy_transform::components::transform::Transform,&amp;mut bevy_transform::components::global_transform::GlobalTransform),(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_transform::components::transform::Transform&gt;,bevy_ecs::query::filter::Added&lt;bevy_transform::components::global_transform::GlobalTransform&gt;)&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::ChildOf&gt;,bevy_ecs::query::filter::Without&lt;bevy_ecs::hierarchy::Children&gt;)&gt;::for_each&lt;bevy_transform::systems::sync_simple_transforms::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (37 samples, 0.01%)</title><rect x="70.1564%" y="981" width="0.0111%" height="15" fill="rgb(254,186,25)" fg:x="234246" fg:w="37"/><text x="70.4064%" y="991.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (40 samples, 0.01%)</title><rect x="70.1720%" y="949" width="0.0120%" height="15" fill="rgb(225,55,31)" fg:x="234298" fg:w="40"/><text x="70.4220%" y="959.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (39 samples, 0.01%)</title><rect x="70.1723%" y="933" width="0.0117%" height="15" fill="rgb(211,15,21)" fg:x="234299" fg:w="39"/><text x="70.4223%" y="943.50"></text></g><g><title>__psynch_mutexwait (38 samples, 0.01%)</title><rect x="70.1726%" y="917" width="0.0114%" height="15" fill="rgb(215,187,41)" fg:x="234300" fg:w="38"/><text x="70.4226%" y="927.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (44 samples, 0.01%)</title><rect x="70.1720%" y="965" width="0.0132%" height="15" fill="rgb(248,69,32)" fg:x="234298" fg:w="44"/><text x="70.4220%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;)&gt;::par_fold_init_unchecked_manual&lt;core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;,bevy_ecs::query::par_iter::QueryParIter&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;),()&gt;::for_each_init&lt;bevy_render::view::visibility::check_visibility::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}},core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;&gt;::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;)&gt;::par_fold_init_unchecked_manual&lt;core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;,bevy_ecs::query::par_iter::QueryParIter&lt;(bevy_ecs::entity::Entity,&amp;bevy_render::view::visibility::InheritedVisibility,&amp;mut bevy_render::view::visibility::ViewVisibility,&amp;bevy_render::view::visibility::VisibilityClass,core::option::Option&lt;&amp;bevy_render::view::visibility::render_layers::RenderLayers&gt;,core::option::Option&lt;&amp;bevy_render::primitives::Aabb&gt;,&amp;bevy_transform::components::global_transform::GlobalTransform,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt;),()&gt;::for_each_init&lt;bevy_render::view::visibility::check_visibility::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}},core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;,bevy_platform::hash::NoOpHash&gt;&gt;&gt;::{{closure}},bevy_render::view::visibility::check_visibility::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (69 samples, 0.02%)</title><rect x="70.1675%" y="981" width="0.0207%" height="15" fill="rgb(252,102,52)" fg:x="234283" fg:w="69"/><text x="70.4175%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::query::state::QueryState&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::par_fold_init_unchecked_manual&lt;(),bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each_init&lt;bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}},()&gt;::{{closure}},bevy_ecs::query::par_iter::QueryParIter&lt;bevy_ecs::entity::Entity,(bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::Changed&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_render::mesh::components::Mesh2d&gt;,bevy_ecs::query::filter::Changed&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;,bevy_asset::asset_changed::AssetChanged&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;,bevy_ecs::query::filter::With&lt;bevy_sprite::mesh2d::material::MeshMaterial2d&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;&gt;)&gt;::for_each&lt;bevy_sprite::mesh2d::material::check_entities_needing_specialization&lt;bevy_sprite::mesh2d::color_material::ColorMaterial&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (34 samples, 0.01%)</title><rect x="70.1987%" y="981" width="0.0102%" height="15" fill="rgb(253,140,32)" fg:x="234387" fg:w="34"/><text x="70.4487%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.02%)</title><rect x="70.2088%" y="965" width="0.0210%" height="15" fill="rgb(216,56,42)" fg:x="234421" fg:w="70"/><text x="70.4588%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (81 samples, 0.02%)</title><rect x="70.2328%" y="949" width="0.0243%" height="15" fill="rgb(216,184,14)" fg:x="234501" fg:w="81"/><text x="70.4828%" y="959.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (140 samples, 0.04%)</title><rect x="70.2298%" y="965" width="0.0419%" height="15" fill="rgb(237,187,27)" fg:x="234491" fg:w="140"/><text x="70.4798%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.01%)</title><rect x="70.2571%" y="949" width="0.0147%" height="15" fill="rgb(219,65,3)" fg:x="234582" fg:w="49"/><text x="70.5071%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (102 samples, 0.03%)</title><rect x="70.3014%" y="965" width="0.0305%" height="15" fill="rgb(245,83,25)" fg:x="234730" fg:w="102"/><text x="70.5514%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (145 samples, 0.04%)</title><rect x="70.3319%" y="965" width="0.0434%" height="15" fill="rgb(214,205,45)" fg:x="234832" fg:w="145"/><text x="70.5819%" y="975.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (14,664 samples, 4.39%)</title><rect x="70.3939%" y="949" width="4.3919%" height="15" fill="rgb(241,20,18)" fg:x="235039" fg:w="14664"/><text x="70.6439%" y="959.50">_pthr..</text></g><g><title>_pthread_mutex_firstfit_lock_wait (14,435 samples, 4.32%)</title><rect x="70.4625%" y="933" width="4.3233%" height="15" fill="rgb(232,163,23)" fg:x="235268" fg:w="14435"/><text x="70.7125%" y="943.50">_pthr..</text></g><g><title>__psynch_mutexwait (14,182 samples, 4.25%)</title><rect x="70.5383%" y="917" width="4.2475%" height="15" fill="rgb(214,5,46)" fg:x="235521" fg:w="14182"/><text x="70.7883%" y="927.50">__psy..</text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (15,291 samples, 4.58%)</title><rect x="70.3799%" y="965" width="4.5796%" height="15" fill="rgb(229,78,17)" fg:x="234992" fg:w="15291"/><text x="70.6299%" y="975.50">std::..</text></g><g><title>pthread_mutex_lock (577 samples, 0.17%)</title><rect x="74.7867%" y="949" width="0.1728%" height="15" fill="rgb(248,89,10)" fg:x="249706" fg:w="577"/><text x="75.0367%" y="959.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (4,918 samples, 1.47%)</title><rect x="74.9649%" y="949" width="1.4729%" height="15" fill="rgb(248,54,15)" fg:x="250301" fg:w="4918"/><text x="75.2149%" y="959.50"></text></g><g><title>_pthread_mutex_firstfit_wake (4,874 samples, 1.46%)</title><rect x="74.9781%" y="933" width="1.4598%" height="15" fill="rgb(223,116,6)" fg:x="250345" fg:w="4874"/><text x="75.2281%" y="943.50"></text></g><g><title>__psynch_mutexdrop (4,860 samples, 1.46%)</title><rect x="74.9823%" y="917" width="1.4556%" height="15" fill="rgb(205,125,38)" fg:x="250359" fg:w="4860"/><text x="75.2323%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::{{closure}}&gt;&gt;,async_executor::Executor::spawn_inner&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (21,166 samples, 6.34%)</title><rect x="70.2088%" y="981" width="6.3392%" height="15" fill="rgb(251,78,38)" fg:x="234421" fg:w="21166"/><text x="70.4588%" y="991.50">core::pt..</text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (5,304 samples, 1.59%)</title><rect x="74.9595%" y="965" width="1.5885%" height="15" fill="rgb(253,78,28)" fg:x="250283" fg:w="5304"/><text x="75.2095%" y="975.50"></text></g><g><title>pthread_mutex_unlock (368 samples, 0.11%)</title><rect x="76.4378%" y="949" width="0.1102%" height="15" fill="rgb(209,120,3)" fg:x="255219" fg:w="368"/><text x="76.6878%" y="959.50"></text></g><g><title>core::ptr::write (34 samples, 0.01%)</title><rect x="76.5609%" y="981" width="0.0102%" height="15" fill="rgb(238,229,9)" fg:x="255630" fg:w="34"/><text x="76.8109%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4,196 samples, 1.26%)</title><rect x="76.5714%" y="981" width="1.2567%" height="15" fill="rgb(253,159,18)" fg:x="255665" fg:w="4196"/><text x="76.8214%" y="991.50"></text></g><g><title>parking::Inner::unpark (47 samples, 0.01%)</title><rect x="77.8619%" y="949" width="0.0141%" height="15" fill="rgb(244,42,34)" fg:x="259974" fg:w="47"/><text x="78.1119%" y="959.50"></text></g><g><title>__psynch_cvsignal (6,381 samples, 1.91%)</title><rect x="77.9057%" y="917" width="1.9111%" height="15" fill="rgb(224,8,7)" fg:x="260120" fg:w="6381"/><text x="78.1557%" y="927.50">_..</text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (6,535 samples, 1.96%)</title><rect x="77.8766%" y="949" width="1.9572%" height="15" fill="rgb(210,201,45)" fg:x="260023" fg:w="6535"/><text x="78.1266%" y="959.50">s..</text></g><g><title>pthread_cond_signal (6,517 samples, 1.95%)</title><rect x="77.8820%" y="933" width="1.9518%" height="15" fill="rgb(252,185,21)" fg:x="260041" fg:w="6517"/><text x="78.1320%" y="943.50">p..</text></g><g><title>_pthread_cond_updateval (57 samples, 0.02%)</title><rect x="79.8168%" y="917" width="0.0171%" height="15" fill="rgb(223,131,1)" fg:x="266501" fg:w="57"/><text x="80.0668%" y="927.50"></text></g><g><title>alloc::task::raw_waker::wake (6,673 samples, 2.00%)</title><rect x="77.8482%" y="965" width="1.9986%" height="15" fill="rgb(245,141,16)" fg:x="259928" fg:w="6673"/><text x="78.0982%" y="975.50">a..</text></g><g><title>core::task::wake::Waker::wake (6,677 samples, 2.00%)</title><rect x="77.8482%" y="981" width="1.9998%" height="15" fill="rgb(229,55,45)" fg:x="259928" fg:w="6677"/><text x="78.0982%" y="991.50">c..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (135,421 samples, 40.56%)</title><rect x="39.2931%" y="997" width="40.5584%" height="15" fill="rgb(208,92,15)" fg:x="131196" fg:w="135421"/><text x="39.5431%" y="1007.50">async_task::runnable::Runnable&lt;M&gt;::run</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (38 samples, 0.01%)</title><rect x="79.8515%" y="997" width="0.0114%" height="15" fill="rgb(234,185,47)" fg:x="266617" fg:w="38"/><text x="80.1015%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::_{{closure}} (38 samples, 0.01%)</title><rect x="79.8674%" y="949" width="0.0114%" height="15" fill="rgb(253,104,50)" fg:x="266670" fg:w="38"/><text x="80.1174%" y="959.50"></text></g><g><title>&lt;async_task::task::FallibleTask&lt;T,M&gt; as core::future::future::Future&gt;::poll (127 samples, 0.04%)</title><rect x="79.9165%" y="917" width="0.0380%" height="15" fill="rgb(205,70,7)" fg:x="266834" fg:w="127"/><text x="80.1665%" y="927.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (220 samples, 0.07%)</title><rect x="79.9551%" y="917" width="0.0659%" height="15" fill="rgb(240,178,43)" fg:x="266963" fg:w="220"/><text x="80.2051%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (60 samples, 0.02%)</title><rect x="80.0285%" y="917" width="0.0180%" height="15" fill="rgb(214,112,2)" fg:x="267208" fg:w="60"/><text x="80.2785%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}}::_{{closure}} (605 samples, 0.18%)</title><rect x="79.8919%" y="933" width="0.1812%" height="15" fill="rgb(206,46,17)" fg:x="266752" fg:w="605"/><text x="80.1419%" y="943.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (43 samples, 0.01%)</title><rect x="80.0603%" y="917" width="0.0129%" height="15" fill="rgb(225,220,16)" fg:x="267314" fg:w="43"/><text x="80.3103%" y="927.50"></text></g><g><title>free_tiny (39 samples, 0.01%)</title><rect x="80.0615%" y="901" width="0.0117%" height="15" fill="rgb(238,65,40)" fg:x="267318" fg:w="39"/><text x="80.3115%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.01%)</title><rect x="80.0971%" y="901" width="0.0117%" height="15" fill="rgb(230,151,21)" fg:x="267437" fg:w="39"/><text x="80.3471%" y="911.50"></text></g><g><title>_free (36 samples, 0.01%)</title><rect x="80.1106%" y="901" width="0.0108%" height="15" fill="rgb(218,58,49)" fg:x="267482" fg:w="36"/><text x="80.3606%" y="911.50"></text></g><g><title>_os_unfair_lock_unlock_slow (70 samples, 0.02%)</title><rect x="80.1214%" y="901" width="0.0210%" height="15" fill="rgb(219,179,14)" fg:x="267518" fg:w="70"/><text x="80.3714%" y="911.50"></text></g><g><title>__ulock_wake (68 samples, 0.02%)</title><rect x="80.1220%" y="885" width="0.0204%" height="15" fill="rgb(223,72,1)" fg:x="267520" fg:w="68"/><text x="80.3720%" y="895.50"></text></g><g><title>_szone_free (64 samples, 0.02%)</title><rect x="80.1423%" y="901" width="0.0192%" height="15" fill="rgb(238,126,10)" fg:x="267588" fg:w="64"/><text x="80.3923%" y="911.50"></text></g><g><title>_os_unfair_lock_lock_slow (109 samples, 0.03%)</title><rect x="80.2561%" y="885" width="0.0326%" height="15" fill="rgb(224,206,38)" fg:x="267968" fg:w="109"/><text x="80.5061%" y="895.50"></text></g><g><title>__ulock_wait2 (85 samples, 0.03%)</title><rect x="80.2633%" y="869" width="0.0255%" height="15" fill="rgb(212,201,54)" fg:x="267992" fg:w="85"/><text x="80.5133%" y="879.50"></text></g><g><title>_platform_memset (99 samples, 0.03%)</title><rect x="80.2888%" y="885" width="0.0297%" height="15" fill="rgb(218,154,48)" fg:x="268077" fg:w="99"/><text x="80.5388%" y="895.50"></text></g><g><title>get_tiny_previous_free_msize (41 samples, 0.01%)</title><rect x="80.3996%" y="869" width="0.0123%" height="15" fill="rgb(232,93,24)" fg:x="268447" fg:w="41"/><text x="80.6496%" y="879.50"></text></g><g><title>tiny_free_list_add_ptr (217 samples, 0.06%)</title><rect x="80.4119%" y="869" width="0.0650%" height="15" fill="rgb(245,30,21)" fg:x="268488" fg:w="217"/><text x="80.6619%" y="879.50"></text></g><g><title>free_tiny (1,076 samples, 0.32%)</title><rect x="80.1660%" y="901" width="0.3223%" height="15" fill="rgb(242,148,29)" fg:x="267667" fg:w="1076"/><text x="80.4160%" y="911.50"></text></g><g><title>tiny_free_no_lock (554 samples, 0.17%)</title><rect x="80.3223%" y="885" width="0.1659%" height="15" fill="rgb(244,153,54)" fg:x="268189" fg:w="554"/><text x="80.5723%" y="895.50"></text></g><g><title>tiny_free_list_remove_ptr (38 samples, 0.01%)</title><rect x="80.4769%" y="869" width="0.0114%" height="15" fill="rgb(252,87,22)" fg:x="268705" fg:w="38"/><text x="80.7269%" y="879.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (1,382 samples, 0.41%)</title><rect x="80.0818%" y="917" width="0.4139%" height="15" fill="rgb(210,51,29)" fg:x="267386" fg:w="1382"/><text x="80.3318%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,071 samples, 0.32%)</title><rect x="80.4993%" y="917" width="0.3208%" height="15" fill="rgb(242,136,47)" fg:x="268780" fg:w="1071"/><text x="80.7493%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;core::result::Result&lt;(),alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send&gt;&gt;&gt;&gt; (2,497 samples, 0.75%)</title><rect x="80.0752%" y="933" width="0.7478%" height="15" fill="rgb(238,68,4)" fg:x="267364" fg:w="2497"/><text x="80.3252%" y="943.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,149 samples, 0.94%)</title><rect x="79.8854%" y="949" width="0.9431%" height="15" fill="rgb(242,161,30)" fg:x="266730" fg:w="3149"/><text x="80.1354%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::_{{closure}} (35 samples, 0.01%)</title><rect x="80.8312%" y="949" width="0.0105%" height="15" fill="rgb(218,58,44)" fg:x="269888" fg:w="35"/><text x="81.0812%" y="959.50"></text></g><g><title>async_executor::Ticker::runnable::_{{closure}}::_{{closure}} (56 samples, 0.02%)</title><rect x="80.8506%" y="933" width="0.0168%" height="15" fill="rgb(252,125,32)" fg:x="269953" fg:w="56"/><text x="81.1006%" y="943.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (65 samples, 0.02%)</title><rect x="80.8686%" y="933" width="0.0195%" height="15" fill="rgb(219,178,0)" fg:x="270013" fg:w="65"/><text x="81.1186%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (35 samples, 0.01%)</title><rect x="80.9075%" y="837" width="0.0105%" height="15" fill="rgb(213,152,7)" fg:x="270143" fg:w="35"/><text x="81.1575%" y="847.50"></text></g><g><title>bevy_ecs::storage::blob_array::BlobArray::replace_unchecked (77 samples, 0.02%)</title><rect x="80.9606%" y="789" width="0.0231%" height="15" fill="rgb(249,109,34)" fg:x="270320" fg:w="77"/><text x="81.2106%" y="799.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (58 samples, 0.02%)</title><rect x="80.9662%" y="773" width="0.0174%" height="15" fill="rgb(232,96,21)" fg:x="270339" fg:w="58"/><text x="81.2162%" y="783.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (139 samples, 0.04%)</title><rect x="80.9513%" y="805" width="0.0416%" height="15" fill="rgb(228,27,39)" fg:x="270289" fg:w="139"/><text x="81.2013%" y="815.50"></text></g><g><title>bevy_ecs::world::World::flush (34 samples, 0.01%)</title><rect x="81.0384%" y="805" width="0.0102%" height="15" fill="rgb(211,182,52)" fg:x="270580" fg:w="34"/><text x="81.2884%" y="815.50"></text></g><g><title>bevy_ecs::world::World::flush_components (34 samples, 0.01%)</title><rect x="81.0489%" y="805" width="0.0102%" height="15" fill="rgb(234,178,38)" fg:x="270615" fg:w="34"/><text x="81.2989%" y="815.50"></text></g><g><title>bevy_ecs::world::World::try_insert_batch_with_caller (109 samples, 0.03%)</title><rect x="81.0624%" y="805" width="0.0326%" height="15" fill="rgb(221,111,3)" fg:x="270660" fg:w="109"/><text x="81.3124%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (114 samples, 0.03%)</title><rect x="81.1082%" y="805" width="0.0341%" height="15" fill="rgb(228,175,21)" fg:x="270813" fg:w="114"/><text x="81.3582%" y="815.50"></text></g><g><title>free_tiny (41 samples, 0.01%)</title><rect x="81.1522%" y="789" width="0.0123%" height="15" fill="rgb(228,174,43)" fg:x="270960" fg:w="41"/><text x="81.4022%" y="799.50"></text></g><g><title>bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (790 samples, 0.24%)</title><rect x="80.9285%" y="821" width="0.2366%" height="15" fill="rgb(211,191,0)" fg:x="270213" fg:w="790"/><text x="81.1785%" y="831.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (48 samples, 0.01%)</title><rect x="81.1507%" y="805" width="0.0144%" height="15" fill="rgb(253,117,3)" fg:x="270955" fg:w="48"/><text x="81.4007%" y="815.50"></text></g><g><title>bevy_ecs::world::command_queue::CommandQueue::apply (825 samples, 0.25%)</title><rect x="80.9201%" y="837" width="0.2471%" height="15" fill="rgb(241,127,19)" fg:x="270185" fg:w="825"/><text x="81.1701%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (70 samples, 0.02%)</title><rect x="81.1687%" y="837" width="0.0210%" height="15" fill="rgb(218,103,12)" fg:x="271015" fg:w="70"/><text x="81.4187%" y="847.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedule::apply_deferred (947 samples, 0.28%)</title><rect x="80.9072%" y="853" width="0.2836%" height="15" fill="rgb(236,214,43)" fg:x="270142" fg:w="947"/><text x="81.1572%" y="863.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityWorldMut::despawn_with_caller (44 samples, 0.01%)</title><rect x="81.2175%" y="837" width="0.0132%" height="15" fill="rgb(244,144,19)" fg:x="271178" fg:w="44"/><text x="81.4675%" y="847.50"></text></g><g><title>bevy_ecs::world::World::despawn_with_caller (132 samples, 0.04%)</title><rect x="81.1945%" y="853" width="0.0395%" height="15" fill="rgb(246,188,10)" fg:x="271101" fg:w="132"/><text x="81.4445%" y="863.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityWorldMut::move_entity_from_remove (57 samples, 0.02%)</title><rect x="81.2544%" y="821" width="0.0171%" height="15" fill="rgb(212,193,33)" fg:x="271301" fg:w="57"/><text x="81.5044%" y="831.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityWorldMut::remove_with_caller (76 samples, 0.02%)</title><rect x="81.2520%" y="837" width="0.0228%" height="15" fill="rgb(241,51,29)" fg:x="271293" fg:w="76"/><text x="81.5020%" y="847.50"></text></g><g><title>-[IOGPUMetalCommandBuffer commit] (56 samples, 0.02%)</title><rect x="81.2957%" y="741" width="0.0168%" height="15" fill="rgb(211,58,19)" fg:x="271439" fg:w="56"/><text x="81.5457%" y="751.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer commit] (63 samples, 0.02%)</title><rect x="81.2939%" y="757" width="0.0189%" height="15" fill="rgb(229,111,26)" fg:x="271433" fg:w="63"/><text x="81.5439%" y="767.50"></text></g><g><title>_dispatch_kq_poll (113 samples, 0.03%)</title><rect x="81.3170%" y="661" width="0.0338%" height="15" fill="rgb(213,115,40)" fg:x="271510" fg:w="113"/><text x="81.5670%" y="671.50"></text></g><g><title>kevent_id (113 samples, 0.03%)</title><rect x="81.3170%" y="645" width="0.0338%" height="15" fill="rgb(209,56,44)" fg:x="271510" fg:w="113"/><text x="81.5670%" y="655.50"></text></g><g><title>_dispatch_event_loop_poke (116 samples, 0.03%)</title><rect x="81.3164%" y="677" width="0.0347%" height="15" fill="rgb(230,108,32)" fg:x="271508" fg:w="116"/><text x="81.5664%" y="687.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (133 samples, 0.04%)</title><rect x="81.3158%" y="693" width="0.0398%" height="15" fill="rgb(216,165,31)" fg:x="271506" fg:w="133"/><text x="81.5658%" y="703.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (146 samples, 0.04%)</title><rect x="81.3152%" y="709" width="0.0437%" height="15" fill="rgb(218,122,21)" fg:x="271504" fg:w="146"/><text x="81.5652%" y="719.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (39 samples, 0.01%)</title><rect x="81.3607%" y="709" width="0.0117%" height="15" fill="rgb(223,224,47)" fg:x="271656" fg:w="39"/><text x="81.6107%" y="719.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (192 samples, 0.06%)</title><rect x="81.3152%" y="725" width="0.0575%" height="15" fill="rgb(238,102,44)" fg:x="271504" fg:w="192"/><text x="81.5652%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (213 samples, 0.06%)</title><rect x="81.3137%" y="741" width="0.0638%" height="15" fill="rgb(236,46,40)" fg:x="271499" fg:w="213"/><text x="81.5637%" y="751.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBuffer] (223 samples, 0.07%)</title><rect x="81.3128%" y="757" width="0.0668%" height="15" fill="rgb(247,202,50)" fg:x="271496" fg:w="223"/><text x="81.5628%" y="767.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (293 samples, 0.09%)</title><rect x="81.2939%" y="773" width="0.0878%" height="15" fill="rgb(209,99,20)" fg:x="271433" fg:w="293"/><text x="81.5439%" y="783.50"></text></g><g><title>-[_MTLCommandBuffer presentDrawable:options:] (42 samples, 0.01%)</title><rect x="81.3927%" y="741" width="0.0126%" height="15" fill="rgb(252,27,34)" fg:x="271763" fg:w="42"/><text x="81.6427%" y="751.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (86 samples, 0.03%)</title><rect x="81.3816%" y="773" width="0.0258%" height="15" fill="rgb(215,206,23)" fg:x="271726" fg:w="86"/><text x="81.6316%" y="783.50"></text></g><g><title>-[_MTLCommandBuffer presentDrawable:] (81 samples, 0.02%)</title><rect x="81.3831%" y="757" width="0.0243%" height="15" fill="rgb(212,135,36)" fg:x="271731" fg:w="81"/><text x="81.6331%" y="767.50"></text></g><g><title>&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::present (422 samples, 0.13%)</title><rect x="81.2900%" y="789" width="0.1264%" height="15" fill="rgb(240,189,1)" fg:x="271420" fg:w="422"/><text x="81.5400%" y="799.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::present (444 samples, 0.13%)</title><rect x="81.2891%" y="805" width="0.1330%" height="15" fill="rgb(242,56,20)" fg:x="271417" fg:w="444"/><text x="81.5391%" y="815.50"></text></g><g><title>bevy_render::render_resource::texture::SurfaceTexture::present (486 samples, 0.15%)</title><rect x="81.2768%" y="837" width="0.1456%" height="15" fill="rgb(247,132,33)" fg:x="271376" fg:w="486"/><text x="81.5268%" y="847.50"></text></g><g><title>wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_present (449 samples, 0.13%)</title><rect x="81.2879%" y="821" width="0.1345%" height="15" fill="rgb(208,149,11)" fg:x="271413" fg:w="449"/><text x="81.5379%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="81.4299%" y="821" width="0.0153%" height="15" fill="rgb(211,33,11)" fg:x="271887" fg:w="51"/><text x="81.6799%" y="831.50"></text></g><g><title>async_executor::Ticker::runnable_with::_{{closure}}::_{{closure}} (39 samples, 0.01%)</title><rect x="81.4619%" y="805" width="0.0117%" height="15" fill="rgb(221,29,38)" fg:x="271994" fg:w="39"/><text x="81.7119%" y="815.50"></text></g><g><title>async_executor::State::run::_{{closure}}::_{{closure}} (76 samples, 0.02%)</title><rect x="81.4520%" y="821" width="0.0228%" height="15" fill="rgb(206,182,49)" fg:x="271961" fg:w="76"/><text x="81.7020%" y="831.50"></text></g><g><title>async_executor::State::run::_{{closure}} (57 samples, 0.02%)</title><rect x="81.4748%" y="821" width="0.0171%" height="15" fill="rgb(216,140,1)" fg:x="272037" fg:w="57"/><text x="81.7248%" y="831.50"></text></g><g><title>&lt;bevy_core_pipeline::core_2d::main_opaque_pass_2d_node::MainOpaquePass2dNode as bevy_render::render_graph::node::ViewNode&gt;::run::_{{closure}} (34 samples, 0.01%)</title><rect x="81.5101%" y="773" width="0.0102%" height="15" fill="rgb(232,57,40)" fg:x="272155" fg:w="34"/><text x="81.7601%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.01%)</title><rect x="81.8093%" y="725" width="0.0129%" height="15" fill="rgb(224,186,18)" fg:x="273154" fg:w="43"/><text x="82.0593%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 0.01%)</title><rect x="81.8665%" y="677" width="0.0120%" height="15" fill="rgb(215,121,11)" fg:x="273345" fg:w="40"/><text x="82.1165%" y="687.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_bind_group (141 samples, 0.04%)</title><rect x="81.8504%" y="693" width="0.0422%" height="15" fill="rgb(245,147,10)" fg:x="273291" fg:w="141"/><text x="82.1004%" y="703.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_bind_group (211 samples, 0.06%)</title><rect x="81.8321%" y="709" width="0.0632%" height="15" fill="rgb(238,153,13)" fg:x="273230" fg:w="211"/><text x="82.0821%" y="719.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::material::SetMaterial2dBindGroup&lt;M,_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (374 samples, 0.11%)</title><rect x="81.7899%" y="741" width="0.1120%" height="15" fill="rgb(233,108,0)" fg:x="273089" fg:w="374"/><text x="82.0399%" y="751.50"></text></g><g><title>wgpu::api::render_pass::RenderPass::set_bind_group (266 samples, 0.08%)</title><rect x="81.8222%" y="725" width="0.0797%" height="15" fill="rgb(212,157,17)" fg:x="273197" fg:w="266"/><text x="82.0722%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.02%)</title><rect x="81.9243%" y="725" width="0.0186%" height="15" fill="rgb(225,213,38)" fg:x="273538" fg:w="62"/><text x="82.1743%" y="735.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::mesh::DrawMesh2d as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (215 samples, 0.06%)</title><rect x="81.9019%" y="741" width="0.0644%" height="15" fill="rgb(248,16,11)" fg:x="273463" fg:w="215"/><text x="82.1519%" y="751.50"></text></g><g><title>&lt;bevy_asset::id::AssetId&lt;A&gt; as core::hash::Hash&gt;::hash (109 samples, 0.03%)</title><rect x="82.0486%" y="709" width="0.0326%" height="15" fill="rgb(241,33,4)" fg:x="273953" fg:w="109"/><text x="82.2986%" y="719.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_index_slice (409 samples, 0.12%)</title><rect x="81.9785%" y="741" width="0.1225%" height="15" fill="rgb(222,26,43)" fg:x="273719" fg:w="409"/><text x="82.2285%" y="751.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_slice_in_slab (409 samples, 0.12%)</title><rect x="81.9785%" y="725" width="0.1225%" height="15" fill="rgb(243,29,36)" fg:x="273719" fg:w="409"/><text x="82.2285%" y="735.50"></text></g><g><title>&lt;bevy_asset::assets::AssetIndex as core::cmp::PartialEq&gt;::eq (340 samples, 0.10%)</title><rect x="82.3326%" y="709" width="0.1018%" height="15" fill="rgb(241,9,27)" fg:x="274901" fg:w="340"/><text x="82.5826%" y="719.50"></text></g><g><title>&lt;bevy_asset::id::AssetId&lt;A&gt; as core::hash::Hash&gt;::hash (1,095 samples, 0.33%)</title><rect x="82.4440%" y="709" width="0.3280%" height="15" fill="rgb(205,117,26)" fg:x="275273" fg:w="1095"/><text x="82.6940%" y="719.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (237 samples, 0.07%)</title><rect x="82.7722%" y="709" width="0.0710%" height="15" fill="rgb(209,80,39)" fg:x="276369" fg:w="237"/><text x="83.0222%" y="719.50"></text></g><g><title>hashbrown::control::tag::Tag::full (67 samples, 0.02%)</title><rect x="82.8435%" y="709" width="0.0201%" height="15" fill="rgb(239,155,6)" fg:x="276607" fg:w="67"/><text x="83.0935%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59 samples, 0.02%)</title><rect x="82.8636%" y="709" width="0.0177%" height="15" fill="rgb(212,104,12)" fg:x="276674" fg:w="59"/><text x="83.1136%" y="719.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_slice_in_slab (2,577 samples, 0.77%)</title><rect x="82.1118%" y="725" width="0.7718%" height="15" fill="rgb(234,204,3)" fg:x="274164" fg:w="2577"/><text x="82.3618%" y="735.50"></text></g><g><title>bevy_render::mesh::allocator::MeshAllocator::mesh_vertex_slice (2,587 samples, 0.77%)</title><rect x="82.1097%" y="741" width="0.7748%" height="15" fill="rgb(251,218,7)" fg:x="274157" fg:w="2587"/><text x="82.3597%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (138 samples, 0.04%)</title><rect x="82.9322%" y="741" width="0.0413%" height="15" fill="rgb(221,81,32)" fg:x="276903" fg:w="138"/><text x="83.1822%" y="751.50"></text></g><g><title>&lt;bevy_asset::id::AssetId&lt;A&gt; as core::hash::Hash&gt;::hash (138 samples, 0.04%)</title><rect x="82.9322%" y="725" width="0.0413%" height="15" fill="rgb(214,152,26)" fg:x="276903" fg:w="138"/><text x="83.1822%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (191 samples, 0.06%)</title><rect x="83.0061%" y="725" width="0.0572%" height="15" fill="rgb(223,22,3)" fg:x="277150" fg:w="191"/><text x="83.2561%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (279 samples, 0.08%)</title><rect x="82.9840%" y="741" width="0.0836%" height="15" fill="rgb(207,174,7)" fg:x="277076" fg:w="279"/><text x="83.2340%" y="751.50"></text></g><g><title>_platform_memmove (80 samples, 0.02%)</title><rect x="83.0870%" y="629" width="0.0240%" height="15" fill="rgb(224,19,52)" fg:x="277420" fg:w="80"/><text x="83.3370%" y="639.50"></text></g><g><title>_malloc_zone_realloc (164 samples, 0.05%)</title><rect x="83.0858%" y="661" width="0.0491%" height="15" fill="rgb(228,24,14)" fg:x="277416" fg:w="164"/><text x="83.3358%" y="671.50"></text></g><g><title>szone_realloc (163 samples, 0.05%)</title><rect x="83.0861%" y="645" width="0.0488%" height="15" fill="rgb(230,153,43)" fg:x="277417" fg:w="163"/><text x="83.3361%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (182 samples, 0.05%)</title><rect x="83.0822%" y="725" width="0.0545%" height="15" fill="rgb(231,106,12)" fg:x="277404" fg:w="182"/><text x="83.3322%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (178 samples, 0.05%)</title><rect x="83.0834%" y="709" width="0.0533%" height="15" fill="rgb(215,92,2)" fg:x="277408" fg:w="178"/><text x="83.3334%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (177 samples, 0.05%)</title><rect x="83.0837%" y="693" width="0.0530%" height="15" fill="rgb(249,143,25)" fg:x="277409" fg:w="177"/><text x="83.3337%" y="703.50"></text></g><g><title>_realloc (177 samples, 0.05%)</title><rect x="83.0837%" y="677" width="0.0530%" height="15" fill="rgb(252,7,35)" fg:x="277409" fg:w="177"/><text x="83.3337%" y="687.50"></text></g><g><title>wgpu::api::render_pass::RenderPass::draw_indexed (270 samples, 0.08%)</title><rect x="83.0759%" y="741" width="0.0809%" height="15" fill="rgb(216,69,40)" fg:x="277383" fg:w="270"/><text x="83.3259%" y="751.50"></text></g><g><title>&lt;(C0,C1,C2,C3,C4) as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (5,281 samples, 1.58%)</title><rect x="81.5811%" y="757" width="1.5817%" height="15" fill="rgb(240,36,33)" fg:x="272392" fg:w="5281"/><text x="81.8311%" y="767.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParam&gt;::get_param (83 samples, 0.02%)</title><rect x="83.2221%" y="741" width="0.0249%" height="15" fill="rgb(231,128,14)" fg:x="277871" fg:w="83"/><text x="83.4721%" y="751.50"></text></g><g><title>_platform_memmove (351 samples, 0.11%)</title><rect x="83.2604%" y="741" width="0.1051%" height="15" fill="rgb(245,143,14)" fg:x="277999" fg:w="351"/><text x="83.5104%" y="751.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (60 samples, 0.02%)</title><rect x="83.3661%" y="741" width="0.0180%" height="15" fill="rgb(222,130,28)" fg:x="278352" fg:w="60"/><text x="83.6161%" y="751.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get_manual (50 samples, 0.01%)</title><rect x="83.3913%" y="741" width="0.0150%" height="15" fill="rgb(212,10,48)" fg:x="278436" fg:w="50"/><text x="83.6413%" y="751.50"></text></g><g><title>&lt;bevy_render::render_phase::draw::RenderCommandState&lt;P,C&gt; as bevy_render::render_phase::draw::Draw&lt;P&gt;&gt;::draw (810 samples, 0.24%)</title><rect x="83.1718%" y="757" width="0.2426%" height="15" fill="rgb(254,118,45)" fg:x="277703" fg:w="810"/><text x="83.4218%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (100 samples, 0.03%)</title><rect x="83.4248%" y="741" width="0.0299%" height="15" fill="rgb(228,6,45)" fg:x="278548" fg:w="100"/><text x="83.6748%" y="751.50"></text></g><g><title>_platform_memcmp (69 samples, 0.02%)</title><rect x="83.4341%" y="725" width="0.0207%" height="15" fill="rgb(241,18,35)" fg:x="278579" fg:w="69"/><text x="83.6841%" y="735.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::mesh::SetMesh2dBindGroup&lt;_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (143 samples, 0.04%)</title><rect x="83.4248%" y="757" width="0.0428%" height="15" fill="rgb(227,214,53)" fg:x="278548" fg:w="143"/><text x="83.6748%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (64 samples, 0.02%)</title><rect x="83.4677%" y="741" width="0.0192%" height="15" fill="rgb(224,107,51)" fg:x="278691" fg:w="64"/><text x="83.7177%" y="751.50"></text></g><g><title>_platform_memcmp (52 samples, 0.02%)</title><rect x="83.4713%" y="725" width="0.0156%" height="15" fill="rgb(248,60,28)" fg:x="278703" fg:w="52"/><text x="83.7213%" y="735.50"></text></g><g><title>&lt;bevy_sprite::mesh2d::mesh::SetMesh2dViewBindGroup&lt;_&gt; as bevy_render::render_phase::draw::RenderCommand&lt;P&gt;&gt;::render (107 samples, 0.03%)</title><rect x="83.4677%" y="757" width="0.0320%" height="15" fill="rgb(249,101,23)" fg:x="278691" fg:w="107"/><text x="83.7177%" y="767.50"></text></g><g><title>bevy_render::render_phase::draw_state::TrackedRenderPass::set_bind_group (38 samples, 0.01%)</title><rect x="83.5273%" y="757" width="0.0114%" height="15" fill="rgb(228,51,19)" fg:x="278890" fg:w="38"/><text x="83.7773%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (73 samples, 0.02%)</title><rect x="83.5410%" y="757" width="0.0219%" height="15" fill="rgb(213,20,6)" fg:x="278936" fg:w="73"/><text x="83.7910%" y="767.50"></text></g><g><title>bevy_render::render_phase::BinnedRenderPhase&lt;BPI&gt;::render_batchable_meshes (6,756 samples, 2.02%)</title><rect x="81.5485%" y="773" width="2.0234%" height="15" fill="rgb(212,124,10)" fg:x="272283" fg:w="6756"/><text x="81.7985%" y="783.50">b..</text></g><g><title>_dispatch_kq_poll (89 samples, 0.03%)</title><rect x="83.6204%" y="597" width="0.0267%" height="15" fill="rgb(248,3,40)" fg:x="279201" fg:w="89"/><text x="83.8704%" y="607.50"></text></g><g><title>kevent_id (88 samples, 0.03%)</title><rect x="83.6207%" y="581" width="0.0264%" height="15" fill="rgb(223,178,23)" fg:x="279202" fg:w="88"/><text x="83.8707%" y="591.50"></text></g><g><title>_dispatch_event_loop_poke (92 samples, 0.03%)</title><rect x="83.6198%" y="613" width="0.0276%" height="15" fill="rgb(240,132,45)" fg:x="279199" fg:w="92"/><text x="83.8698%" y="623.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (100 samples, 0.03%)</title><rect x="83.6195%" y="629" width="0.0299%" height="15" fill="rgb(245,164,36)" fg:x="279198" fg:w="100"/><text x="83.8695%" y="639.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (106 samples, 0.03%)</title><rect x="83.6186%" y="645" width="0.0317%" height="15" fill="rgb(231,188,53)" fg:x="279195" fg:w="106"/><text x="83.8686%" y="655.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (142 samples, 0.04%)</title><rect x="83.6180%" y="661" width="0.0425%" height="15" fill="rgb(237,198,39)" fg:x="279193" fg:w="142"/><text x="83.8680%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (166 samples, 0.05%)</title><rect x="83.6168%" y="677" width="0.0497%" height="15" fill="rgb(223,120,35)" fg:x="279189" fg:w="166"/><text x="83.8668%" y="687.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (173 samples, 0.05%)</title><rect x="83.6168%" y="693" width="0.0518%" height="15" fill="rgb(253,107,49)" fg:x="279189" fg:w="173"/><text x="83.8668%" y="703.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (218 samples, 0.07%)</title><rect x="83.6036%" y="725" width="0.0653%" height="15" fill="rgb(216,44,31)" fg:x="279145" fg:w="218"/><text x="83.8536%" y="735.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (175 samples, 0.05%)</title><rect x="83.6165%" y="709" width="0.0524%" height="15" fill="rgb(253,87,21)" fg:x="279188" fg:w="175"/><text x="83.8665%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.01%)</title><rect x="83.6869%" y="709" width="0.0117%" height="15" fill="rgb(226,18,2)" fg:x="279423" fg:w="39"/><text x="83.9369%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (53 samples, 0.02%)</title><rect x="83.7040%" y="693" width="0.0159%" height="15" fill="rgb(216,8,46)" fg:x="279480" fg:w="53"/><text x="83.9540%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (64 samples, 0.02%)</title><rect x="83.7040%" y="709" width="0.0192%" height="15" fill="rgb(226,140,39)" fg:x="279480" fg:w="64"/><text x="83.9540%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (44 samples, 0.01%)</title><rect x="83.7435%" y="709" width="0.0132%" height="15" fill="rgb(221,194,54)" fg:x="279612" fg:w="44"/><text x="83.9935%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (34 samples, 0.01%)</title><rect x="83.7567%" y="709" width="0.0102%" height="15" fill="rgb(213,92,11)" fg:x="279656" fg:w="34"/><text x="84.0067%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (34 samples, 0.01%)</title><rect x="83.7758%" y="709" width="0.0102%" height="15" fill="rgb(229,162,46)" fg:x="279720" fg:w="34"/><text x="84.0258%" y="719.50"></text></g><g><title>_malloc_zone_realloc (48 samples, 0.01%)</title><rect x="83.7959%" y="645" width="0.0144%" height="15" fill="rgb(214,111,36)" fg:x="279787" fg:w="48"/><text x="84.0459%" y="655.50"></text></g><g><title>szone_realloc (48 samples, 0.01%)</title><rect x="83.7959%" y="629" width="0.0144%" height="15" fill="rgb(207,6,21)" fg:x="279787" fg:w="48"/><text x="84.0459%" y="639.50"></text></g><g><title>_realloc (60 samples, 0.02%)</title><rect x="83.7950%" y="661" width="0.0180%" height="15" fill="rgb(213,127,38)" fg:x="279784" fg:w="60"/><text x="84.0450%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (72 samples, 0.02%)</title><rect x="83.7917%" y="693" width="0.0216%" height="15" fill="rgb(238,118,32)" fg:x="279773" fg:w="72"/><text x="84.0417%" y="703.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (61 samples, 0.02%)</title><rect x="83.7950%" y="677" width="0.0183%" height="15" fill="rgb(240,139,39)" fg:x="279784" fg:w="61"/><text x="84.0450%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (91 samples, 0.03%)</title><rect x="83.7869%" y="709" width="0.0273%" height="15" fill="rgb(235,10,37)" fg:x="279757" fg:w="91"/><text x="84.0369%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (97 samples, 0.03%)</title><rect x="83.8160%" y="709" width="0.0291%" height="15" fill="rgb(249,171,38)" fg:x="279854" fg:w="97"/><text x="84.0660%" y="719.50"></text></g><g><title>_platform_memmove (70 samples, 0.02%)</title><rect x="83.8241%" y="693" width="0.0210%" height="15" fill="rgb(242,144,32)" fg:x="279881" fg:w="70"/><text x="84.0741%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&gt; (41 samples, 0.01%)</title><rect x="83.8540%" y="709" width="0.0123%" height="15" fill="rgb(217,117,21)" fg:x="279981" fg:w="41"/><text x="84.1040%" y="719.50"></text></g><g><title>free_medium (60 samples, 0.02%)</title><rect x="83.8804%" y="709" width="0.0180%" height="15" fill="rgb(249,87,1)" fg:x="280069" fg:w="60"/><text x="84.1304%" y="719.50"></text></g><g><title>mvm_madvise_free_plat (57 samples, 0.02%)</title><rect x="83.8813%" y="693" width="0.0171%" height="15" fill="rgb(248,196,48)" fg:x="280072" fg:w="57"/><text x="84.1313%" y="703.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (57 samples, 0.02%)</title><rect x="83.8813%" y="677" width="0.0171%" height="15" fill="rgb(251,206,33)" fg:x="280072" fg:w="57"/><text x="84.1313%" y="687.50"></text></g><g><title>madvise (57 samples, 0.02%)</title><rect x="83.8813%" y="661" width="0.0171%" height="15" fill="rgb(232,141,28)" fg:x="280072" fg:w="57"/><text x="84.1313%" y="671.50"></text></g><g><title>wgpu_core::command::CommandBuffer::insert_barriers_from_scope (127 samples, 0.04%)</title><rect x="83.9121%" y="709" width="0.0380%" height="15" fill="rgb(209,167,14)" fg:x="280175" fg:w="127"/><text x="84.1621%" y="719.50"></text></g><g><title>_dispatch_kq_poll (78 samples, 0.02%)</title><rect x="83.9624%" y="581" width="0.0234%" height="15" fill="rgb(225,11,50)" fg:x="280343" fg:w="78"/><text x="84.2124%" y="591.50"></text></g><g><title>kevent_id (78 samples, 0.02%)</title><rect x="83.9624%" y="565" width="0.0234%" height="15" fill="rgb(209,50,20)" fg:x="280343" fg:w="78"/><text x="84.2124%" y="575.50"></text></g><g><title>_dispatch_event_loop_poke (80 samples, 0.02%)</title><rect x="83.9621%" y="597" width="0.0240%" height="15" fill="rgb(212,17,46)" fg:x="280342" fg:w="80"/><text x="84.2121%" y="607.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (93 samples, 0.03%)</title><rect x="83.9618%" y="613" width="0.0279%" height="15" fill="rgb(216,101,39)" fg:x="280341" fg:w="93"/><text x="84.2118%" y="623.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (99 samples, 0.03%)</title><rect x="83.9612%" y="629" width="0.0297%" height="15" fill="rgb(212,228,48)" fg:x="280339" fg:w="99"/><text x="84.2112%" y="639.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (129 samples, 0.04%)</title><rect x="83.9609%" y="645" width="0.0386%" height="15" fill="rgb(250,6,50)" fg:x="280338" fg:w="129"/><text x="84.2109%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (148 samples, 0.04%)</title><rect x="83.9600%" y="661" width="0.0443%" height="15" fill="rgb(250,160,48)" fg:x="280335" fg:w="148"/><text x="84.2100%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (156 samples, 0.05%)</title><rect x="83.9600%" y="677" width="0.0467%" height="15" fill="rgb(244,216,33)" fg:x="280335" fg:w="156"/><text x="84.2100%" y="687.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (186 samples, 0.06%)</title><rect x="83.9513%" y="709" width="0.0557%" height="15" fill="rgb(207,157,5)" fg:x="280306" fg:w="186"/><text x="84.2013%" y="719.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (157 samples, 0.05%)</title><rect x="83.9600%" y="693" width="0.0470%" height="15" fill="rgb(228,199,8)" fg:x="280335" fg:w="157"/><text x="84.2100%" y="703.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (119 samples, 0.04%)</title><rect x="84.0071%" y="709" width="0.0356%" height="15" fill="rgb(227,80,20)" fg:x="280492" fg:w="119"/><text x="84.2571%" y="719.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (100 samples, 0.03%)</title><rect x="84.0433%" y="709" width="0.0299%" height="15" fill="rgb(222,9,33)" fg:x="280613" fg:w="100"/><text x="84.2933%" y="719.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (43 samples, 0.01%)</title><rect x="84.0801%" y="677" width="0.0129%" height="15" fill="rgb(239,44,28)" fg:x="280736" fg:w="43"/><text x="84.3301%" y="687.50"></text></g><g><title>AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (40 samples, 0.01%)</title><rect x="84.1325%" y="629" width="0.0120%" height="15" fill="rgb(249,187,43)" fg:x="280911" fg:w="40"/><text x="84.3825%" y="639.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (36 samples, 0.01%)</title><rect x="84.1337%" y="613" width="0.0108%" height="15" fill="rgb(216,141,28)" fg:x="280915" fg:w="36"/><text x="84.3837%" y="623.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (48 samples, 0.01%)</title><rect x="84.1616%" y="597" width="0.0144%" height="15" fill="rgb(230,154,53)" fg:x="281008" fg:w="48"/><text x="84.4116%" y="607.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (100 samples, 0.03%)</title><rect x="84.1466%" y="613" width="0.0299%" height="15" fill="rgb(227,82,4)" fg:x="280958" fg:w="100"/><text x="84.3966%" y="623.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass() (167 samples, 0.05%)</title><rect x="84.1445%" y="629" width="0.0500%" height="15" fill="rgb(220,107,16)" fg:x="280951" fg:w="167"/><text x="84.3945%" y="639.50"></text></g><g><title>__bzero (38 samples, 0.01%)</title><rect x="84.1948%" y="629" width="0.0114%" height="15" fill="rgb(207,187,2)" fg:x="281119" fg:w="38"/><text x="84.4448%" y="639.50"></text></g><g><title>-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (405 samples, 0.12%)</title><rect x="84.0939%" y="645" width="0.1213%" height="15" fill="rgb(210,162,52)" fg:x="280782" fg:w="405"/><text x="84.3439%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (411 samples, 0.12%)</title><rect x="84.0930%" y="661" width="0.1231%" height="15" fill="rgb(217,216,49)" fg:x="280779" fg:w="411"/><text x="84.3430%" y="671.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (430 samples, 0.13%)</title><rect x="84.0930%" y="677" width="0.1288%" height="15" fill="rgb(218,146,49)" fg:x="280779" fg:w="430"/><text x="84.3430%" y="687.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (522 samples, 0.16%)</title><rect x="84.0798%" y="693" width="0.1563%" height="15" fill="rgb(216,55,40)" fg:x="280735" fg:w="522"/><text x="84.3298%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo::start (543 samples, 0.16%)</title><rect x="84.0798%" y="709" width="0.1626%" height="15" fill="rgb(208,196,21)" fg:x="280735" fg:w="543"/><text x="84.3298%" y="719.50"></text></g><g><title>&lt;deduplicated_symbol&gt; (202 samples, 0.06%)</title><rect x="84.5261%" y="645" width="0.0605%" height="15" fill="rgb(242,117,42)" fg:x="282225" fg:w="202"/><text x="84.7761%" y="655.50"></text></g><g><title>AGX::DataBufferAllocator&lt;34ul&gt;::grow(unsigned int, bool) (44 samples, 0.01%)</title><rect x="84.5869%" y="645" width="0.0132%" height="15" fill="rgb(210,11,23)" fg:x="282428" fg:w="44"/><text x="84.8369%" y="655.50"></text></g><g><title>IOGPUResourceListAddResource (41 samples, 0.01%)</title><rect x="84.6189%" y="629" width="0.0123%" height="15" fill="rgb(217,110,2)" fg:x="282535" fg:w="41"/><text x="84.8689%" y="639.50"></text></g><g><title>ioGPUResourceListAddHashValue (79 samples, 0.02%)</title><rect x="84.6746%" y="613" width="0.0237%" height="15" fill="rgb(229,77,54)" fg:x="282721" fg:w="79"/><text x="84.9246%" y="623.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindFragmentBufferResource(unsigned int, bool, bool) (345 samples, 0.10%)</title><rect x="84.6010%" y="645" width="0.1033%" height="15" fill="rgb(218,53,16)" fg:x="282475" fg:w="345"/><text x="84.8510%" y="655.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (244 samples, 0.07%)</title><rect x="84.6312%" y="629" width="0.0731%" height="15" fill="rgb(215,38,13)" fg:x="282576" fg:w="244"/><text x="84.8812%" y="639.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindResource(_IOGPUMetalResource const*, ResourceGroupBindingType, unsigned int, unsigned int) (47 samples, 0.01%)</title><rect x="84.7157%" y="629" width="0.0141%" height="15" fill="rgb(235,42,18)" fg:x="282858" fg:w="47"/><text x="84.9657%" y="639.50"></text></g><g><title>IOGPUResourceListAddResource (84 samples, 0.03%)</title><rect x="84.7309%" y="629" width="0.0252%" height="15" fill="rgb(219,66,54)" fg:x="282909" fg:w="84"/><text x="84.9809%" y="639.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindFragmentTextureResources(unsigned int, bool, bool) (174 samples, 0.05%)</title><rect x="84.7043%" y="645" width="0.0521%" height="15" fill="rgb(222,205,4)" fg:x="282820" fg:w="174"/><text x="84.9543%" y="655.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitFragmentProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::FragmentProgramVariant const*, AGX::G15::RenderPipeline const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::FragmentDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, AGX::G15::Framebuffer const&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*) (603 samples, 0.18%)</title><rect x="84.7603%" y="645" width="0.1806%" height="15" fill="rgb(227,213,46)" fg:x="283007" fg:w="603"/><text x="85.0103%" y="655.50"></text></g><g><title>_platform_memmove (169 samples, 0.05%)</title><rect x="84.8903%" y="629" width="0.0506%" height="15" fill="rgb(250,145,42)" fg:x="283441" fg:w="169"/><text x="85.1403%" y="639.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration&lt;eAGXDataBufferAllocFlags&gt; const&amp;) (601 samples, 0.18%)</title><rect x="84.9409%" y="645" width="0.1800%" height="15" fill="rgb(219,15,2)" fg:x="283610" fg:w="601"/><text x="85.1909%" y="655.50"></text></g><g><title>_platform_memmove (170 samples, 0.05%)</title><rect x="85.0700%" y="629" width="0.0509%" height="15" fill="rgb(231,181,52)" fg:x="284041" fg:w="170"/><text x="85.3200%" y="639.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt; const&amp;) (274 samples, 0.08%)</title><rect x="85.1209%" y="645" width="0.0821%" height="15" fill="rgb(235,1,42)" fg:x="284211" fg:w="274"/><text x="85.3709%" y="655.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (2,964 samples, 0.89%)</title><rect x="84.3341%" y="661" width="0.8877%" height="15" fill="rgb(249,88,27)" fg:x="281584" fg:w="2964"/><text x="84.5841%" y="671.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeISPPrimitiveType(MTLPrimitiveType) (80 samples, 0.02%)</title><rect x="85.2218%" y="661" width="0.0240%" height="15" fill="rgb(235,145,16)" fg:x="284548" fg:w="80"/><text x="85.4718%" y="671.50"></text></g><g><title>AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitFragmentProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::FragmentProgramVariant const*, AGX::G15::RenderPipeline const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::FragmentDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, AGX::G15::Framebuffer const&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*) (39 samples, 0.01%)</title><rect x="85.2479%" y="661" width="0.0117%" height="15" fill="rgb(237,114,19)" fg:x="284635" fg:w="39"/><text x="85.4979%" y="671.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:] (3,334 samples, 1.00%)</title><rect x="84.2694%" y="677" width="0.9985%" height="15" fill="rgb(238,51,50)" fg:x="281368" fg:w="3334"/><text x="84.5194%" y="687.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H) as objc::message::MessageArguments&gt;::invoke (3,385 samples, 1.01%)</title><rect x="84.2694%" y="693" width="1.0138%" height="15" fill="rgb(205,194,25)" fg:x="281368" fg:w="3385"/><text x="84.5194%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.02%)</title><rect x="85.2841%" y="693" width="0.0207%" height="15" fill="rgb(215,203,17)" fg:x="284756" fg:w="69"/><text x="85.5341%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (36 samples, 0.01%)</title><rect x="85.3156%" y="693" width="0.0108%" height="15" fill="rgb(233,112,49)" fg:x="284861" fg:w="36"/><text x="85.5656%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106 samples, 0.03%)</title><rect x="85.3326%" y="693" width="0.0317%" height="15" fill="rgb(241,130,26)" fg:x="284918" fg:w="106"/><text x="85.5826%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (180 samples, 0.05%)</title><rect x="85.3782%" y="677" width="0.0539%" height="15" fill="rgb(252,223,19)" fg:x="285070" fg:w="180"/><text x="85.6282%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (69 samples, 0.02%)</title><rect x="85.4438%" y="677" width="0.0207%" height="15" fill="rgb(211,95,25)" fg:x="285289" fg:w="69"/><text x="85.6938%" y="687.50"></text></g><g><title>wgpu_core::command::bind::Binder::check_compatibility (320 samples, 0.10%)</title><rect x="85.3782%" y="693" width="0.0958%" height="15" fill="rgb(251,182,27)" fg:x="285070" fg:w="320"/><text x="85.6282%" y="703.50"></text></g><g><title>wgpu_core::command::render::draw_indexed (4,183 samples, 1.25%)</title><rect x="84.2455%" y="709" width="1.2528%" height="15" fill="rgb(238,24,4)" fg:x="281288" fg:w="4183"/><text x="84.4955%" y="719.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentSamplerState:atIndex:] (417 samples, 0.12%)</title><rect x="85.5276%" y="693" width="0.1249%" height="15" fill="rgb(224,220,25)" fg:x="285569" fg:w="417"/><text x="85.7776%" y="703.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentTexture:atIndex:] (37 samples, 0.01%)</title><rect x="85.6525%" y="693" width="0.0111%" height="15" fill="rgb(239,133,26)" fg:x="285986" fg:w="37"/><text x="85.9025%" y="703.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexTexture:atIndex:] (56 samples, 0.02%)</title><rect x="85.6783%" y="693" width="0.0168%" height="15" fill="rgb(211,94,48)" fg:x="286072" fg:w="56"/><text x="85.9283%" y="703.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentSamplerState:atIndex:] (196 samples, 0.06%)</title><rect x="85.6977%" y="677" width="0.0587%" height="15" fill="rgb(239,87,6)" fg:x="286137" fg:w="196"/><text x="85.9477%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentTexture:atIndex:] (344 samples, 0.10%)</title><rect x="85.7564%" y="677" width="0.1030%" height="15" fill="rgb(227,62,0)" fg:x="286333" fg:w="344"/><text x="86.0064%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexSamplerState:atIndex:] (81 samples, 0.02%)</title><rect x="85.8595%" y="677" width="0.0243%" height="15" fill="rgb(211,226,4)" fg:x="286677" fg:w="81"/><text x="86.1095%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexTexture:atIndex:] (189 samples, 0.06%)</title><rect x="85.8837%" y="677" width="0.0566%" height="15" fill="rgb(253,38,52)" fg:x="286758" fg:w="189"/><text x="86.1337%" y="687.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setResource(IOGPUMetalResource const*, ResourceGroupBindingType, unsigned int) (35 samples, 0.01%)</title><rect x="85.9298%" y="661" width="0.0105%" height="15" fill="rgb(229,126,40)" fg:x="286912" fg:w="35"/><text x="86.1798%" y="671.50"></text></g><g><title>DYLD-STUB$$objc_msgSend (46 samples, 0.01%)</title><rect x="85.9403%" y="677" width="0.0138%" height="15" fill="rgb(229,165,44)" fg:x="286947" fg:w="46"/><text x="86.1903%" y="687.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (1,651 samples, 0.49%)</title><rect x="85.6950%" y="693" width="0.4945%" height="15" fill="rgb(247,95,47)" fg:x="286128" fg:w="1651"/><text x="85.9450%" y="703.50"></text></g><g><title>objc_msgSend (786 samples, 0.24%)</title><rect x="85.9541%" y="677" width="0.2354%" height="15" fill="rgb(216,140,30)" fg:x="286993" fg:w="786"/><text x="86.2041%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setFragmentBuffer:offset:atIndex:] (211 samples, 0.06%)</title><rect x="86.1895%" y="677" width="0.0632%" height="15" fill="rgb(246,214,8)" fg:x="287779" fg:w="211"/><text x="86.4395%" y="687.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setResource(IOGPUMetalResource const*, ResourceGroupBindingType, unsigned int) (48 samples, 0.01%)</title><rect x="86.2383%" y="661" width="0.0144%" height="15" fill="rgb(227,224,15)" fg:x="287942" fg:w="48"/><text x="86.4883%" y="671.50"></text></g><g><title>-[AGXG15GFamilyRenderContext setVertexBuffer:offset:atIndex:] (367 samples, 0.11%)</title><rect x="86.2527%" y="677" width="0.1099%" height="15" fill="rgb(233,175,4)" fg:x="287990" fg:w="367"/><text x="86.5027%" y="687.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setResource(IOGPUMetalResource const*, ResourceGroupBindingType, unsigned int) (109 samples, 0.03%)</title><rect x="86.3300%" y="661" width="0.0326%" height="15" fill="rgb(221,66,45)" fg:x="288248" fg:w="109"/><text x="86.5800%" y="671.50"></text></g><g><title>DYLD-STUB$$objc_msgSend (43 samples, 0.01%)</title><rect x="86.3626%" y="677" width="0.0129%" height="15" fill="rgb(221,178,18)" fg:x="288357" fg:w="43"/><text x="86.6126%" y="687.50"></text></g><g><title>&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (712 samples, 0.21%)</title><rect x="86.1895%" y="693" width="0.2132%" height="15" fill="rgb(213,81,29)" fg:x="287779" fg:w="712"/><text x="86.4395%" y="703.50"></text></g><g><title>objc_msgSend (91 samples, 0.03%)</title><rect x="86.3755%" y="677" width="0.0273%" height="15" fill="rgb(220,89,49)" fg:x="288400" fg:w="91"/><text x="86.6255%" y="687.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::set_bind_group (110 samples, 0.03%)</title><rect x="86.4027%" y="693" width="0.0329%" height="15" fill="rgb(227,60,33)" fg:x="288491" fg:w="110"/><text x="86.6527%" y="703.50"></text></g><g><title>&lt;wgpu_hal::metal::BindGroup as wgpu_hal::dynamic::DynResource&gt;::as_any (76 samples, 0.02%)</title><rect x="86.4396%" y="677" width="0.0228%" height="15" fill="rgb(205,113,12)" fg:x="288614" fg:w="76"/><text x="86.6896%" y="687.50"></text></g><g><title>&lt;R as wgpu_hal::dynamic::DynResourceExt&gt;::expect_downcast_ref (114 samples, 0.03%)</title><rect x="86.4357%" y="693" width="0.0341%" height="15" fill="rgb(211,32,1)" fg:x="288601" fg:w="114"/><text x="86.6857%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="86.4698%" y="693" width="0.0171%" height="15" fill="rgb(246,2,12)" fg:x="288715" fg:w="57"/><text x="86.7198%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.02%)</title><rect x="86.4869%" y="693" width="0.0201%" height="15" fill="rgb(243,37,27)" fg:x="288772" fg:w="67"/><text x="86.7369%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (54 samples, 0.02%)</title><rect x="86.5121%" y="693" width="0.0162%" height="15" fill="rgb(248,211,31)" fg:x="288856" fg:w="54"/><text x="86.7621%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (81 samples, 0.02%)</title><rect x="86.5345%" y="693" width="0.0243%" height="15" fill="rgb(242,146,47)" fg:x="288931" fg:w="81"/><text x="86.7845%" y="703.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (59 samples, 0.02%)</title><rect x="86.5588%" y="693" width="0.0177%" height="15" fill="rgb(206,70,20)" fg:x="289012" fg:w="59"/><text x="86.8088%" y="703.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (625 samples, 0.19%)</title><rect x="86.5765%" y="693" width="0.1872%" height="15" fill="rgb(215,10,51)" fg:x="289071" fg:w="625"/><text x="86.8265%" y="703.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (471 samples, 0.14%)</title><rect x="86.6226%" y="677" width="0.1411%" height="15" fill="rgb(243,178,53)" fg:x="289225" fg:w="471"/><text x="86.8726%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (235 samples, 0.07%)</title><rect x="86.7639%" y="693" width="0.0704%" height="15" fill="rgb(233,221,20)" fg:x="289697" fg:w="235"/><text x="87.0139%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.02%)</title><rect x="86.8724%" y="693" width="0.0240%" height="15" fill="rgb(218,95,35)" fg:x="290059" fg:w="80"/><text x="87.1224%" y="703.50"></text></g><g><title>_platform_memmove (59 samples, 0.02%)</title><rect x="86.8787%" y="677" width="0.0177%" height="15" fill="rgb(229,13,5)" fg:x="290080" fg:w="59"/><text x="87.1287%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.02%)</title><rect x="86.9206%" y="693" width="0.0216%" height="15" fill="rgb(252,164,30)" fg:x="290220" fg:w="72"/><text x="87.1706%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (59 samples, 0.02%)</title><rect x="86.9421%" y="693" width="0.0177%" height="15" fill="rgb(232,68,36)" fg:x="290292" fg:w="59"/><text x="87.1921%" y="703.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (172 samples, 0.05%)</title><rect x="86.9775%" y="693" width="0.0515%" height="15" fill="rgb(219,59,54)" fg:x="290410" fg:w="172"/><text x="87.2275%" y="703.50"></text></g><g><title>wgpu_core::resource::TextureInner::raw (47 samples, 0.01%)</title><rect x="87.0467%" y="693" width="0.0141%" height="15" fill="rgb(250,92,33)" fg:x="290641" fg:w="47"/><text x="87.2967%" y="703.50"></text></g><g><title>wgpu_core::command::render::set_bind_group (5,879 samples, 1.76%)</title><rect x="85.4983%" y="709" width="1.7608%" height="15" fill="rgb(229,162,54)" fg:x="285471" fg:w="5879"/><text x="85.7483%" y="719.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (662 samples, 0.20%)</title><rect x="87.0607%" y="693" width="0.1983%" height="15" fill="rgb(244,114,52)" fg:x="290688" fg:w="662"/><text x="87.3107%" y="703.50"></text></g><g><title>wgpu_core::command::render::set_pipeline (44 samples, 0.01%)</title><rect x="87.2590%" y="709" width="0.0132%" height="15" fill="rgb(212,211,43)" fg:x="291350" fg:w="44"/><text x="87.5090%" y="719.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope::merge_bind_group (37 samples, 0.01%)</title><rect x="87.2983%" y="693" width="0.0111%" height="15" fill="rgb(226,147,8)" fg:x="291481" fg:w="37"/><text x="87.5483%" y="703.50"></text></g><g><title>wgpu_core::track::UsageScope::merge_bind_group (89 samples, 0.03%)</title><rect x="87.2830%" y="709" width="0.0267%" height="15" fill="rgb(226,23,13)" fg:x="291430" fg:w="89"/><text x="87.5330%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.01%)</title><rect x="87.3243%" y="693" width="0.0108%" height="15" fill="rgb(240,63,4)" fg:x="291568" fg:w="36"/><text x="87.5743%" y="703.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope::merge_bind_group (118 samples, 0.04%)</title><rect x="87.3174%" y="709" width="0.0353%" height="15" fill="rgb(221,1,32)" fg:x="291545" fg:w="118"/><text x="87.5674%" y="719.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (12,366 samples, 3.70%)</title><rect x="83.6689%" y="725" width="3.7036%" height="15" fill="rgb(242,117,10)" fg:x="279363" fg:w="12366"/><text x="83.9189%" y="735.50">wgpu..</text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (12,665 samples, 3.79%)</title><rect x="83.5890%" y="741" width="3.7932%" height="15" fill="rgb(249,172,44)" fg:x="279096" fg:w="12665"/><text x="83.8390%" y="751.50">&lt;wgp..</text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (12,666 samples, 3.79%)</title><rect x="83.5890%" y="757" width="3.7935%" height="15" fill="rgb(244,46,45)" fg:x="279096" fg:w="12666"/><text x="83.8390%" y="767.50">&lt;wgp..</text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (12,669 samples, 3.79%)</title><rect x="83.5887%" y="773" width="3.7944%" height="15" fill="rgb(206,43,17)" fg:x="279095" fg:w="12669"/><text x="83.8387%" y="783.50">core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,727 samples, 5.91%)</title><rect x="81.4958%" y="789" width="5.9082%" height="15" fill="rgb(239,218,39)" fg:x="272107" fg:w="19727"/><text x="81.7458%" y="799.50">&lt;alloc::..</text></g><g><title>avian2d::collision::collider::parry::contact_query::contact_manifolds (41 samples, 0.01%)</title><rect x="87.4079%" y="773" width="0.0123%" height="15" fill="rgb(208,169,54)" fg:x="291847" fg:w="41"/><text x="87.6579%" y="783.50"></text></g><g><title>szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="87.4309%" y="757" width="0.0165%" height="15" fill="rgb(247,25,42)" fg:x="291924" fg:w="55"/><text x="87.6809%" y="767.50"></text></g><g><title>tiny_malloc_should_clear (50 samples, 0.01%)</title><rect x="87.4324%" y="741" width="0.0150%" height="15" fill="rgb(226,23,31)" fg:x="291929" fg:w="50"/><text x="87.6824%" y="751.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (73 samples, 0.02%)</title><rect x="87.4273%" y="773" width="0.0219%" height="15" fill="rgb(247,16,28)" fg:x="291912" fg:w="73"/><text x="87.6773%" y="783.50"></text></g><g><title>avian2d::collision::narrow_phase::system_param::NarrowPhase&lt;C&gt;::update_contacts::_{{closure}}::_{{closure}} (161 samples, 0.05%)</title><rect x="87.4043%" y="789" width="0.0482%" height="15" fill="rgb(231,147,38)" fg:x="291835" fg:w="161"/><text x="87.6543%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::par_fold_init_unchecked_manual::_{{closure}}::_{{closure}}::_{{closure}} (42 samples, 0.01%)</title><rect x="87.4525%" y="789" width="0.0126%" height="15" fill="rgb(253,81,48)" fg:x="291996" fg:w="42"/><text x="87.7025%" y="799.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (40 samples, 0.01%)</title><rect x="87.5148%" y="613" width="0.0120%" height="15" fill="rgb(249,222,43)" fg:x="292204" fg:w="40"/><text x="87.7648%" y="623.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (60 samples, 0.02%)</title><rect x="87.5097%" y="645" width="0.0180%" height="15" fill="rgb(221,3,27)" fg:x="292187" fg:w="60"/><text x="87.7597%" y="655.50"></text></g><g><title>taffy::compute::compute_cached_layout (47 samples, 0.01%)</title><rect x="87.5136%" y="629" width="0.0141%" height="15" fill="rgb(228,180,5)" fg:x="292200" fg:w="47"/><text x="87.7636%" y="639.50"></text></g><g><title>taffy::compute::compute_cached_layout (62 samples, 0.02%)</title><rect x="87.5097%" y="661" width="0.0186%" height="15" fill="rgb(227,131,42)" fg:x="292187" fg:w="62"/><text x="87.7597%" y="671.50"></text></g><g><title>taffy::compute::grid::compute_grid_layout::_{{closure}} (80 samples, 0.02%)</title><rect x="87.5085%" y="709" width="0.0240%" height="15" fill="rgb(212,3,39)" fg:x="292183" fg:w="80"/><text x="87.7585%" y="719.50"></text></g><g><title>taffy::compute::compute_cached_layout (80 samples, 0.02%)</title><rect x="87.5085%" y="693" width="0.0240%" height="15" fill="rgb(226,45,5)" fg:x="292183" fg:w="80"/><text x="87.7585%" y="703.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (78 samples, 0.02%)</title><rect x="87.5091%" y="677" width="0.0234%" height="15" fill="rgb(215,167,45)" fg:x="292185" fg:w="78"/><text x="87.7591%" y="687.50"></text></g><g><title>bevy_ui::layout::ui_layout_system (88 samples, 0.03%)</title><rect x="87.5067%" y="741" width="0.0264%" height="15" fill="rgb(250,218,53)" fg:x="292177" fg:w="88"/><text x="87.7567%" y="751.50"></text></g><g><title>taffy::compute::compute_cached_layout (84 samples, 0.03%)</title><rect x="87.5079%" y="725" width="0.0252%" height="15" fill="rgb(207,140,0)" fg:x="292181" fg:w="84"/><text x="87.7579%" y="735.50"></text></g><g><title>cosmic_text::buffer::Buffer::set_rich_text (50 samples, 0.01%)</title><rect x="87.5405%" y="741" width="0.0150%" height="15" fill="rgb(238,133,51)" fg:x="292290" fg:w="50"/><text x="87.7905%" y="751.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::layout (46 samples, 0.01%)</title><rect x="87.5417%" y="725" width="0.0138%" height="15" fill="rgb(218,203,53)" fg:x="292294" fg:w="46"/><text x="87.7917%" y="735.50"></text></g><g><title>cosmic_text::buffer_line::BufferLine::shape (42 samples, 0.01%)</title><rect x="87.5429%" y="709" width="0.0126%" height="15" fill="rgb(226,184,25)" fg:x="292298" fg:w="42"/><text x="87.7929%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (286 samples, 0.09%)</title><rect x="87.4779%" y="757" width="0.0857%" height="15" fill="rgb(231,121,21)" fg:x="292081" fg:w="286"/><text x="87.7279%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}}::_{{closure}} (334 samples, 0.10%)</title><rect x="87.4651%" y="789" width="0.1000%" height="15" fill="rgb(251,14,34)" fg:x="292038" fg:w="334"/><text x="87.7151%" y="799.50"></text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe (334 samples, 0.10%)</title><rect x="87.4651%" y="773" width="0.1000%" height="15" fill="rgb(249,193,11)" fg:x="292038" fg:w="334"/><text x="87.7151%" y="783.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task::_{{closure}} (75 samples, 0.02%)</title><rect x="87.5651%" y="789" width="0.0225%" height="15" fill="rgb(220,172,37)" fg:x="292372" fg:w="75"/><text x="87.8151%" y="799.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (75 samples, 0.02%)</title><rect x="87.5651%" y="773" width="0.0225%" height="15" fill="rgb(231,229,43)" fg:x="292372" fg:w="75"/><text x="87.8151%" y="783.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;D,F&gt;::get_many_inner (44 samples, 0.01%)</title><rect x="87.5915%" y="789" width="0.0132%" height="15" fill="rgb(250,161,5)" fg:x="292460" fg:w="44"/><text x="87.8415%" y="799.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (37 samples, 0.01%)</title><rect x="87.6058%" y="789" width="0.0111%" height="15" fill="rgb(218,225,18)" fg:x="292508" fg:w="37"/><text x="87.8558%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (20,489 samples, 6.14%)</title><rect x="81.4937%" y="805" width="6.1364%" height="15" fill="rgb(245,45,42)" fg:x="272100" fg:w="20489"/><text x="81.7437%" y="815.50">async_ta..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (20,559 samples, 6.16%)</title><rect x="81.4922%" y="821" width="6.1574%" height="15" fill="rgb(211,115,1)" fg:x="272095" fg:w="20559"/><text x="81.7422%" y="831.50">async_ta..</text></g><g><title>__psynch_cvsignal (68 samples, 0.02%)</title><rect x="87.6511%" y="741" width="0.0204%" height="15" fill="rgb(248,133,52)" fg:x="292659" fg:w="68"/><text x="87.9011%" y="751.50"></text></g><g><title>alloc::task::raw_waker::wake (73 samples, 0.02%)</title><rect x="87.6499%" y="789" width="0.0219%" height="15" fill="rgb(238,100,21)" fg:x="292655" fg:w="73"/><text x="87.8999%" y="799.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (71 samples, 0.02%)</title><rect x="87.6505%" y="773" width="0.0213%" height="15" fill="rgb(247,144,11)" fg:x="292657" fg:w="71"/><text x="87.9005%" y="783.50"></text></g><g><title>pthread_cond_signal (71 samples, 0.02%)</title><rect x="87.6505%" y="757" width="0.0213%" height="15" fill="rgb(206,164,16)" fg:x="292657" fg:w="71"/><text x="87.9005%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (76 samples, 0.02%)</title><rect x="87.6499%" y="805" width="0.0228%" height="15" fill="rgb(222,34,3)" fg:x="292655" fg:w="76"/><text x="87.8999%" y="815.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (87 samples, 0.03%)</title><rect x="87.6496%" y="821" width="0.0261%" height="15" fill="rgb(248,82,4)" fg:x="292654" fg:w="87"/><text x="87.8996%" y="831.50"></text></g><g><title>_realloc (37 samples, 0.01%)</title><rect x="87.6879%" y="757" width="0.0111%" height="15" fill="rgb(228,81,46)" fg:x="292782" fg:w="37"/><text x="87.9379%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (52 samples, 0.02%)</title><rect x="87.6867%" y="789" width="0.0156%" height="15" fill="rgb(227,67,47)" fg:x="292778" fg:w="52"/><text x="87.9367%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.01%)</title><rect x="87.6873%" y="773" width="0.0150%" height="15" fill="rgb(215,93,53)" fg:x="292780" fg:w="50"/><text x="87.9373%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (53 samples, 0.02%)</title><rect x="87.6867%" y="805" width="0.0159%" height="15" fill="rgb(248,194,39)" fg:x="292778" fg:w="53"/><text x="87.9367%" y="815.50"></text></g><g><title>bevy_render::diagnostic::internal::FrameData::run_mapped_callback (85 samples, 0.03%)</title><rect x="87.6786%" y="821" width="0.0255%" height="15" fill="rgb(215,5,19)" fg:x="292751" fg:w="85"/><text x="87.9286%" y="831.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (66 samples, 0.02%)</title><rect x="87.7143%" y="709" width="0.0198%" height="15" fill="rgb(226,215,51)" fg:x="292870" fg:w="66"/><text x="87.9643%" y="719.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginComputePass(AGXStreamHardwareCommandRec**) (75 samples, 0.02%)</title><rect x="87.7128%" y="725" width="0.0225%" height="15" fill="rgb(225,56,26)" fg:x="292865" fg:w="75"/><text x="87.9628%" y="735.50"></text></g><g><title>&lt;(A,B,C,D,E) as objc::message::MessageArguments&gt;::invoke (110 samples, 0.03%)</title><rect x="87.7119%" y="773" width="0.0329%" height="15" fill="rgb(222,75,29)" fg:x="292862" fg:w="110"/><text x="87.9619%" y="783.50"></text></g><g><title>-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (110 samples, 0.03%)</title><rect x="87.7119%" y="757" width="0.0329%" height="15" fill="rgb(236,139,6)" fg:x="292862" fg:w="110"/><text x="87.9619%" y="767.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer(IOGPUMetalResource const*, unsigned long long, IOGPUMetalResource const*, unsigned long long, unsigned long, void const*, unsigned long) (110 samples, 0.03%)</title><rect x="87.7119%" y="741" width="0.0329%" height="15" fill="rgb(223,137,36)" fg:x="292862" fg:w="110"/><text x="87.9619%" y="751.50"></text></g><g><title>_dispatch_kq_poll (77 samples, 0.02%)</title><rect x="87.7529%" y="645" width="0.0231%" height="15" fill="rgb(226,99,2)" fg:x="292999" fg:w="77"/><text x="88.0029%" y="655.50"></text></g><g><title>kevent_id (77 samples, 0.02%)</title><rect x="87.7529%" y="629" width="0.0231%" height="15" fill="rgb(206,133,23)" fg:x="292999" fg:w="77"/><text x="88.0029%" y="639.50"></text></g><g><title>_dispatch_event_loop_poke (78 samples, 0.02%)</title><rect x="87.7529%" y="661" width="0.0234%" height="15" fill="rgb(243,173,15)" fg:x="292999" fg:w="78"/><text x="88.0029%" y="671.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (88 samples, 0.03%)</title><rect x="87.7526%" y="677" width="0.0264%" height="15" fill="rgb(228,69,28)" fg:x="292998" fg:w="88"/><text x="88.0026%" y="687.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (96 samples, 0.03%)</title><rect x="87.7523%" y="693" width="0.0288%" height="15" fill="rgb(212,51,22)" fg:x="292997" fg:w="96"/><text x="88.0023%" y="703.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (119 samples, 0.04%)</title><rect x="87.7523%" y="709" width="0.0356%" height="15" fill="rgb(227,113,0)" fg:x="292997" fg:w="119"/><text x="88.0023%" y="719.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (142 samples, 0.04%)</title><rect x="87.7514%" y="725" width="0.0425%" height="15" fill="rgb(252,84,27)" fg:x="292994" fg:w="142"/><text x="88.0014%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (152 samples, 0.05%)</title><rect x="87.7508%" y="741" width="0.0455%" height="15" fill="rgb(223,145,39)" fg:x="292992" fg:w="152"/><text x="88.0008%" y="751.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open (159 samples, 0.05%)</title><rect x="87.7493%" y="773" width="0.0476%" height="15" fill="rgb(239,219,30)" fg:x="292987" fg:w="159"/><text x="87.9993%" y="783.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (154 samples, 0.05%)</title><rect x="87.7508%" y="757" width="0.0461%" height="15" fill="rgb(224,196,39)" fg:x="292992" fg:w="154"/><text x="88.0008%" y="767.50"></text></g><g><title>-[AGXG15GFamilyBlitContext initWithCommandBuffer:descriptor:] (54 samples, 0.02%)</title><rect x="87.8083%" y="725" width="0.0162%" height="15" fill="rgb(205,35,43)" fg:x="293184" fg:w="54"/><text x="88.0583%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer blitCommandEncoderCommon:] (63 samples, 0.02%)</title><rect x="87.8080%" y="741" width="0.0189%" height="15" fill="rgb(228,201,21)" fg:x="293183" fg:w="63"/><text x="88.0580%" y="751.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (67 samples, 0.02%)</title><rect x="87.8077%" y="757" width="0.0201%" height="15" fill="rgb(237,118,16)" fg:x="293182" fg:w="67"/><text x="88.0577%" y="767.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreCommandEncoder as wgpu::dispatch::CommandEncoderInterface&gt;::copy_buffer_to_buffer (396 samples, 0.12%)</title><rect x="87.7101%" y="805" width="0.1186%" height="15" fill="rgb(241,17,19)" fg:x="292856" fg:w="396"/><text x="87.9601%" y="815.50"></text></g><g><title>wgpu_core::command::transfer::_&lt;impl wgpu_core::global::Global&gt;::command_encoder_copy_buffer_to_buffer (393 samples, 0.12%)</title><rect x="87.7110%" y="789" width="0.1177%" height="15" fill="rgb(214,10,25)" fg:x="292859" fg:w="393"/><text x="87.9610%" y="799.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (70 samples, 0.02%)</title><rect x="87.8077%" y="773" width="0.0210%" height="15" fill="rgb(238,37,29)" fg:x="293182" fg:w="70"/><text x="88.0577%" y="783.50"></text></g><g><title>bevy_render::renderer::RenderContext::finish (431 samples, 0.13%)</title><rect x="87.7098%" y="821" width="0.1291%" height="15" fill="rgb(253,83,25)" fg:x="292855" fg:w="431"/><text x="87.9598%" y="831.50"></text></g><g><title>&lt;dyn bevy_render::render_graph::node::RenderLabel as bevy_ecs::intern::Internable&gt;::ref_hash (40 samples, 0.01%)</title><rect x="87.8583%" y="805" width="0.0120%" height="15" fill="rgb(234,192,12)" fg:x="293351" fg:w="40"/><text x="88.1083%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (52 samples, 0.02%)</title><rect x="87.8859%" y="789" width="0.0156%" height="15" fill="rgb(241,216,45)" fg:x="293443" fg:w="52"/><text x="88.1359%" y="799.50"></text></g><g><title>bevy_platform::collections::hash_map::HashMap&lt;K,V,S&gt;::insert (66 samples, 0.02%)</title><rect x="87.8823%" y="805" width="0.0198%" height="15" fill="rgb(242,22,33)" fg:x="293431" fg:w="66"/><text x="88.1323%" y="815.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_inputs::_{{closure}} (72 samples, 0.02%)</title><rect x="87.9122%" y="805" width="0.0216%" height="15" fill="rgb(231,105,49)" fg:x="293531" fg:w="72"/><text x="88.1622%" y="815.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_inputs (58 samples, 0.02%)</title><rect x="87.9338%" y="805" width="0.0174%" height="15" fill="rgb(218,204,15)" fg:x="293603" fg:w="58"/><text x="88.1838%" y="815.50"></text></g><g><title>_dispatch_kq_poll (131 samples, 0.04%)</title><rect x="88.0042%" y="597" width="0.0392%" height="15" fill="rgb(235,138,41)" fg:x="293838" fg:w="131"/><text x="88.2542%" y="607.50"></text></g><g><title>kevent_id (130 samples, 0.04%)</title><rect x="88.0045%" y="581" width="0.0389%" height="15" fill="rgb(246,0,9)" fg:x="293839" fg:w="130"/><text x="88.2545%" y="591.50"></text></g><g><title>_dispatch_event_loop_poke (133 samples, 0.04%)</title><rect x="88.0042%" y="613" width="0.0398%" height="15" fill="rgb(210,74,4)" fg:x="293838" fg:w="133"/><text x="88.2542%" y="623.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (147 samples, 0.04%)</title><rect x="88.0030%" y="629" width="0.0440%" height="15" fill="rgb(250,60,41)" fg:x="293834" fg:w="147"/><text x="88.2530%" y="639.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (177 samples, 0.05%)</title><rect x="88.0012%" y="645" width="0.0530%" height="15" fill="rgb(220,115,12)" fg:x="293828" fg:w="177"/><text x="88.2512%" y="655.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (193 samples, 0.06%)</title><rect x="88.0000%" y="661" width="0.0578%" height="15" fill="rgb(237,100,13)" fg:x="293824" fg:w="193"/><text x="88.2500%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (211 samples, 0.06%)</title><rect x="87.9991%" y="677" width="0.0632%" height="15" fill="rgb(213,55,26)" fg:x="293821" fg:w="211"/><text x="88.2491%" y="687.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (225 samples, 0.07%)</title><rect x="87.9982%" y="693" width="0.0674%" height="15" fill="rgb(216,17,4)" fg:x="293818" fg:w="225"/><text x="88.2482%" y="703.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (272 samples, 0.08%)</title><rect x="87.9850%" y="725" width="0.0815%" height="15" fill="rgb(220,153,47)" fg:x="293774" fg:w="272"/><text x="88.2350%" y="735.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (228 samples, 0.07%)</title><rect x="87.9982%" y="709" width="0.0683%" height="15" fill="rgb(215,131,9)" fg:x="293818" fg:w="228"/><text x="88.2482%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.01%)</title><rect x="88.0746%" y="677" width="0.0108%" height="15" fill="rgb(233,46,42)" fg:x="294073" fg:w="36"/><text x="88.3246%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (37 samples, 0.01%)</title><rect x="88.0746%" y="693" width="0.0111%" height="15" fill="rgb(226,86,7)" fg:x="294073" fg:w="37"/><text x="88.3246%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (41 samples, 0.01%)</title><rect x="88.0740%" y="709" width="0.0123%" height="15" fill="rgb(239,226,21)" fg:x="294071" fg:w="41"/><text x="88.3240%" y="719.50"></text></g><g><title>_dispatch_kq_poll (112 samples, 0.03%)</title><rect x="88.1291%" y="581" width="0.0335%" height="15" fill="rgb(244,137,22)" fg:x="294255" fg:w="112"/><text x="88.3791%" y="591.50"></text></g><g><title>kevent_id (111 samples, 0.03%)</title><rect x="88.1294%" y="565" width="0.0332%" height="15" fill="rgb(211,139,35)" fg:x="294256" fg:w="111"/><text x="88.3794%" y="575.50"></text></g><g><title>_dispatch_event_loop_poke (115 samples, 0.03%)</title><rect x="88.1285%" y="597" width="0.0344%" height="15" fill="rgb(214,62,50)" fg:x="294253" fg:w="115"/><text x="88.3785%" y="607.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (128 samples, 0.04%)</title><rect x="88.1279%" y="613" width="0.0383%" height="15" fill="rgb(212,113,44)" fg:x="294251" fg:w="128"/><text x="88.3779%" y="623.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (138 samples, 0.04%)</title><rect x="88.1279%" y="629" width="0.0413%" height="15" fill="rgb(226,150,43)" fg:x="294251" fg:w="138"/><text x="88.3779%" y="639.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (154 samples, 0.05%)</title><rect x="88.1279%" y="645" width="0.0461%" height="15" fill="rgb(250,71,37)" fg:x="294251" fg:w="154"/><text x="88.3779%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (171 samples, 0.05%)</title><rect x="88.1279%" y="661" width="0.0512%" height="15" fill="rgb(219,76,19)" fg:x="294251" fg:w="171"/><text x="88.3779%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (177 samples, 0.05%)</title><rect x="88.1279%" y="677" width="0.0530%" height="15" fill="rgb(250,39,11)" fg:x="294251" fg:w="177"/><text x="88.3779%" y="687.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (202 samples, 0.06%)</title><rect x="88.1207%" y="709" width="0.0605%" height="15" fill="rgb(230,64,31)" fg:x="294227" fg:w="202"/><text x="88.3707%" y="719.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (178 samples, 0.05%)</title><rect x="88.1279%" y="693" width="0.0533%" height="15" fill="rgb(208,222,23)" fg:x="294251" fg:w="178"/><text x="88.3779%" y="703.50"></text></g><g><title>+[MTLRenderPassDescriptor renderPassDescriptor] (41 samples, 0.01%)</title><rect x="88.1911%" y="661" width="0.0123%" height="15" fill="rgb(227,125,18)" fg:x="294462" fg:w="41"/><text x="88.4411%" y="671.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (42 samples, 0.01%)</title><rect x="88.1911%" y="677" width="0.0126%" height="15" fill="rgb(234,210,9)" fg:x="294462" fg:w="42"/><text x="88.4411%" y="687.50"></text></g><g><title>AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (74 samples, 0.02%)</title><rect x="88.2593%" y="629" width="0.0222%" height="15" fill="rgb(217,127,24)" fg:x="294690" fg:w="74"/><text x="88.5093%" y="639.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (71 samples, 0.02%)</title><rect x="88.2602%" y="613" width="0.0213%" height="15" fill="rgb(239,141,48)" fg:x="294693" fg:w="71"/><text x="88.5102%" y="623.50"></text></g><g><title>IOGPUMetalCommandBufferStorageBeginSegment (35 samples, 0.01%)</title><rect x="88.2941%" y="597" width="0.0105%" height="15" fill="rgb(227,109,8)" fg:x="294806" fg:w="35"/><text x="88.5441%" y="607.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (114 samples, 0.03%)</title><rect x="88.2857%" y="613" width="0.0341%" height="15" fill="rgb(235,184,23)" fg:x="294778" fg:w="114"/><text x="88.5357%" y="623.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (51 samples, 0.02%)</title><rect x="88.3046%" y="597" width="0.0153%" height="15" fill="rgb(227,226,48)" fg:x="294841" fg:w="51"/><text x="88.5546%" y="607.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass() (181 samples, 0.05%)</title><rect x="88.2821%" y="629" width="0.0542%" height="15" fill="rgb(206,150,11)" fg:x="294766" fg:w="181"/><text x="88.5321%" y="639.50"></text></g><g><title>__bzero (37 samples, 0.01%)</title><rect x="88.3369%" y="629" width="0.0111%" height="15" fill="rgb(254,2,33)" fg:x="294949" fg:w="37"/><text x="88.5869%" y="639.50"></text></g><g><title>-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (514 samples, 0.15%)</title><rect x="88.2045%" y="645" width="0.1539%" height="15" fill="rgb(243,160,20)" fg:x="294507" fg:w="514"/><text x="88.4545%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (524 samples, 0.16%)</title><rect x="88.2036%" y="661" width="0.1569%" height="15" fill="rgb(218,208,30)" fg:x="294504" fg:w="524"/><text x="88.4536%" y="671.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (547 samples, 0.16%)</title><rect x="88.2036%" y="677" width="0.1638%" height="15" fill="rgb(224,120,49)" fg:x="294504" fg:w="547"/><text x="88.4536%" y="687.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal dealloc] (34 samples, 0.01%)</title><rect x="88.3723%" y="645" width="0.0102%" height="15" fill="rgb(246,12,2)" fg:x="295067" fg:w="34"/><text x="88.6223%" y="655.50"></text></g><g><title>objc_autoreleasePoolPop (38 samples, 0.01%)</title><rect x="88.3717%" y="677" width="0.0114%" height="15" fill="rgb(236,117,3)" fg:x="295065" fg:w="38"/><text x="88.6217%" y="687.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (37 samples, 0.01%)</title><rect x="88.3720%" y="661" width="0.0111%" height="15" fill="rgb(216,128,52)" fg:x="295066" fg:w="37"/><text x="88.6220%" y="671.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (666 samples, 0.20%)</title><rect x="88.1902%" y="693" width="0.1995%" height="15" fill="rgb(246,145,19)" fg:x="294459" fg:w="666"/><text x="88.4402%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo::start (702 samples, 0.21%)</title><rect x="88.1884%" y="709" width="0.2102%" height="15" fill="rgb(222,11,46)" fg:x="294453" fg:w="702"/><text x="88.4384%" y="719.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (99 samples, 0.03%)</title><rect x="88.4004%" y="677" width="0.0297%" height="15" fill="rgb(245,82,36)" fg:x="295161" fg:w="99"/><text x="88.6504%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (107 samples, 0.03%)</title><rect x="88.3998%" y="693" width="0.0320%" height="15" fill="rgb(250,73,51)" fg:x="295159" fg:w="107"/><text x="88.6498%" y="703.50"></text></g><g><title>wgpu_core::command::render::draw (120 samples, 0.04%)</title><rect x="88.3986%" y="709" width="0.0359%" height="15" fill="rgb(221,189,23)" fg:x="295155" fg:w="120"/><text x="88.6486%" y="719.50"></text></g><g><title>wgpu_core::command::render::set_bind_group (35 samples, 0.01%)</title><rect x="88.4345%" y="709" width="0.0105%" height="15" fill="rgb(210,33,7)" fg:x="295275" fg:w="35"/><text x="88.6845%" y="719.50"></text></g><g><title>wgpu_core::command::render::set_pipeline (37 samples, 0.01%)</title><rect x="88.4450%" y="709" width="0.0111%" height="15" fill="rgb(210,107,22)" fg:x="295310" fg:w="37"/><text x="88.6950%" y="719.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (1,609 samples, 0.48%)</title><rect x="87.9796%" y="741" width="0.4819%" height="15" fill="rgb(222,116,37)" fg:x="293756" fg:w="1609"/><text x="88.2296%" y="751.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (1,318 samples, 0.39%)</title><rect x="88.0668%" y="725" width="0.3947%" height="15" fill="rgb(254,17,48)" fg:x="294047" fg:w="1318"/><text x="88.3168%" y="735.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (1,610 samples, 0.48%)</title><rect x="87.9796%" y="757" width="0.4822%" height="15" fill="rgb(224,36,32)" fg:x="293756" fg:w="1610"/><text x="88.2296%" y="767.50"></text></g><g><title>&lt;bevy_core_pipeline::tonemapping::node::TonemappingNode as bevy_render::render_graph::node::ViewNode&gt;::run (1,614 samples, 0.48%)</title><rect x="87.9787%" y="773" width="0.4834%" height="15" fill="rgb(232,90,46)" fg:x="293753" fg:w="1614"/><text x="88.2287%" y="783.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (40 samples, 0.01%)</title><rect x="88.4711%" y="661" width="0.0120%" height="15" fill="rgb(241,66,40)" fg:x="295397" fg:w="40"/><text x="88.7211%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (55 samples, 0.02%)</title><rect x="88.4702%" y="677" width="0.0165%" height="15" fill="rgb(249,184,29)" fg:x="295394" fg:w="55"/><text x="88.7202%" y="687.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (76 samples, 0.02%)</title><rect x="88.4660%" y="725" width="0.0228%" height="15" fill="rgb(231,181,1)" fg:x="295380" fg:w="76"/><text x="88.7160%" y="735.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (62 samples, 0.02%)</title><rect x="88.4702%" y="709" width="0.0186%" height="15" fill="rgb(224,94,2)" fg:x="295394" fg:w="62"/><text x="88.7202%" y="719.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (62 samples, 0.02%)</title><rect x="88.4702%" y="693" width="0.0186%" height="15" fill="rgb(229,170,15)" fg:x="295394" fg:w="62"/><text x="88.7202%" y="703.50"></text></g><g><title>_dispatch_event_loop_poke (98 samples, 0.03%)</title><rect x="88.5211%" y="597" width="0.0294%" height="15" fill="rgb(240,127,35)" fg:x="295564" fg:w="98"/><text x="88.7711%" y="607.50"></text></g><g><title>_dispatch_kq_poll (95 samples, 0.03%)</title><rect x="88.5220%" y="581" width="0.0285%" height="15" fill="rgb(248,196,34)" fg:x="295567" fg:w="95"/><text x="88.7720%" y="591.50"></text></g><g><title>kevent_id (95 samples, 0.03%)</title><rect x="88.5220%" y="565" width="0.0285%" height="15" fill="rgb(236,137,7)" fg:x="295567" fg:w="95"/><text x="88.7720%" y="575.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (112 samples, 0.03%)</title><rect x="88.5205%" y="613" width="0.0335%" height="15" fill="rgb(235,127,16)" fg:x="295562" fg:w="112"/><text x="88.7705%" y="623.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (122 samples, 0.04%)</title><rect x="88.5199%" y="629" width="0.0365%" height="15" fill="rgb(250,192,54)" fg:x="295560" fg:w="122"/><text x="88.7699%" y="639.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (158 samples, 0.05%)</title><rect x="88.5193%" y="645" width="0.0473%" height="15" fill="rgb(218,98,20)" fg:x="295558" fg:w="158"/><text x="88.7693%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (178 samples, 0.05%)</title><rect x="88.5190%" y="661" width="0.0533%" height="15" fill="rgb(230,176,47)" fg:x="295557" fg:w="178"/><text x="88.7690%" y="671.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (198 samples, 0.06%)</title><rect x="88.5148%" y="709" width="0.0593%" height="15" fill="rgb(244,2,33)" fg:x="295543" fg:w="198"/><text x="88.7648%" y="719.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (184 samples, 0.06%)</title><rect x="88.5190%" y="693" width="0.0551%" height="15" fill="rgb(231,100,17)" fg:x="295557" fg:w="184"/><text x="88.7690%" y="703.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (184 samples, 0.06%)</title><rect x="88.5190%" y="677" width="0.0551%" height="15" fill="rgb(245,23,12)" fg:x="295557" fg:w="184"/><text x="88.7690%" y="687.50"></text></g><g><title>AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (53 samples, 0.02%)</title><rect x="88.6289%" y="629" width="0.0159%" height="15" fill="rgb(249,55,22)" fg:x="295924" fg:w="53"/><text x="88.8789%" y="639.50"></text></g><g><title>AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer(AGXG15GFamilyDevice*, AGX::G15::CommandBuffer*, AGX::G15::FramebufferDriverConfig const&amp;, unsigned int, unsigned int, bool) (52 samples, 0.02%)</title><rect x="88.6292%" y="613" width="0.0156%" height="15" fill="rgb(207,134,9)" fg:x="295925" fg:w="52"/><text x="88.8792%" y="623.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (117 samples, 0.04%)</title><rect x="88.6472%" y="613" width="0.0350%" height="15" fill="rgb(218,134,0)" fg:x="295985" fg:w="117"/><text x="88.8972%" y="623.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (54 samples, 0.02%)</title><rect x="88.6661%" y="597" width="0.0162%" height="15" fill="rgb(213,212,33)" fg:x="296048" fg:w="54"/><text x="88.9161%" y="607.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass() (181 samples, 0.05%)</title><rect x="88.6448%" y="629" width="0.0542%" height="15" fill="rgb(252,106,18)" fg:x="295977" fg:w="181"/><text x="88.8948%" y="639.50"></text></g><g><title>__bzero (40 samples, 0.01%)</title><rect x="88.6993%" y="629" width="0.0120%" height="15" fill="rgb(208,126,42)" fg:x="296159" fg:w="40"/><text x="88.9493%" y="639.50"></text></g><g><title>-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (439 samples, 0.13%)</title><rect x="88.5879%" y="645" width="0.1315%" height="15" fill="rgb(246,175,29)" fg:x="295787" fg:w="439"/><text x="88.8379%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (443 samples, 0.13%)</title><rect x="88.5879%" y="661" width="0.1327%" height="15" fill="rgb(215,13,50)" fg:x="295787" fg:w="443"/><text x="88.8379%" y="671.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (462 samples, 0.14%)</title><rect x="88.5876%" y="677" width="0.1384%" height="15" fill="rgb(216,172,15)" fg:x="295786" fg:w="462"/><text x="88.8376%" y="687.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (529 samples, 0.16%)</title><rect x="88.5804%" y="693" width="0.1584%" height="15" fill="rgb(212,103,13)" fg:x="295762" fg:w="529"/><text x="88.8304%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo::start (555 samples, 0.17%)</title><rect x="88.5792%" y="709" width="0.1662%" height="15" fill="rgb(231,171,36)" fg:x="295758" fg:w="555"/><text x="88.8292%" y="719.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (37 samples, 0.01%)</title><rect x="88.7463%" y="677" width="0.0111%" height="15" fill="rgb(250,123,20)" fg:x="296316" fg:w="37"/><text x="88.9963%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (40 samples, 0.01%)</title><rect x="88.7457%" y="693" width="0.0120%" height="15" fill="rgb(212,53,50)" fg:x="296314" fg:w="40"/><text x="88.9957%" y="703.50"></text></g><g><title>wgpu_core::command::render::draw (46 samples, 0.01%)</title><rect x="88.7457%" y="709" width="0.0138%" height="15" fill="rgb(243,54,12)" fg:x="296314" fg:w="46"/><text x="88.9957%" y="719.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (1,032 samples, 0.31%)</title><rect x="88.4639%" y="757" width="0.3091%" height="15" fill="rgb(234,101,34)" fg:x="295373" fg:w="1032"/><text x="88.7139%" y="767.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (1,032 samples, 0.31%)</title><rect x="88.4639%" y="741" width="0.3091%" height="15" fill="rgb(254,67,22)" fg:x="295373" fg:w="1032"/><text x="88.7139%" y="751.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (948 samples, 0.28%)</title><rect x="88.4891%" y="725" width="0.2839%" height="15" fill="rgb(250,35,47)" fg:x="295457" fg:w="948"/><text x="88.7391%" y="735.50"></text></g><g><title>&lt;bevy_core_pipeline::upscaling::node::UpscalingNode as bevy_render::render_graph::node::ViewNode&gt;::run (1,041 samples, 0.31%)</title><rect x="88.4621%" y="773" width="0.3118%" height="15" fill="rgb(226,126,38)" fg:x="295367" fg:w="1041"/><text x="88.7121%" y="783.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreCommandEncoder as wgpu::dispatch::CommandEncoderInterface&gt;::begin_render_pass (41 samples, 0.01%)</title><rect x="88.7859%" y="757" width="0.0123%" height="15" fill="rgb(216,138,53)" fg:x="296448" fg:w="41"/><text x="89.0359%" y="767.50"></text></g><g><title>wgpu::api::command_encoder::CommandEncoder::begin_render_pass (57 samples, 0.02%)</title><rect x="88.7859%" y="773" width="0.0171%" height="15" fill="rgb(246,199,43)" fg:x="296448" fg:w="57"/><text x="89.0359%" y="783.50"></text></g><g><title>&lt;bevy_render::render_graph::node::ViewNodeRunner&lt;T&gt; as bevy_render::render_graph::node::Node&gt;::run (2,833 samples, 0.85%)</title><rect x="87.9694%" y="789" width="0.8485%" height="15" fill="rgb(232,125,11)" fg:x="293722" fg:w="2833"/><text x="88.2194%" y="799.50"></text></g><g><title>&lt;bevy_ui::render::RunUiSubgraphOnUiViewNode as bevy_render::render_graph::node::Node&gt;::run (35 samples, 0.01%)</title><rect x="88.8179%" y="789" width="0.0105%" height="15" fill="rgb(218,219,45)" fg:x="296555" fg:w="35"/><text x="89.0679%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::try_new_uninitialized (48 samples, 0.01%)</title><rect x="88.8356%" y="789" width="0.0144%" height="15" fill="rgb(216,102,54)" fg:x="296614" fg:w="48"/><text x="89.0856%" y="799.50"></text></g><g><title>_malloc_zone_realloc (34 samples, 0.01%)</title><rect x="88.8568%" y="693" width="0.0102%" height="15" fill="rgb(250,228,7)" fg:x="296685" fg:w="34"/><text x="89.1068%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (44 samples, 0.01%)</title><rect x="88.8544%" y="757" width="0.0132%" height="15" fill="rgb(226,125,25)" fg:x="296677" fg:w="44"/><text x="89.1044%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (43 samples, 0.01%)</title><rect x="88.8547%" y="741" width="0.0129%" height="15" fill="rgb(224,165,27)" fg:x="296678" fg:w="43"/><text x="89.1047%" y="751.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (39 samples, 0.01%)</title><rect x="88.8559%" y="725" width="0.0117%" height="15" fill="rgb(233,86,3)" fg:x="296682" fg:w="39"/><text x="89.1059%" y="735.50"></text></g><g><title>_realloc (39 samples, 0.01%)</title><rect x="88.8559%" y="709" width="0.0117%" height="15" fill="rgb(228,116,20)" fg:x="296682" fg:w="39"/><text x="89.1059%" y="719.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetypes_unsafe_world_cell (86 samples, 0.03%)</title><rect x="88.8521%" y="773" width="0.0258%" height="15" fill="rgb(209,192,17)" fg:x="296669" fg:w="86"/><text x="89.1021%" y="783.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetypes (95 samples, 0.03%)</title><rect x="88.8500%" y="789" width="0.0285%" height="15" fill="rgb(224,88,34)" fg:x="296662" fg:w="95"/><text x="89.1000%" y="799.50"></text></g><g><title>_dispatch_event_loop_poke (104 samples, 0.03%)</title><rect x="88.9161%" y="613" width="0.0311%" height="15" fill="rgb(233,38,6)" fg:x="296883" fg:w="104"/><text x="89.1661%" y="623.50"></text></g><g><title>_dispatch_kq_poll (104 samples, 0.03%)</title><rect x="88.9161%" y="597" width="0.0311%" height="15" fill="rgb(212,59,30)" fg:x="296883" fg:w="104"/><text x="89.1661%" y="607.50"></text></g><g><title>kevent_id (104 samples, 0.03%)</title><rect x="88.9161%" y="581" width="0.0311%" height="15" fill="rgb(213,80,3)" fg:x="296883" fg:w="104"/><text x="89.1661%" y="591.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (112 samples, 0.03%)</title><rect x="88.9158%" y="629" width="0.0335%" height="15" fill="rgb(251,178,7)" fg:x="296882" fg:w="112"/><text x="89.1658%" y="639.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (122 samples, 0.04%)</title><rect x="88.9149%" y="645" width="0.0365%" height="15" fill="rgb(213,154,26)" fg:x="296879" fg:w="122"/><text x="89.1649%" y="655.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (137 samples, 0.04%)</title><rect x="88.9143%" y="661" width="0.0410%" height="15" fill="rgb(238,165,49)" fg:x="296877" fg:w="137"/><text x="89.1643%" y="671.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (149 samples, 0.04%)</title><rect x="88.9140%" y="677" width="0.0446%" height="15" fill="rgb(248,91,46)" fg:x="296876" fg:w="149"/><text x="89.1640%" y="687.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (156 samples, 0.05%)</title><rect x="88.9140%" y="693" width="0.0467%" height="15" fill="rgb(244,21,52)" fg:x="296876" fg:w="156"/><text x="89.1640%" y="703.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (194 samples, 0.06%)</title><rect x="88.9036%" y="725" width="0.0581%" height="15" fill="rgb(247,122,20)" fg:x="296841" fg:w="194"/><text x="89.1536%" y="735.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (159 samples, 0.05%)</title><rect x="88.9140%" y="709" width="0.0476%" height="15" fill="rgb(218,27,9)" fg:x="296876" fg:w="159"/><text x="89.1640%" y="719.50"></text></g><g><title>_dispatch_event_loop_poke (83 samples, 0.02%)</title><rect x="88.9931%" y="597" width="0.0249%" height="15" fill="rgb(246,7,6)" fg:x="297140" fg:w="83"/><text x="89.2431%" y="607.50"></text></g><g><title>_dispatch_kq_poll (81 samples, 0.02%)</title><rect x="88.9937%" y="581" width="0.0243%" height="15" fill="rgb(227,135,54)" fg:x="297142" fg:w="81"/><text x="89.2437%" y="591.50"></text></g><g><title>kevent_id (80 samples, 0.02%)</title><rect x="88.9940%" y="565" width="0.0240%" height="15" fill="rgb(247,14,11)" fg:x="297143" fg:w="80"/><text x="89.2440%" y="575.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (94 samples, 0.03%)</title><rect x="88.9931%" y="613" width="0.0282%" height="15" fill="rgb(206,149,34)" fg:x="297140" fg:w="94"/><text x="89.2431%" y="623.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (101 samples, 0.03%)</title><rect x="88.9925%" y="629" width="0.0302%" height="15" fill="rgb(227,228,4)" fg:x="297138" fg:w="101"/><text x="89.2425%" y="639.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (119 samples, 0.04%)</title><rect x="88.9925%" y="645" width="0.0356%" height="15" fill="rgb(238,218,28)" fg:x="297138" fg:w="119"/><text x="89.2425%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (135 samples, 0.04%)</title><rect x="88.9919%" y="661" width="0.0404%" height="15" fill="rgb(252,86,40)" fg:x="297136" fg:w="135"/><text x="89.2419%" y="671.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (161 samples, 0.05%)</title><rect x="88.9853%" y="709" width="0.0482%" height="15" fill="rgb(251,225,11)" fg:x="297114" fg:w="161"/><text x="89.2353%" y="719.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (139 samples, 0.04%)</title><rect x="88.9919%" y="693" width="0.0416%" height="15" fill="rgb(206,46,49)" fg:x="297136" fg:w="139"/><text x="89.2419%" y="703.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (139 samples, 0.04%)</title><rect x="88.9919%" y="677" width="0.0416%" height="15" fill="rgb(245,128,24)" fg:x="297136" fg:w="139"/><text x="89.2419%" y="687.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand(unsigned long) (89 samples, 0.03%)</title><rect x="89.0896%" y="613" width="0.0267%" height="15" fill="rgb(219,177,34)" fg:x="297462" fg:w="89"/><text x="89.3396%" y="623.50"></text></g><g><title>_ioGPUResourceListAddResourceEntry (37 samples, 0.01%)</title><rect x="89.1051%" y="597" width="0.0111%" height="15" fill="rgb(218,60,48)" fg:x="297514" fg:w="37"/><text x="89.3551%" y="607.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass() (142 samples, 0.04%)</title><rect x="89.0878%" y="629" width="0.0425%" height="15" fill="rgb(221,11,5)" fg:x="297456" fg:w="142"/><text x="89.3378%" y="639.50"></text></g><g><title>__bzero (55 samples, 0.02%)</title><rect x="89.1309%" y="629" width="0.0165%" height="15" fill="rgb(220,148,13)" fg:x="297600" fg:w="55"/><text x="89.3809%" y="639.50"></text></g><g><title>-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (366 samples, 0.11%)</title><rect x="89.0473%" y="645" width="0.1096%" height="15" fill="rgb(210,16,3)" fg:x="297321" fg:w="366"/><text x="89.2973%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (371 samples, 0.11%)</title><rect x="89.0470%" y="661" width="0.1111%" height="15" fill="rgb(236,80,2)" fg:x="297320" fg:w="371"/><text x="89.2970%" y="671.50"></text></g><g><title>&lt;(A,) as objc::message::MessageArguments&gt;::invoke (388 samples, 0.12%)</title><rect x="89.0470%" y="677" width="0.1162%" height="15" fill="rgb(239,129,19)" fg:x="297320" fg:w="388"/><text x="89.2970%" y="687.50"></text></g><g><title>objc_autoreleasePoolPop (37 samples, 0.01%)</title><rect x="89.1650%" y="677" width="0.0111%" height="15" fill="rgb(220,106,35)" fg:x="297714" fg:w="37"/><text x="89.4150%" y="687.50"></text></g><g><title>AutoreleasePoolPage::releaseUntil(objc_object**) (35 samples, 0.01%)</title><rect x="89.1656%" y="661" width="0.0105%" height="15" fill="rgb(252,139,45)" fg:x="297716" fg:w="35"/><text x="89.4156%" y="671.50"></text></g><g><title>-[MTLRenderPassDescriptorInternal dealloc] (34 samples, 0.01%)</title><rect x="89.1659%" y="645" width="0.0102%" height="15" fill="rgb(229,8,36)" fg:x="297717" fg:w="34"/><text x="89.4159%" y="655.50"></text></g><g><title>&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (464 samples, 0.14%)</title><rect x="89.0386%" y="693" width="0.1390%" height="15" fill="rgb(230,126,33)" fg:x="297292" fg:w="464"/><text x="89.2886%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo::start (494 samples, 0.15%)</title><rect x="89.0371%" y="709" width="0.1480%" height="15" fill="rgb(239,140,21)" fg:x="297287" fg:w="494"/><text x="89.2871%" y="719.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits&lt;AGX::G15::Classes&gt;&amp;, bool) (61 samples, 0.02%)</title><rect x="89.1878%" y="677" width="0.0183%" height="15" fill="rgb(254,104,9)" fg:x="297790" fg:w="61"/><text x="89.4378%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (72 samples, 0.02%)</title><rect x="89.1860%" y="693" width="0.0216%" height="15" fill="rgb(239,52,14)" fg:x="297784" fg:w="72"/><text x="89.4360%" y="703.50"></text></g><g><title>wgpu_core::command::render::draw_indexed (78 samples, 0.02%)</title><rect x="89.1857%" y="709" width="0.0234%" height="15" fill="rgb(208,227,44)" fg:x="297783" fg:w="78"/><text x="89.4357%" y="719.50"></text></g><g><title>wgpu_core::command::render::set_pipeline (40 samples, 0.01%)</title><rect x="89.2177%" y="709" width="0.0120%" height="15" fill="rgb(246,18,19)" fg:x="297890" fg:w="40"/><text x="89.4677%" y="719.50"></text></g><g><title>wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (908 samples, 0.27%)</title><rect x="88.9620%" y="725" width="0.2719%" height="15" fill="rgb(235,228,25)" fg:x="297036" fg:w="908"/><text x="89.2120%" y="735.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as core::ops::drop::Drop&gt;::drop (1,122 samples, 0.34%)</title><rect x="88.8982%" y="757" width="0.3360%" height="15" fill="rgb(240,156,20)" fg:x="296823" fg:w="1122"/><text x="89.1482%" y="767.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (1,122 samples, 0.34%)</title><rect x="88.8982%" y="741" width="0.3360%" height="15" fill="rgb(224,8,20)" fg:x="296823" fg:w="1122"/><text x="89.1482%" y="751.50"></text></g><g><title>&lt;bevy_ui::render::render_pass::UiPassNode as bevy_render::render_graph::node::Node&gt;::run (1,193 samples, 0.36%)</title><rect x="88.8964%" y="773" width="0.3573%" height="15" fill="rgb(214,12,52)" fg:x="296817" fg:w="1193"/><text x="89.1464%" y="783.50"></text></g><g><title>bevy_render::render_phase::SortedRenderPhase&lt;I&gt;::render_range (56 samples, 0.02%)</title><rect x="89.2549%" y="773" width="0.0168%" height="15" fill="rgb(211,220,47)" fg:x="298014" fg:w="56"/><text x="89.5049%" y="783.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (1,274 samples, 0.38%)</title><rect x="88.8949%" y="789" width="0.3816%" height="15" fill="rgb(250,173,5)" fg:x="296812" fg:w="1274"/><text x="89.1449%" y="799.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (4,433 samples, 1.33%)</title><rect x="87.9607%" y="805" width="1.3277%" height="15" fill="rgb(250,125,52)" fg:x="293693" fg:w="4433"/><text x="88.2107%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph (4,932 samples, 1.48%)</title><rect x="87.8439%" y="821" width="1.4771%" height="15" fill="rgb(209,133,18)" fg:x="293303" fg:w="4932"/><text x="88.0939%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::run&lt;!,bevy_tasks::task_pool::TaskPool::execute_global_scope&lt;(usize,wgpu::api::command_buffer::CommandBuffer),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_render::renderer::RenderContext::finish::{{closure}},(usize,wgpu::api::command_buffer::CommandBuffer)&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (38 samples, 0.01%)</title><rect x="89.3247%" y="805" width="0.0114%" height="15" fill="rgb(216,173,22)" fg:x="298247" fg:w="38"/><text x="89.5747%" y="815.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}} (39 samples, 0.01%)</title><rect x="89.3247%" y="821" width="0.0117%" height="15" fill="rgb(205,3,22)" fg:x="298247" fg:w="39"/><text x="89.5747%" y="831.50"></text></g><g><title>__psynch_cvwait (72 samples, 0.02%)</title><rect x="89.3522%" y="773" width="0.0216%" height="15" fill="rgb(248,22,20)" fg:x="298339" fg:w="72"/><text x="89.6022%" y="783.50"></text></g><g><title>_pthread_cond_wait (77 samples, 0.02%)</title><rect x="89.3510%" y="789" width="0.0231%" height="15" fill="rgb(233,6,29)" fg:x="298335" fg:w="77"/><text x="89.6010%" y="799.50"></text></g><g><title>parking::Parker::park (80 samples, 0.02%)</title><rect x="89.3504%" y="821" width="0.0240%" height="15" fill="rgb(240,22,54)" fg:x="298333" fg:w="80"/><text x="89.6004%" y="831.50"></text></g><g><title>parking::Inner::park (80 samples, 0.02%)</title><rect x="89.3504%" y="805" width="0.0240%" height="15" fill="rgb(231,133,32)" fg:x="298333" fg:w="80"/><text x="89.6004%" y="815.50"></text></g><g><title>bevy_render::renderer::graph_runner::RenderGraphRunner::run (26,639 samples, 7.98%)</title><rect x="81.4224%" y="837" width="7.9784%" height="15" fill="rgb(248,193,4)" fg:x="271862" fg:w="26639"/><text x="81.6724%" y="847.50">bevy_render..</text></g><g><title>&lt;bevy_render::render_graph::node::ViewNodeRunner&lt;T&gt; as bevy_render::render_graph::node::Node&gt;::update (39 samples, 0.01%)</title><rect x="89.4220%" y="789" width="0.0117%" height="15" fill="rgb(211,178,46)" fg:x="298572" fg:w="39"/><text x="89.6720%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;D,F&gt;::update_archetypes_unsafe_world_cell (38 samples, 0.01%)</title><rect x="89.4361%" y="789" width="0.0114%" height="15" fill="rgb(224,5,42)" fg:x="298619" fg:w="38"/><text x="89.6861%" y="799.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (168 samples, 0.05%)</title><rect x="89.4094%" y="805" width="0.0503%" height="15" fill="rgb(239,176,25)" fg:x="298530" fg:w="168"/><text x="89.6594%" y="815.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::update (194 samples, 0.06%)</title><rect x="89.4022%" y="821" width="0.0581%" height="15" fill="rgb(245,187,50)" fg:x="298506" fg:w="194"/><text x="89.6522%" y="831.50"></text></g><g><title>bevy_render::renderer::render_system::_{{closure}} (196 samples, 0.06%)</title><rect x="89.4019%" y="837" width="0.0587%" height="15" fill="rgb(248,24,15)" fg:x="298505" fg:w="196"/><text x="89.6519%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (40 samples, 0.01%)</title><rect x="89.5112%" y="773" width="0.0120%" height="15" fill="rgb(205,166,13)" fg:x="298870" fg:w="40"/><text x="89.7612%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (43 samples, 0.01%)</title><rect x="89.5106%" y="789" width="0.0129%" height="15" fill="rgb(208,114,23)" fg:x="298868" fg:w="43"/><text x="89.7606%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (42 samples, 0.01%)</title><rect x="89.5241%" y="789" width="0.0126%" height="15" fill="rgb(239,127,18)" fg:x="298913" fg:w="42"/><text x="89.7741%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (41 samples, 0.01%)</title><rect x="89.5244%" y="773" width="0.0123%" height="15" fill="rgb(219,154,28)" fg:x="298914" fg:w="41"/><text x="89.7744%" y="783.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (35 samples, 0.01%)</title><rect x="89.5262%" y="757" width="0.0105%" height="15" fill="rgb(225,157,23)" fg:x="298920" fg:w="35"/><text x="89.7762%" y="767.50"></text></g><g><title>_realloc (34 samples, 0.01%)</title><rect x="89.5265%" y="741" width="0.0102%" height="15" fill="rgb(219,8,6)" fg:x="298921" fg:w="34"/><text x="89.7765%" y="751.50"></text></g><g><title>core::num::_&lt;impl usize&gt;::unchecked_add (55 samples, 0.02%)</title><rect x="89.5514%" y="789" width="0.0165%" height="15" fill="rgb(212,47,6)" fg:x="299004" fg:w="55"/><text x="89.8014%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (41 samples, 0.01%)</title><rect x="89.5688%" y="789" width="0.0123%" height="15" fill="rgb(224,190,4)" fg:x="299062" fg:w="41"/><text x="89.8188%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.02%)</title><rect x="89.5879%" y="789" width="0.0156%" height="15" fill="rgb(239,183,29)" fg:x="299126" fg:w="52"/><text x="89.8379%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (81 samples, 0.02%)</title><rect x="89.6035%" y="789" width="0.0243%" height="15" fill="rgb(213,57,7)" fg:x="299178" fg:w="81"/><text x="89.8535%" y="799.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (40 samples, 0.01%)</title><rect x="89.6391%" y="789" width="0.0120%" height="15" fill="rgb(216,148,1)" fg:x="299297" fg:w="40"/><text x="89.8891%" y="799.50"></text></g><g><title>free_tiny (36 samples, 0.01%)</title><rect x="89.6403%" y="773" width="0.0108%" height="15" fill="rgb(236,182,29)" fg:x="299301" fg:w="36"/><text x="89.8903%" y="783.50"></text></g><g><title>&lt;(A,B,C) as objc::message::MessageArguments&gt;::invoke (47 samples, 0.01%)</title><rect x="89.6676%" y="757" width="0.0141%" height="15" fill="rgb(244,120,48)" fg:x="299392" fg:w="47"/><text x="89.9176%" y="767.50"></text></g><g><title>__CFStringCreateImmutableFunnel3 (42 samples, 0.01%)</title><rect x="89.6691%" y="741" width="0.0126%" height="15" fill="rgb(206,71,34)" fg:x="299397" fg:w="42"/><text x="89.9191%" y="751.50"></text></g><g><title>metal::commandbuffer::CommandBufferRef::set_label (56 samples, 0.02%)</title><rect x="89.6652%" y="773" width="0.0168%" height="15" fill="rgb(242,32,6)" fg:x="299384" fg:w="56"/><text x="89.9152%" y="783.50"></text></g><g><title>_dispatch_kq_poll (186 samples, 0.06%)</title><rect x="89.6889%" y="661" width="0.0557%" height="15" fill="rgb(241,35,3)" fg:x="299463" fg:w="186"/><text x="89.9389%" y="671.50"></text></g><g><title>kevent_id (185 samples, 0.06%)</title><rect x="89.6892%" y="645" width="0.0554%" height="15" fill="rgb(222,62,19)" fg:x="299464" fg:w="185"/><text x="89.9392%" y="655.50"></text></g><g><title>_dispatch_event_loop_poke (188 samples, 0.06%)</title><rect x="89.6886%" y="677" width="0.0563%" height="15" fill="rgb(223,110,41)" fg:x="299462" fg:w="188"/><text x="89.9386%" y="687.50"></text></g><g><title>dispatch_async (36 samples, 0.01%)</title><rect x="89.7464%" y="677" width="0.0108%" height="15" fill="rgb(208,224,4)" fg:x="299655" fg:w="36"/><text x="89.9964%" y="687.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCreate:creationTime:] (238 samples, 0.07%)</title><rect x="89.6877%" y="693" width="0.0713%" height="15" fill="rgb(241,137,19)" fg:x="299459" fg:w="238"/><text x="89.9377%" y="703.50"></text></g><g><title>-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (270 samples, 0.08%)</title><rect x="89.6871%" y="709" width="0.0809%" height="15" fill="rgb(244,24,17)" fg:x="299457" fg:w="270"/><text x="89.9371%" y="719.50"></text></g><g><title>_platform_memset (41 samples, 0.01%)</title><rect x="89.7781%" y="629" width="0.0123%" height="15" fill="rgb(245,178,49)" fg:x="299761" fg:w="41"/><text x="90.0281%" y="639.50"></text></g><g><title>small_malloc_should_clear (52 samples, 0.02%)</title><rect x="89.7775%" y="645" width="0.0156%" height="15" fill="rgb(219,160,38)" fg:x="299759" fg:w="52"/><text x="90.0275%" y="655.50"></text></g><g><title>IOGPUResourceListInit (66 samples, 0.02%)</title><rect x="89.7757%" y="677" width="0.0198%" height="15" fill="rgb(228,137,14)" fg:x="299753" fg:w="66"/><text x="90.0257%" y="687.50"></text></g><g><title>szone_malloc_should_clear (64 samples, 0.02%)</title><rect x="89.7763%" y="661" width="0.0192%" height="15" fill="rgb(237,134,11)" fg:x="299755" fg:w="64"/><text x="90.0263%" y="671.50"></text></g><g><title>IOGPUMetalCommandBufferStorageCreateExt (123 samples, 0.04%)</title><rect x="89.7751%" y="693" width="0.0368%" height="15" fill="rgb(211,126,44)" fg:x="299751" fg:w="123"/><text x="90.0251%" y="703.50"></text></g><g><title>IOGPUMetalCommandBufferStoragePoolCreateStorage (140 samples, 0.04%)</title><rect x="89.7736%" y="709" width="0.0419%" height="15" fill="rgb(226,171,33)" fg:x="299746" fg:w="140"/><text x="90.0236%" y="719.50"></text></g><g><title>-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (436 samples, 0.13%)</title><rect x="89.6859%" y="725" width="0.1306%" height="15" fill="rgb(253,99,13)" fg:x="299453" fg:w="436"/><text x="89.9359%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (529 samples, 0.16%)</title><rect x="89.6832%" y="741" width="0.1584%" height="15" fill="rgb(244,48,7)" fg:x="299444" fg:w="529"/><text x="89.9332%" y="751.50"></text></g><g><title>szone_malloc_should_clear (43 samples, 0.01%)</title><rect x="89.8287%" y="725" width="0.0129%" height="15" fill="rgb(244,217,54)" fg:x="299930" fg:w="43"/><text x="90.0787%" y="735.50"></text></g><g><title>tiny_malloc_should_clear (40 samples, 0.01%)</title><rect x="89.8296%" y="709" width="0.0120%" height="15" fill="rgb(224,15,18)" fg:x="299933" fg:w="40"/><text x="90.0796%" y="719.50"></text></g><g><title>-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (555 samples, 0.17%)</title><rect x="89.6832%" y="757" width="0.1662%" height="15" fill="rgb(244,99,12)" fg:x="299444" fg:w="555"/><text x="89.9332%" y="767.50"></text></g><g><title>wgpu_core::command::CommandEncoder::open_pass (641 samples, 0.19%)</title><rect x="89.6580%" y="789" width="0.1920%" height="15" fill="rgb(233,226,8)" fg:x="299360" fg:w="641"/><text x="89.9080%" y="799.50"></text></g><g><title>wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding::_{{closure}} (557 samples, 0.17%)</title><rect x="89.6832%" y="773" width="0.1668%" height="15" fill="rgb(229,211,3)" fg:x="299444" fg:w="557"/><text x="89.9332%" y="783.50"></text></g><g><title>AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::commit() (54 samples, 0.02%)</title><rect x="89.8712%" y="693" width="0.0162%" height="15" fill="rgb(216,140,21)" fg:x="300072" fg:w="54"/><text x="90.1212%" y="703.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::reset() (39 samples, 0.01%)</title><rect x="89.8757%" y="677" width="0.0117%" height="15" fill="rgb(234,122,30)" fg:x="300087" fg:w="39"/><text x="90.1257%" y="687.50"></text></g><g><title>-[AGXG15GFamilyBlitContext deferredEndEncoding] (61 samples, 0.02%)</title><rect x="89.8712%" y="709" width="0.0183%" height="15" fill="rgb(236,25,46)" fg:x="300072" fg:w="61"/><text x="90.1212%" y="719.50"></text></g><g><title>_CFRelease (39 samples, 0.01%)</title><rect x="89.8934%" y="661" width="0.0117%" height="15" fill="rgb(217,52,54)" fg:x="300146" fg:w="39"/><text x="90.1434%" y="671.50"></text></g><g><title>-[_MTLObjectWithLabel dealloc] (70 samples, 0.02%)</title><rect x="89.8910%" y="677" width="0.0210%" height="15" fill="rgb(222,29,26)" fg:x="300138" fg:w="70"/><text x="90.1410%" y="687.50"></text></g><g><title>-[_MTLCommandEncoder dealloc] (77 samples, 0.02%)</title><rect x="89.8904%" y="693" width="0.0231%" height="15" fill="rgb(216,177,29)" fg:x="300136" fg:w="77"/><text x="90.1404%" y="703.50"></text></g><g><title>-[AGXG15GFamilyRenderContext dealloc] (83 samples, 0.02%)</title><rect x="89.8895%" y="709" width="0.0249%" height="15" fill="rgb(247,136,51)" fg:x="300133" fg:w="83"/><text x="90.1395%" y="719.50"></text></g><g><title>AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::endCommand() (38 samples, 0.01%)</title><rect x="89.9231%" y="677" width="0.0114%" height="15" fill="rgb(231,47,47)" fg:x="300245" fg:w="38"/><text x="90.1731%" y="687.50"></text></g><g><title>AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::reset() (58 samples, 0.02%)</title><rect x="89.9515%" y="677" width="0.0174%" height="15" fill="rgb(211,192,36)" fg:x="300340" fg:w="58"/><text x="90.2015%" y="687.50"></text></g><g><title>-[AGXG15GFamilyRenderContext deferredEndEncoding:] (204 samples, 0.06%)</title><rect x="89.9144%" y="709" width="0.0611%" height="15" fill="rgb(229,156,32)" fg:x="300216" fg:w="204"/><text x="90.1644%" y="719.50"></text></g><g><title>AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::endRenderPassCommon(bool, bool, bool, bool, bool) (196 samples, 0.06%)</title><rect x="89.9168%" y="693" width="0.0587%" height="15" fill="rgb(248,213,20)" fg:x="300224" fg:w="196"/><text x="90.1668%" y="703.50"></text></g><g><title>-[AGXG15GFamilyRenderContext destroyImpl] (51 samples, 0.02%)</title><rect x="89.9755%" y="709" width="0.0153%" height="15" fill="rgb(217,64,7)" fg:x="300420" fg:w="51"/><text x="90.2255%" y="719.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer commitEncoder] (435 samples, 0.13%)</title><rect x="89.8662%" y="725" width="0.1303%" height="15" fill="rgb(232,142,8)" fg:x="300055" fg:w="435"/><text x="90.1162%" y="735.50"></text></g><g><title>_dispatch_kq_poll (211 samples, 0.06%)</title><rect x="90.0234%" y="645" width="0.0632%" height="15" fill="rgb(224,92,44)" fg:x="300580" fg:w="211"/><text x="90.2734%" y="655.50"></text></g><g><title>kevent_id (211 samples, 0.06%)</title><rect x="90.0234%" y="629" width="0.0632%" height="15" fill="rgb(214,169,17)" fg:x="300580" fg:w="211"/><text x="90.2734%" y="639.50"></text></g><g><title>_dispatch_event_loop_poke (215 samples, 0.06%)</title><rect x="90.0225%" y="661" width="0.0644%" height="15" fill="rgb(210,59,37)" fg:x="300577" fg:w="215"/><text x="90.2725%" y="671.50"></text></g><g><title>_Block_object_assign (76 samples, 0.02%)</title><rect x="90.0986%" y="597" width="0.0228%" height="15" fill="rgb(214,116,48)" fg:x="300831" fg:w="76"/><text x="90.3486%" y="607.50"></text></g><g><title>_Block_copy (70 samples, 0.02%)</title><rect x="90.1004%" y="581" width="0.0210%" height="15" fill="rgb(244,191,6)" fg:x="300837" fg:w="70"/><text x="90.3504%" y="591.50"></text></g><g><title>szone_malloc_should_clear (41 samples, 0.01%)</title><rect x="90.1090%" y="565" width="0.0123%" height="15" fill="rgb(241,50,52)" fg:x="300866" fg:w="41"/><text x="90.3590%" y="575.50"></text></g><g><title>tiny_malloc_should_clear (36 samples, 0.01%)</title><rect x="90.1105%" y="549" width="0.0108%" height="15" fill="rgb(236,75,39)" fg:x="300871" fg:w="36"/><text x="90.3605%" y="559.50"></text></g><g><title>_call_copy_helpers_excp (84 samples, 0.03%)</title><rect x="90.0977%" y="613" width="0.0252%" height="15" fill="rgb(236,99,0)" fg:x="300828" fg:w="84"/><text x="90.3477%" y="623.50"></text></g><g><title>_Block_copy (180 samples, 0.05%)</title><rect x="90.0947%" y="629" width="0.0539%" height="15" fill="rgb(207,202,15)" fg:x="300818" fg:w="180"/><text x="90.3447%" y="639.50"></text></g><g><title>szone_malloc_should_clear (76 samples, 0.02%)</title><rect x="90.1258%" y="613" width="0.0228%" height="15" fill="rgb(233,207,14)" fg:x="300922" fg:w="76"/><text x="90.3758%" y="623.50"></text></g><g><title>tiny_malloc_should_clear (75 samples, 0.02%)</title><rect x="90.1261%" y="597" width="0.0225%" height="15" fill="rgb(226,27,51)" fg:x="300923" fg:w="75"/><text x="90.3761%" y="607.50"></text></g><g><title>_dispatch_Block_copy (181 samples, 0.05%)</title><rect x="90.0947%" y="645" width="0.0542%" height="15" fill="rgb(206,104,42)" fg:x="300818" fg:w="181"/><text x="90.3447%" y="655.50"></text></g><g><title>dispatch_async (209 samples, 0.06%)</title><rect x="90.0914%" y="661" width="0.0626%" height="15" fill="rgb(212,225,4)" fg:x="300807" fg:w="209"/><text x="90.3414%" y="671.50"></text></g><g><title>+[FPCAMetalLayerState _updateCommandBufferState:block:] (483 samples, 0.14%)</title><rect x="90.0183%" y="677" width="0.1447%" height="15" fill="rgb(233,96,42)" fg:x="300563" fg:w="483"/><text x="90.2683%" y="687.50"></text></g><g><title>+[FPCAMetalLayerState commandBufferCommit:commitTime:] (491 samples, 0.15%)</title><rect x="90.0171%" y="693" width="0.1471%" height="15" fill="rgb(229,21,32)" fg:x="300559" fg:w="491"/><text x="90.2671%" y="703.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (128 samples, 0.04%)</title><rect x="90.1764%" y="677" width="0.0383%" height="15" fill="rgb(226,216,24)" fg:x="301091" fg:w="128"/><text x="90.4264%" y="687.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (126 samples, 0.04%)</title><rect x="90.1770%" y="661" width="0.0377%" height="15" fill="rgb(221,163,17)" fg:x="301093" fg:w="126"/><text x="90.4270%" y="671.50"></text></g><g><title>__psynch_mutexwait (121 samples, 0.04%)</title><rect x="90.1785%" y="645" width="0.0362%" height="15" fill="rgb(216,216,42)" fg:x="301098" fg:w="121"/><text x="90.4285%" y="655.50"></text></g><g><title>-[_MTLCommandQueue enqueueCommandBuffer:] (189 samples, 0.06%)</title><rect x="90.1651%" y="693" width="0.0566%" height="15" fill="rgb(240,118,7)" fg:x="301053" fg:w="189"/><text x="90.4151%" y="703.50"></text></g><g><title>FPCommandBufferCommitted (45 samples, 0.01%)</title><rect x="90.2238%" y="693" width="0.0135%" height="15" fill="rgb(221,67,37)" fg:x="301249" fg:w="45"/><text x="90.4738%" y="703.50"></text></g><g><title>mach_absolute_time (40 samples, 0.01%)</title><rect x="90.2253%" y="677" width="0.0120%" height="15" fill="rgb(241,32,44)" fg:x="301254" fg:w="40"/><text x="90.4753%" y="687.50"></text></g><g><title>-[_MTLCommandBuffer commit] (756 samples, 0.23%)</title><rect x="90.0147%" y="709" width="0.2264%" height="15" fill="rgb(235,204,43)" fg:x="300551" fg:w="756"/><text x="90.2647%" y="719.50"></text></g><g><title>_dispatch_event_loop_poke (138 samples, 0.04%)</title><rect x="90.2492%" y="677" width="0.0413%" height="15" fill="rgb(213,116,10)" fg:x="301334" fg:w="138"/><text x="90.4992%" y="687.50"></text></g><g><title>_dispatch_kq_poll (138 samples, 0.04%)</title><rect x="90.2492%" y="661" width="0.0413%" height="15" fill="rgb(239,15,48)" fg:x="301334" fg:w="138"/><text x="90.4992%" y="671.50"></text></g><g><title>kevent_id (137 samples, 0.04%)</title><rect x="90.2495%" y="645" width="0.0410%" height="15" fill="rgb(207,123,36)" fg:x="301335" fg:w="137"/><text x="90.4995%" y="655.50"></text></g><g><title>dispatch_source_merge_data (161 samples, 0.05%)</title><rect x="90.2486%" y="693" width="0.0482%" height="15" fill="rgb(209,103,30)" fg:x="301332" fg:w="161"/><text x="90.4986%" y="703.50"></text></g><g><title>-[_MTLCommandQueue commitCommandBuffer:wake:] (192 samples, 0.06%)</title><rect x="90.2420%" y="709" width="0.0575%" height="15" fill="rgb(238,100,19)" fg:x="301310" fg:w="192"/><text x="90.4920%" y="719.50"></text></g><g><title>-[IOGPUMetalCommandBuffer commit] (1,005 samples, 0.30%)</title><rect x="90.0099%" y="725" width="0.3010%" height="15" fill="rgb(244,30,14)" fg:x="300535" fg:w="1005"/><text x="90.2599%" y="735.50"></text></g><g><title>free_tiny (48 samples, 0.01%)</title><rect x="90.3199%" y="725" width="0.0144%" height="15" fill="rgb(249,174,6)" fg:x="301570" fg:w="48"/><text x="90.5699%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer commit] (1,590 samples, 0.48%)</title><rect x="89.8644%" y="741" width="0.4762%" height="15" fill="rgb(235,213,41)" fg:x="300049" fg:w="1590"/><text x="90.1144%" y="751.50"></text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (1,620 samples, 0.49%)</title><rect x="89.8641%" y="757" width="0.4852%" height="15" fill="rgb(213,118,6)" fg:x="300048" fg:w="1620"/><text x="90.1141%" y="767.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer commitEncoder] (40 samples, 0.01%)</title><rect x="90.3516%" y="709" width="0.0120%" height="15" fill="rgb(235,44,51)" fg:x="301676" fg:w="40"/><text x="90.6016%" y="719.50"></text></g><g><title>-[IOGPUMetalCommandBuffer encodeSignalEvent:value:] (47 samples, 0.01%)</title><rect x="90.3510%" y="725" width="0.0141%" height="15" fill="rgb(217,9,53)" fg:x="301674" fg:w="47"/><text x="90.6010%" y="735.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer encodeSignalEvent:value:] (51 samples, 0.02%)</title><rect x="90.3507%" y="741" width="0.0153%" height="15" fill="rgb(237,172,34)" fg:x="301673" fg:w="51"/><text x="90.6007%" y="751.50"></text></g><g><title>&lt;(A,B) as objc::message::MessageArguments&gt;::invoke (52 samples, 0.02%)</title><rect x="90.3507%" y="757" width="0.0156%" height="15" fill="rgb(206,206,11)" fg:x="301673" fg:w="52"/><text x="90.6007%" y="767.50"></text></g><g><title>&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::submit (1,714 samples, 0.51%)</title><rect x="89.8620%" y="773" width="0.5133%" height="15" fill="rgb(214,149,29)" fg:x="300041" fg:w="1714"/><text x="90.1120%" y="783.50"></text></g><g><title>wgpu_core::device::UserClosures::fire (34 samples, 0.01%)</title><rect x="90.4073%" y="773" width="0.0102%" height="15" fill="rgb(208,123,3)" fg:x="301862" fg:w="34"/><text x="90.6573%" y="783.50"></text></g><g><title>-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (77 samples, 0.02%)</title><rect x="90.4394%" y="661" width="0.0231%" height="15" fill="rgb(229,126,4)" fg:x="301969" fg:w="77"/><text x="90.6894%" y="671.50"></text></g><g><title>IOGPUMetalSuballocatorFree (74 samples, 0.02%)</title><rect x="90.4403%" y="645" width="0.0222%" height="15" fill="rgb(222,92,36)" fg:x="301972" fg:w="74"/><text x="90.6903%" y="655.50"></text></g><g><title>-[IOGPUMetalResource .cxx_destruct] (48 samples, 0.01%)</title><rect x="90.4861%" y="581" width="0.0144%" height="15" fill="rgb(216,39,41)" fg:x="302125" fg:w="48"/><text x="90.7361%" y="591.50"></text></g><g><title>objc_destroyWeak (45 samples, 0.01%)</title><rect x="90.4870%" y="565" width="0.0135%" height="15" fill="rgb(253,127,28)" fg:x="302128" fg:w="45"/><text x="90.7370%" y="575.50"></text></g><g><title>weak_unregister_no_lock (41 samples, 0.01%)</title><rect x="90.4882%" y="549" width="0.0123%" height="15" fill="rgb(249,152,51)" fg:x="302132" fg:w="41"/><text x="90.7382%" y="559.50"></text></g><g><title>object_cxxDestructFromClass(objc_object*, objc_class*) (80 samples, 0.02%)</title><rect x="90.4831%" y="597" width="0.0240%" height="15" fill="rgb(209,123,42)" fg:x="302115" fg:w="80"/><text x="90.7331%" y="607.50"></text></g><g><title>objc_destructInstance_nonnull_realized(objc_object*) (110 samples, 0.03%)</title><rect x="90.4744%" y="613" width="0.0329%" height="15" fill="rgb(241,118,22)" fg:x="302086" fg:w="110"/><text x="90.7244%" y="623.50"></text></g><g><title>_objc_rootDealloc (111 samples, 0.03%)</title><rect x="90.4744%" y="629" width="0.0332%" height="15" fill="rgb(208,25,7)" fg:x="302086" fg:w="111"/><text x="90.7244%" y="639.50"></text></g><g><title>free_tiny (71 samples, 0.02%)</title><rect x="90.5086%" y="629" width="0.0213%" height="15" fill="rgb(243,144,39)" fg:x="302200" fg:w="71"/><text x="90.7586%" y="639.50"></text></g><g><title>tiny_free_no_lock (40 samples, 0.01%)</title><rect x="90.5179%" y="613" width="0.0120%" height="15" fill="rgb(250,50,5)" fg:x="302231" fg:w="40"/><text x="90.7679%" y="623.50"></text></g><g><title>-[_MTLObjectWithLabel dealloc] (212 samples, 0.06%)</title><rect x="90.4672%" y="645" width="0.0635%" height="15" fill="rgb(207,67,11)" fg:x="302062" fg:w="212"/><text x="90.7172%" y="655.50"></text></g><g><title>free_tiny (126 samples, 0.04%)</title><rect x="90.5643%" y="629" width="0.0377%" height="15" fill="rgb(245,204,40)" fg:x="302386" fg:w="126"/><text x="90.8143%" y="639.50"></text></g><g><title>tiny_free_no_lock (80 samples, 0.02%)</title><rect x="90.5781%" y="613" width="0.0240%" height="15" fill="rgb(238,228,24)" fg:x="302432" fg:w="80"/><text x="90.8281%" y="623.50"></text></g><g><title>ioGPUResourceFinalize (1,297 samples, 0.39%)</title><rect x="90.6020%" y="629" width="0.3885%" height="15" fill="rgb(217,116,22)" fg:x="302512" fg:w="1297"/><text x="90.8520%" y="639.50"></text></g><g><title>iokit_user_client_trap (1,272 samples, 0.38%)</title><rect x="90.6095%" y="613" width="0.3810%" height="15" fill="rgb(234,98,12)" fg:x="302537" fg:w="1272"/><text x="90.8595%" y="623.50"></text></g><g><title>_CFRelease (1,529 samples, 0.46%)</title><rect x="90.5391%" y="645" width="0.4579%" height="15" fill="rgb(242,170,50)" fg:x="302302" fg:w="1529"/><text x="90.7891%" y="655.50"></text></g><g><title>objc_storeWeak (39 samples, 0.01%)</title><rect x="91.0034%" y="645" width="0.0117%" height="15" fill="rgb(235,7,5)" fg:x="303852" fg:w="39"/><text x="91.2534%" y="655.50"></text></g><g><title>-[IOGPUMetalResource dealloc] (1,846 samples, 0.55%)</title><rect x="90.4625%" y="661" width="0.5529%" height="15" fill="rgb(241,114,28)" fg:x="302046" fg:w="1846"/><text x="90.7125%" y="671.50"></text></g><g><title>-[IOGPUMetalBuffer dealloc] (1,985 samples, 0.59%)</title><rect x="90.4343%" y="677" width="0.5945%" height="15" fill="rgb(246,112,42)" fg:x="301952" fg:w="1985"/><text x="90.6843%" y="687.50"></text></g><g><title>-[AGXBuffer dealloc] (2,000 samples, 0.60%)</title><rect x="90.4328%" y="693" width="0.5990%" height="15" fill="rgb(248,228,14)" fg:x="301947" fg:w="2000"/><text x="90.6828%" y="703.50"></text></g><g><title>-[AGXG15GFamilyBuffer dealloc] (2,009 samples, 0.60%)</title><rect x="90.4316%" y="709" width="0.6017%" height="15" fill="rgb(208,133,18)" fg:x="301943" fg:w="2009"/><text x="90.6816%" y="719.50"></text></g><g><title>free_tiny (70 samples, 0.02%)</title><rect x="91.0435%" y="693" width="0.0210%" height="15" fill="rgb(207,35,49)" fg:x="303986" fg:w="70"/><text x="91.2935%" y="703.50"></text></g><g><title>tiny_free_no_lock (48 samples, 0.01%)</title><rect x="91.0501%" y="677" width="0.0144%" height="15" fill="rgb(205,68,36)" fg:x="304008" fg:w="48"/><text x="91.3001%" y="687.50"></text></g><g><title>&lt;wgpu_core::resource::FlushedStagingBuffer as core::ops::drop::Drop&gt;::drop (2,116 samples, 0.63%)</title><rect x="90.4310%" y="725" width="0.6337%" height="15" fill="rgb(245,62,40)" fg:x="301941" fg:w="2116"/><text x="90.6810%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (91 samples, 0.03%)</title><rect x="91.0375%" y="709" width="0.0273%" height="15" fill="rgb(228,27,24)" fg:x="303966" fg:w="91"/><text x="91.2875%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::device::queue::TempResource]&gt; (2,120 samples, 0.63%)</title><rect x="90.4301%" y="741" width="0.6349%" height="15" fill="rgb(253,19,12)" fg:x="301938" fg:w="2120"/><text x="90.6801%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;alloc::sync::Arc&lt;wgpu_core::resource::Buffer&gt;&gt;]&gt; (64 samples, 0.02%)</title><rect x="91.0758%" y="725" width="0.0192%" height="15" fill="rgb(232,28,20)" fg:x="304094" fg:w="64"/><text x="91.3258%" y="735.50"></text></g><g><title>free_tiny (75 samples, 0.02%)</title><rect x="91.1375%" y="597" width="0.0225%" height="15" fill="rgb(218,35,51)" fg:x="304300" fg:w="75"/><text x="91.3875%" y="607.50"></text></g><g><title>tiny_free_no_lock (40 samples, 0.01%)</title><rect x="91.1480%" y="581" width="0.0120%" height="15" fill="rgb(212,90,40)" fg:x="304335" fg:w="40"/><text x="91.3980%" y="591.50"></text></g><g><title>_CFRelease (122 samples, 0.04%)</title><rect x="91.1300%" y="613" width="0.0365%" height="15" fill="rgb(220,172,12)" fg:x="304275" fg:w="122"/><text x="91.3800%" y="623.50"></text></g><g><title>free_tiny (67 samples, 0.02%)</title><rect x="91.1744%" y="613" width="0.0201%" height="15" fill="rgb(226,159,20)" fg:x="304423" fg:w="67"/><text x="91.4244%" y="623.50"></text></g><g><title>tiny_free_no_lock (35 samples, 0.01%)</title><rect x="91.1839%" y="597" width="0.0105%" height="15" fill="rgb(234,205,16)" fg:x="304455" fg:w="35"/><text x="91.4339%" y="607.50"></text></g><g><title>-[_MTLObjectWithLabel dealloc] (235 samples, 0.07%)</title><rect x="91.1261%" y="629" width="0.0704%" height="15" fill="rgb(207,9,39)" fg:x="304262" fg:w="235"/><text x="91.3761%" y="639.50"></text></g><g><title>-[_MTLCommandBuffer dealloc] (289 samples, 0.09%)</title><rect x="91.1223%" y="645" width="0.0866%" height="15" fill="rgb(249,143,15)" fg:x="304249" fg:w="289"/><text x="91.3723%" y="655.50"></text></g><g><title>-[IOGPUMetalCommandBuffer dealloc] (324 samples, 0.10%)</title><rect x="91.1190%" y="661" width="0.0970%" height="15" fill="rgb(253,133,29)" fg:x="304238" fg:w="324"/><text x="91.3690%" y="671.50"></text></g><g><title>tiny_free_list_add_ptr (38 samples, 0.01%)</title><rect x="91.2648%" y="629" width="0.0114%" height="15" fill="rgb(221,187,0)" fg:x="304725" fg:w="38"/><text x="91.5148%" y="639.50"></text></g><g><title>free_tiny (170 samples, 0.05%)</title><rect x="91.2280%" y="661" width="0.0509%" height="15" fill="rgb(205,204,26)" fg:x="304602" fg:w="170"/><text x="91.4780%" y="671.50"></text></g><g><title>tiny_free_no_lock (90 samples, 0.03%)</title><rect x="91.2519%" y="645" width="0.0270%" height="15" fill="rgb(224,68,54)" fg:x="304682" fg:w="90"/><text x="91.5019%" y="655.50"></text></g><g><title>-[AGXG15GFamilyCommandBuffer dealloc] (583 samples, 0.17%)</title><rect x="91.1121%" y="677" width="0.1746%" height="15" fill="rgb(209,67,4)" fg:x="304215" fg:w="583"/><text x="91.3621%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn wgpu_hal::dynamic::DynCommandBuffer&gt;&gt; (605 samples, 0.18%)</title><rect x="91.1118%" y="693" width="0.1812%" height="15" fill="rgb(228,229,18)" fg:x="304214" fg:w="605"/><text x="91.3618%" y="703.50"></text></g><g><title>&lt;wgpu_core::command::CommandEncoder as core::ops::drop::Drop&gt;::drop (728 samples, 0.22%)</title><rect x="91.1070%" y="709" width="0.2180%" height="15" fill="rgb(231,89,13)" fg:x="304198" fg:w="728"/><text x="91.3570%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (87 samples, 0.03%)</title><rect x="91.2990%" y="693" width="0.0261%" height="15" fill="rgb(210,182,18)" fg:x="304839" fg:w="87"/><text x="91.5490%" y="703.50"></text></g><g><title>free_tiny (68 samples, 0.02%)</title><rect x="91.3046%" y="677" width="0.0204%" height="15" fill="rgb(240,105,2)" fg:x="304858" fg:w="68"/><text x="91.5546%" y="687.50"></text></g><g><title>tiny_free_no_lock (58 samples, 0.02%)</title><rect x="91.3076%" y="661" width="0.0174%" height="15" fill="rgb(207,170,50)" fg:x="304868" fg:w="58"/><text x="91.5576%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::CommandEncoder&gt; (736 samples, 0.22%)</title><rect x="91.1058%" y="725" width="0.2204%" height="15" fill="rgb(232,133,24)" fg:x="304194" fg:w="736"/><text x="91.3558%" y="735.50"></text></g><g><title>&lt;wgpu_core::binding_model::BindGroup as core::ops::drop::Drop&gt;::drop (86 samples, 0.03%)</title><rect x="91.3490%" y="677" width="0.0258%" height="15" fill="rgb(235,166,27)" fg:x="305006" fg:w="86"/><text x="91.5990%" y="687.50"></text></g><g><title>wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::destroy_bind_group (52 samples, 0.02%)</title><rect x="91.3592%" y="661" width="0.0156%" height="15" fill="rgb(209,19,13)" fg:x="305040" fg:w="52"/><text x="91.6092%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_hal::metal::BindGroup&gt; (52 samples, 0.02%)</title><rect x="91.3592%" y="645" width="0.0156%" height="15" fill="rgb(226,79,39)" fg:x="305040" fg:w="52"/><text x="91.6092%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::binding_model::BindGroup&gt; (70 samples, 0.02%)</title><rect x="91.3756%" y="677" width="0.0210%" height="15" fill="rgb(222,163,10)" fg:x="305095" fg:w="70"/><text x="91.6256%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (204 samples, 0.06%)</title><rect x="91.3478%" y="693" width="0.0611%" height="15" fill="rgb(214,44,19)" fg:x="305002" fg:w="204"/><text x="91.5978%" y="703.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37 samples, 0.01%)</title><rect x="91.3978%" y="677" width="0.0111%" height="15" fill="rgb(210,217,13)" fg:x="305169" fg:w="37"/><text x="91.6478%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (286 samples, 0.09%)</title><rect x="91.3268%" y="709" width="0.0857%" height="15" fill="rgb(237,61,54)" fg:x="304932" fg:w="286"/><text x="91.5768%" y="719.50"></text></g><g><title>free_tiny (65 samples, 0.02%)</title><rect x="91.4406%" y="693" width="0.0195%" height="15" fill="rgb(226,184,24)" fg:x="305312" fg:w="65"/><text x="91.6906%" y="703.50"></text></g><g><title>tiny_free_no_lock (39 samples, 0.01%)</title><rect x="91.4484%" y="677" width="0.0117%" height="15" fill="rgb(223,226,4)" fg:x="305338" fg:w="39"/><text x="91.6984%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&gt; (449 samples, 0.13%)</title><rect x="91.3262%" y="725" width="0.1345%" height="15" fill="rgb(210,26,41)" fg:x="304930" fg:w="449"/><text x="91.5762%" y="735.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (73 samples, 0.02%)</title><rect x="91.4388%" y="709" width="0.0219%" height="15" fill="rgb(220,221,6)" fg:x="305306" fg:w="73"/><text x="91.6888%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (38 samples, 0.01%)</title><rect x="91.4631%" y="693" width="0.0114%" height="15" fill="rgb(225,89,49)" fg:x="305387" fg:w="38"/><text x="91.7131%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.01%)</title><rect x="91.4625%" y="709" width="0.0135%" height="15" fill="rgb(218,70,45)" fg:x="305385" fg:w="45"/><text x="91.7125%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::stateless::StatelessTracker&lt;wgpu_core::resource::TextureView&gt;&gt; (69 samples, 0.02%)</title><rect x="91.4625%" y="725" width="0.0207%" height="15" fill="rgb(238,166,21)" fg:x="305385" fg:w="69"/><text x="91.7125%" y="735.50"></text></g><g><title>free_tiny (52 samples, 0.02%)</title><rect x="91.5185%" y="709" width="0.0156%" height="15" fill="rgb(224,141,44)" fg:x="305572" fg:w="52"/><text x="91.7685%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::device::queue::EncoderInFlight&gt; (1,567 samples, 0.47%)</title><rect x="91.0650%" y="741" width="0.4693%" height="15" fill="rgb(230,12,49)" fg:x="304058" fg:w="1567"/><text x="91.3150%" y="751.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (129 samples, 0.04%)</title><rect x="91.4957%" y="725" width="0.0386%" height="15" fill="rgb(212,174,12)" fg:x="305496" fg:w="129"/><text x="91.7457%" y="735.50"></text></g><g><title>core::mem::drop (3,709 samples, 1.11%)</title><rect x="90.4289%" y="757" width="1.1108%" height="15" fill="rgb(246,67,9)" fg:x="301934" fg:w="3709"/><text x="90.6789%" y="767.50"></text></g><g><title>wgpu_core::device::resource::Device::maintain (3,799 samples, 1.14%)</title><rect x="90.4175%" y="773" width="1.1378%" height="15" fill="rgb(239,35,23)" fg:x="301896" fg:w="3799"/><text x="90.6675%" y="783.50"></text></g><g><title>wgpu_core::device::queue::Queue::submit (5,674 samples, 1.70%)</title><rect x="89.8575%" y="789" width="1.6994%" height="15" fill="rgb(211,167,0)" fg:x="300026" fg:w="5674"/><text x="90.1075%" y="799.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::submit (6,957 samples, 2.08%)</title><rect x="89.4933%" y="821" width="2.0836%" height="15" fill="rgb(225,119,45)" fg:x="298810" fg:w="6957"/><text x="89.7433%" y="831.50">&lt;..</text></g><g><title>wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_submit (6,950 samples, 2.08%)</title><rect x="89.4954%" y="805" width="2.0815%" height="15" fill="rgb(210,162,6)" fg:x="298817" fg:w="6950"/><text x="89.7454%" y="815.50">w..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.01%)</title><rect x="91.5841%" y="773" width="0.0126%" height="15" fill="rgb(208,118,35)" fg:x="305791" fg:w="42"/><text x="91.8341%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.02%)</title><rect x="91.5769%" y="805" width="0.0207%" height="15" fill="rgb(239,4,53)" fg:x="305767" fg:w="69"/><text x="91.8269%" y="815.50"></text></g><g><title>wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::command_buffer_drop (45 samples, 0.01%)</title><rect x="91.5841%" y="789" width="0.0135%" height="15" fill="rgb(213,130,21)" fg:x="305791" fg:w="45"/><text x="91.8341%" y="799.50"></text></g><g><title>core::mem::drop (70 samples, 0.02%)</title><rect x="91.5769%" y="821" width="0.0210%" height="15" fill="rgb(235,148,0)" fg:x="305767" fg:w="70"/><text x="91.8269%" y="831.50"></text></g><g><title>wgpu::api::queue::Queue::submit (7,064 samples, 2.12%)</title><rect x="89.4834%" y="837" width="2.1157%" height="15" fill="rgb(244,224,18)" fg:x="298777" fg:w="7064"/><text x="89.7334%" y="847.50">w..</text></g><g><title>core::ops::function::FnMut::call_mut (34,575 samples, 10.36%)</title><rect x="81.2454%" y="853" width="10.3552%" height="15" fill="rgb(211,214,4)" fg:x="271271" fg:w="34575"/><text x="81.4954%" y="863.50">core::ops::func..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}}::_{{closure}} (35,776 samples, 10.71%)</title><rect x="80.8968%" y="901" width="10.7149%" height="15" fill="rgb(206,119,25)" fg:x="270107" fg:w="35776"/><text x="81.1468%" y="911.50">bevy_ecs::schedu..</text></g><g><title>bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run (35,776 samples, 10.71%)</title><rect x="80.8968%" y="885" width="10.7149%" height="15" fill="rgb(243,93,47)" fg:x="270107" fg:w="35776"/><text x="81.1468%" y="895.50">bevy_ecs::schedu..</text></g><g><title>bevy_ecs::system::system::System::run_without_applying_deferred (35,770 samples, 10.71%)</title><rect x="80.8986%" y="869" width="10.7131%" height="15" fill="rgb(224,194,6)" fg:x="270113" fg:w="35770"/><text x="81.1486%" y="879.50">bevy_ecs::system..</text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="91.6248%" y="869" width="0.0108%" height="15" fill="rgb(243,229,6)" fg:x="305927" fg:w="36"/><text x="91.8748%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::archetype_component_access (47 samples, 0.01%)</title><rect x="91.6548%" y="853" width="0.0141%" height="15" fill="rgb(207,23,50)" fg:x="306027" fg:w="47"/><text x="91.9048%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (102 samples, 0.03%)</title><rect x="91.6688%" y="853" width="0.0305%" height="15" fill="rgb(253,192,32)" fg:x="306074" fg:w="102"/><text x="91.9188%" y="863.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_resources_compatible (38 samples, 0.01%)</title><rect x="91.7102%" y="853" width="0.0114%" height="15" fill="rgb(213,21,6)" fg:x="306212" fg:w="38"/><text x="91.9602%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run (309 samples, 0.09%)</title><rect x="91.6413%" y="869" width="0.0925%" height="15" fill="rgb(243,151,13)" fg:x="305982" fg:w="309"/><text x="91.8913%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::signal_dependents (39 samples, 0.01%)</title><rect x="91.7440%" y="853" width="0.0117%" height="15" fill="rgb(233,165,41)" fg:x="306325" fg:w="39"/><text x="91.9940%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::finish_system_and_handle_dependents (84 samples, 0.03%)</title><rect x="91.7338%" y="869" width="0.0252%" height="15" fill="rgb(246,176,45)" fg:x="306291" fg:w="84"/><text x="91.9838%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (61 samples, 0.02%)</title><rect x="91.7847%" y="853" width="0.0183%" height="15" fill="rgb(217,170,52)" fg:x="306461" fg:w="61"/><text x="92.0347%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::should_run (138 samples, 0.04%)</title><rect x="91.7647%" y="869" width="0.0413%" height="15" fill="rgb(214,203,54)" fg:x="306394" fg:w="138"/><text x="92.0147%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (63 samples, 0.02%)</title><rect x="91.8060%" y="869" width="0.0189%" height="15" fill="rgb(248,215,49)" fg:x="306532" fg:w="63"/><text x="92.0560%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (60 samples, 0.02%)</title><rect x="91.8249%" y="869" width="0.0180%" height="15" fill="rgb(208,46,10)" fg:x="306595" fg:w="60"/><text x="92.0749%" y="879.50"></text></g><g><title>__psynch_cvsignal (365 samples, 0.11%)</title><rect x="91.8605%" y="773" width="0.1093%" height="15" fill="rgb(254,5,31)" fg:x="306714" fg:w="365"/><text x="92.1105%" y="783.50"></text></g><g><title>std::sys::pal::unix::sync::condvar::Condvar::notify_one (380 samples, 0.11%)</title><rect x="91.8575%" y="805" width="0.1138%" height="15" fill="rgb(222,104,33)" fg:x="306704" fg:w="380"/><text x="92.1075%" y="815.50"></text></g><g><title>pthread_cond_signal (378 samples, 0.11%)</title><rect x="91.8581%" y="789" width="0.1132%" height="15" fill="rgb(248,49,16)" fg:x="306706" fg:w="378"/><text x="92.1081%" y="799.50"></text></g><g><title>alloc::task::raw_waker::wake (390 samples, 0.12%)</title><rect x="91.8551%" y="821" width="0.1168%" height="15" fill="rgb(232,198,41)" fg:x="306696" fg:w="390"/><text x="92.1051%" y="831.50"></text></g><g><title>async_executor::Executor::schedule::_{{closure}} (455 samples, 0.14%)</title><rect x="91.8551%" y="837" width="0.1363%" height="15" fill="rgb(214,125,3)" fg:x="306696" fg:w="455"/><text x="92.1051%" y="847.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (693 samples, 0.21%)</title><rect x="91.8539%" y="853" width="0.2076%" height="15" fill="rgb(229,220,28)" fg:x="306692" fg:w="693"/><text x="92.1039%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (219 samples, 0.07%)</title><rect x="91.9959%" y="837" width="0.0656%" height="15" fill="rgb(222,64,37)" fg:x="307166" fg:w="219"/><text x="92.2459%" y="847.50"></text></g><g><title>szone_malloc_should_clear (112 samples, 0.03%)</title><rect x="92.0747%" y="837" width="0.0335%" height="15" fill="rgb(249,184,13)" fg:x="307429" fg:w="112"/><text x="92.3247%" y="847.50"></text></g><g><title>tiny_malloc_should_clear (102 samples, 0.03%)</title><rect x="92.0777%" y="821" width="0.0305%" height="15" fill="rgb(252,176,6)" fg:x="307439" fg:w="102"/><text x="92.3277%" y="831.50"></text></g><g><title>tiny_malloc_from_free_list (71 samples, 0.02%)</title><rect x="92.0869%" y="805" width="0.0213%" height="15" fill="rgb(228,153,7)" fg:x="307470" fg:w="71"/><text x="92.3369%" y="815.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (125 samples, 0.04%)</title><rect x="92.0717%" y="853" width="0.0374%" height="15" fill="rgb(242,193,5)" fg:x="307419" fg:w="125"/><text x="92.3217%" y="863.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (733 samples, 0.22%)</title><rect x="92.1109%" y="837" width="0.2195%" height="15" fill="rgb(232,140,9)" fg:x="307550" fg:w="733"/><text x="92.3609%" y="847.50"></text></g><g><title>_pthread_mutex_firstfit_lock_wait (715 samples, 0.21%)</title><rect x="92.1163%" y="821" width="0.2141%" height="15" fill="rgb(213,222,16)" fg:x="307568" fg:w="715"/><text x="92.3663%" y="831.50"></text></g><g><title>__psynch_mutexwait (708 samples, 0.21%)</title><rect x="92.1184%" y="805" width="0.2120%" height="15" fill="rgb(222,75,50)" fg:x="307575" fg:w="708"/><text x="92.3684%" y="815.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (766 samples, 0.23%)</title><rect x="92.1091%" y="853" width="0.2294%" height="15" fill="rgb(205,180,2)" fg:x="307544" fg:w="766"/><text x="92.3591%" y="863.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (832 samples, 0.25%)</title><rect x="92.3388%" y="837" width="0.2492%" height="15" fill="rgb(216,34,7)" fg:x="308311" fg:w="832"/><text x="92.5888%" y="847.50"></text></g><g><title>_pthread_mutex_firstfit_wake (826 samples, 0.25%)</title><rect x="92.3406%" y="821" width="0.2474%" height="15" fill="rgb(253,16,32)" fg:x="308317" fg:w="826"/><text x="92.5906%" y="831.50"></text></g><g><title>__psynch_mutexdrop (824 samples, 0.25%)</title><rect x="92.3412%" y="805" width="0.2468%" height="15" fill="rgb(208,97,28)" fg:x="308319" fg:w="824"/><text x="92.5912%" y="815.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (850 samples, 0.25%)</title><rect x="92.3385%" y="853" width="0.2546%" height="15" fill="rgb(225,92,11)" fg:x="308310" fg:w="850"/><text x="92.5885%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (2,494 samples, 0.75%)</title><rect x="91.8467%" y="869" width="0.7470%" height="15" fill="rgb(243,38,12)" fg:x="306668" fg:w="2494"/><text x="92.0967%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.02%)</title><rect x="92.6015%" y="869" width="0.0162%" height="15" fill="rgb(208,139,16)" fg:x="309188" fg:w="54"/><text x="92.8515%" y="879.50"></text></g><g><title>_platform_memmove (45 samples, 0.01%)</title><rect x="92.6042%" y="853" width="0.0135%" height="15" fill="rgb(227,24,9)" fg:x="309197" fg:w="45"/><text x="92.8542%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::Context::system_completed (3,417 samples, 1.02%)</title><rect x="91.6170%" y="885" width="1.0234%" height="15" fill="rgb(206,62,11)" fg:x="305901" fg:w="3417"/><text x="91.8670%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;S&gt; as bevy_ecs::system::system::System&gt;::apply_deferred (98 samples, 0.03%)</title><rect x="92.6467%" y="869" width="0.0294%" height="15" fill="rgb(228,134,27)" fg:x="309339" fg:w="98"/><text x="92.8967%" y="879.50"></text></g><g><title>core::intrinsics::copy (39 samples, 0.01%)</title><rect x="92.7264%" y="805" width="0.0117%" height="15" fill="rgb(205,55,33)" fg:x="309605" fg:w="39"/><text x="92.9764%" y="815.50"></text></g><g><title>_platform_memmove (39 samples, 0.01%)</title><rect x="92.7264%" y="789" width="0.0117%" height="15" fill="rgb(243,75,43)" fg:x="309605" fg:w="39"/><text x="92.9764%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (66 samples, 0.02%)</title><rect x="92.7189%" y="821" width="0.0198%" height="15" fill="rgb(223,27,42)" fg:x="309580" fg:w="66"/><text x="92.9689%" y="831.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::insert (144 samples, 0.04%)</title><rect x="92.7009%" y="837" width="0.0431%" height="15" fill="rgb(232,189,33)" fg:x="309520" fg:w="144"/><text x="92.9509%" y="847.50"></text></g><g><title>bevy_ecs::bundle::BundleInserter::new (43 samples, 0.01%)</title><rect x="92.7440%" y="837" width="0.0129%" height="15" fill="rgb(210,9,39)" fg:x="309664" fg:w="43"/><text x="92.9940%" y="847.50"></text></g><g><title>bevy_ecs::storage::blob_array::BlobArray::replace_unchecked (48 samples, 0.01%)</title><rect x="92.7680%" y="837" width="0.0144%" height="15" fill="rgb(242,85,26)" fg:x="309744" fg:w="48"/><text x="93.0180%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="92.7824%" y="805" width="0.0153%" height="15" fill="rgb(248,44,4)" fg:x="309792" fg:w="51"/><text x="93.0324%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (51 samples, 0.02%)</title><rect x="92.7824%" y="789" width="0.0153%" height="15" fill="rgb(250,96,46)" fg:x="309792" fg:w="51"/><text x="93.0324%" y="799.50"></text></g><g><title>&lt;wgpu::backend::wgpu_core::CoreBindGroup as core::ops::drop::Drop&gt;::drop (53 samples, 0.02%)</title><rect x="92.7824%" y="821" width="0.0159%" height="15" fill="rgb(229,116,26)" fg:x="309792" fg:w="53"/><text x="93.0324%" y="831.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::replace_unchecked (90 samples, 0.03%)</title><rect x="92.7824%" y="837" width="0.0270%" height="15" fill="rgb(246,94,34)" fg:x="309792" fg:w="90"/><text x="93.0324%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (64 samples, 0.02%)</title><rect x="92.8581%" y="837" width="0.0192%" height="15" fill="rgb(251,73,21)" fg:x="310045" fg:w="64"/><text x="93.1081%" y="847.50"></text></g><g><title>bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued (675 samples, 0.20%)</title><rect x="92.6817%" y="853" width="0.2022%" height="15" fill="rgb(254,121,25)" fg:x="309456" fg:w="675"/><text x="92.9317%" y="863.50"></text></g><g><title>bevy_ecs::world::command_queue::CommandQueue::apply (699 samples, 0.21%)</title><rect x="92.6770%" y="869" width="0.2093%" height="15" fill="rgb(215,161,49)" fg:x="309440" fg:w="699"/><text x="92.9270%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (79 samples, 0.02%)</title><rect x="92.8881%" y="869" width="0.0237%" height="15" fill="rgb(221,43,13)" fg:x="310145" fg:w="79"/><text x="93.1381%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_deferred::_{{closure}} (907 samples, 0.27%)</title><rect x="92.6413%" y="885" width="0.2716%" height="15" fill="rgb(249,5,37)" fg:x="309321" fg:w="907"/><text x="92.8913%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_exclusive_system_task::_{{closure}} (4,359 samples, 1.31%)</title><rect x="91.6116%" y="901" width="1.3055%" height="15" fill="rgb(226,25,44)" fg:x="305883" fg:w="4359"/><text x="91.8616%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run::_{{closure}} (40,185 samples, 12.04%)</title><rect x="80.8956%" y="917" width="12.0354%" height="15" fill="rgb(238,189,16)" fg:x="270103" fg:w="40185"/><text x="81.1456%" y="927.50">async_task::raw::R..</text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (44 samples, 0.01%)</title><rect x="92.9177%" y="901" width="0.0132%" height="15" fill="rgb(251,186,8)" fg:x="310244" fg:w="44"/><text x="93.1677%" y="911.50"></text></g><g><title>free_tiny (38 samples, 0.01%)</title><rect x="92.9195%" y="885" width="0.0114%" height="15" fill="rgb(254,34,31)" fg:x="310250" fg:w="38"/><text x="93.1695%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (66 samples, 0.02%)</title><rect x="92.9393%" y="917" width="0.0198%" height="15" fill="rgb(225,215,27)" fg:x="310316" fg:w="66"/><text x="93.1893%" y="927.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (40,334 samples, 12.08%)</title><rect x="80.8884%" y="933" width="12.0800%" height="15" fill="rgb(221,192,48)" fg:x="270079" fg:w="40334"/><text x="81.1384%" y="943.50">async_task::runnab..</text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::_{{closure}}::_{{closure}}::_{{closure}} (40,508 samples, 12.13%)</title><rect x="80.8420%" y="949" width="12.1321%" height="15" fill="rgb(219,137,20)" fg:x="269924" fg:w="40508"/><text x="81.0920%" y="959.50">bevy_tasks::task_p..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (39 samples, 0.01%)</title><rect x="92.9741%" y="949" width="0.0117%" height="15" fill="rgb(219,84,11)" fg:x="310432" fg:w="39"/><text x="93.2241%" y="959.50"></text></g><g><title>__psynch_cvwait (4,256 samples, 1.27%)</title><rect x="93.0909%" y="901" width="1.2747%" height="15" fill="rgb(224,10,23)" fg:x="310822" fg:w="4256"/><text x="93.3409%" y="911.50"></text></g><g><title>_pthread_cond_wait (4,361 samples, 1.31%)</title><rect x="93.0738%" y="917" width="1.3061%" height="15" fill="rgb(248,22,39)" fg:x="310765" fg:w="4361"/><text x="93.3238%" y="927.50"></text></g><g><title>parking::Parker::park (4,618 samples, 1.38%)</title><rect x="93.0001%" y="949" width="1.3831%" height="15" fill="rgb(212,154,20)" fg:x="310519" fg:w="4618"/><text x="93.2501%" y="959.50"></text></g><g><title>parking::Inner::park (4,613 samples, 1.38%)</title><rect x="93.0016%" y="933" width="1.3816%" height="15" fill="rgb(236,199,50)" fg:x="310524" fg:w="4613"/><text x="93.2516%" y="943.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (48,473 samples, 14.52%)</title><rect x="79.8659%" y="965" width="14.5176%" height="15" fill="rgb(211,9,17)" fg:x="266665" fg:w="48473"/><text x="80.1159%" y="975.50">bevy_ecs::schedule::sc..</text></g><g><title>bevy_ecs::world::World::run_schedule::_{{closure}} (48,474 samples, 14.52%)</title><rect x="79.8659%" y="981" width="14.5179%" height="15" fill="rgb(243,216,36)" fg:x="266665" fg:w="48474"/><text x="80.1159%" y="991.50">bevy_ecs::world::World..</text></g><g><title>bevy_app::sub_app::SubApp::update (48,504 samples, 14.53%)</title><rect x="79.8629%" y="997" width="14.5269%" height="15" fill="rgb(250,2,10)" fg:x="266655" fg:w="48504"/><text x="80.1129%" y="1007.50">bevy_app::sub_app::Sub..</text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}}::_{{closure}}::_{{closure}} (34 samples, 0.01%)</title><rect x="94.3931%" y="997" width="0.0102%" height="15" fill="rgb(226,50,48)" fg:x="315170" fg:w="34"/><text x="94.6431%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::run&lt;!,bevy_tasks::task_pool::TaskPool::execute_global_scope&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt;,bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_render::pipelined_rendering::PipelinedRenderingPlugin as bevy_app::plugin::Plugin&gt;::cleanup::{{closure}}::{{closure}},core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt;&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (49 samples, 0.01%)</title><rect x="94.4033%" y="981" width="0.0147%" height="15" fill="rgb(243,81,16)" fg:x="315204" fg:w="49"/><text x="94.6533%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_global_scope::_{{closure}} (51 samples, 0.02%)</title><rect x="94.4033%" y="997" width="0.0153%" height="15" fill="rgb(250,14,2)" fg:x="315204" fg:w="51"/><text x="94.6533%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::_{{closure}} (39 samples, 0.01%)</title><rect x="94.4194%" y="997" width="0.0117%" height="15" fill="rgb(233,135,29)" fg:x="315258" fg:w="39"/><text x="94.6694%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (253 samples, 0.08%)</title><rect x="94.4368%" y="997" width="0.0758%" height="15" fill="rgb(224,64,43)" fg:x="315316" fg:w="253"/><text x="94.6868%" y="1007.50"></text></g><g><title>core::cmp::impls::_&lt;impl core::cmp::PartialOrd for i32&gt;::lt (46 samples, 0.01%)</title><rect x="94.5186%" y="997" width="0.0138%" height="15" fill="rgb(238,84,13)" fg:x="315589" fg:w="46"/><text x="94.7686%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.01%)</title><rect x="94.5323%" y="997" width="0.0141%" height="15" fill="rgb(253,48,26)" fg:x="315635" fg:w="47"/><text x="94.7823%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;async_task::runnable::Runnable,concurrent_queue::PopError&gt;&gt; (85 samples, 0.03%)</title><rect x="94.5611%" y="997" width="0.0255%" height="15" fill="rgb(205,223,31)" fg:x="315731" fg:w="85"/><text x="94.8111%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (88 samples, 0.03%)</title><rect x="94.6000%" y="997" width="0.0264%" height="15" fill="rgb(221,41,32)" fg:x="315861" fg:w="88"/><text x="94.8500%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (97 samples, 0.03%)</title><rect x="94.6264%" y="997" width="0.0291%" height="15" fill="rgb(213,158,31)" fg:x="315949" fg:w="97"/><text x="94.8764%" y="1007.50"></text></g><g><title>__psynch_cvwait (15,480 samples, 4.64%)</title><rect x="94.9957%" y="949" width="4.6362%" height="15" fill="rgb(245,126,43)" fg:x="317182" fg:w="15480"/><text x="95.2457%" y="959.50">__psy..</text></g><g><title>_pthread_mutex_droplock (52 samples, 0.02%)</title><rect x="99.6319%" y="949" width="0.0156%" height="15" fill="rgb(227,7,22)" fg:x="332662" fg:w="52"/><text x="99.8819%" y="959.50"></text></g><g><title>pthread_mutex_lock (86 samples, 0.03%)</title><rect x="99.6475%" y="949" width="0.0258%" height="15" fill="rgb(252,90,44)" fg:x="332714" fg:w="86"/><text x="99.8975%" y="959.50"></text></g><g><title>_pthread_cond_wait (15,930 samples, 4.77%)</title><rect x="94.9214%" y="965" width="4.7710%" height="15" fill="rgb(253,91,0)" fg:x="316934" fg:w="15930"/><text x="95.1714%" y="975.50">_pthre..</text></g><g><title>pthread_testcancel (64 samples, 0.02%)</title><rect x="99.6732%" y="949" width="0.0192%" height="15" fill="rgb(252,175,49)" fg:x="332800" fg:w="64"/><text x="99.9232%" y="959.50"></text></g><g><title>parking::Parker::park (16,756 samples, 5.02%)</title><rect x="94.6911%" y="997" width="5.0184%" height="15" fill="rgb(246,150,1)" fg:x="316165" fg:w="16756"/><text x="94.9411%" y="1007.50">parkin..</text></g><g><title>parking::Inner::park (16,553 samples, 4.96%)</title><rect x="94.7519%" y="981" width="4.9576%" height="15" fill="rgb(241,192,25)" fg:x="316368" fg:w="16553"/><text x="95.0019%" y="991.50">parkin..</text></g><g><title>pthread_mutex_unlock (38 samples, 0.01%)</title><rect x="99.6981%" y="965" width="0.0114%" height="15" fill="rgb(239,187,11)" fg:x="332883" fg:w="38"/><text x="99.9481%" y="975.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (59 samples, 0.02%)</title><rect x="99.7143%" y="997" width="0.0177%" height="15" fill="rgb(218,202,51)" fg:x="332937" fg:w="59"/><text x="99.9643%" y="1007.50"></text></g><g><title>pthread_mutex_lock (34 samples, 0.01%)</title><rect x="99.7218%" y="981" width="0.0102%" height="15" fill="rgb(225,176,8)" fg:x="332962" fg:w="34"/><text x="99.9718%" y="991.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (55 samples, 0.02%)</title><rect x="99.7319%" y="997" width="0.0165%" height="15" fill="rgb(219,122,41)" fg:x="332996" fg:w="55"/><text x="99.9819%" y="1007.50"></text></g><g><title>pthread_mutex_unlock (35 samples, 0.01%)</title><rect x="99.7379%" y="981" width="0.0105%" height="15" fill="rgb(248,140,20)" fg:x="333016" fg:w="35"/><text x="99.9879%" y="991.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::sleep (48 samples, 0.01%)</title><rect x="99.7484%" y="997" width="0.0144%" height="15" fill="rgb(245,41,37)" fg:x="333051" fg:w="48"/><text x="99.9984%" y="1007.50"></text></g><g><title>nanosleep (48 samples, 0.01%)</title><rect x="99.7484%" y="981" width="0.0144%" height="15" fill="rgb(235,82,39)" fg:x="333051" fg:w="48"/><text x="99.9984%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (216,972 samples, 64.98%)</title><rect x="34.7940%" y="1029" width="64.9829%" height="15" fill="rgb(230,108,42)" fg:x="116174" fg:w="216972"/><text x="35.0440%" y="1039.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (216,972 samples, 64.98%)</title><rect x="34.7940%" y="1013" width="64.9829%" height="15" fill="rgb(215,150,50)" fg:x="116174" fg:w="216972"/><text x="35.0440%" y="1023.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>CGSEventLogEvent (34 samples, 0.01%)</title><rect x="99.8017%" y="869" width="0.0102%" height="15" fill="rgb(233,212,5)" fg:x="333229" fg:w="34"/><text x="100.0517%" y="879.50"></text></g><g><title>SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) (37 samples, 0.01%)</title><rect x="99.8329%" y="725" width="0.0111%" height="15" fill="rgb(245,80,22)" fg:x="333333" fg:w="37"/><text x="100.0829%" y="735.50"></text></g><g><title>bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void (void const*, unsigned long) block_pointer) (34 samples, 0.01%)</title><rect x="99.8338%" y="709" width="0.0102%" height="15" fill="rgb(238,129,16)" fg:x="333336" fg:w="34"/><text x="100.0838%" y="719.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void (void const*, unsigned long) block_pointer) (34 samples, 0.01%)</title><rect x="99.8338%" y="693" width="0.0102%" height="15" fill="rgb(240,19,0)" fg:x="333336" fg:w="34"/><text x="100.0838%" y="703.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (71 samples, 0.02%)</title><rect x="99.8278%" y="773" width="0.0213%" height="15" fill="rgb(232,42,35)" fg:x="333316" fg:w="71"/><text x="100.0778%" y="783.50"></text></g><g><title>invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (69 samples, 0.02%)</title><rect x="99.8284%" y="757" width="0.0207%" height="15" fill="rgb(223,130,24)" fg:x="333318" fg:w="69"/><text x="100.0784%" y="767.50"></text></g><g><title>invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;) const (67 samples, 0.02%)</title><rect x="99.8290%" y="741" width="0.0201%" height="15" fill="rgb(237,16,22)" fg:x="333320" fg:w="67"/><text x="100.0790%" y="751.50"></text></g><g><title>SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt;&amp;) block_pointer) (91 samples, 0.03%)</title><rect x="99.8245%" y="789" width="0.0273%" height="15" fill="rgb(248,192,20)" fg:x="333305" fg:w="91"/><text x="100.0745%" y="799.50"></text></g><g><title>_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (103 samples, 0.03%)</title><rect x="99.8218%" y="821" width="0.0308%" height="15" fill="rgb(233,167,2)" fg:x="333296" fg:w="103"/><text x="100.0718%" y="831.50"></text></g><g><title>SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;) block_pointer) (97 samples, 0.03%)</title><rect x="99.8236%" y="805" width="0.0291%" height="15" fill="rgb(252,71,44)" fg:x="333302" fg:w="97"/><text x="100.0736%" y="815.50"></text></g><g><title>event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (109 samples, 0.03%)</title><rect x="99.8203%" y="853" width="0.0326%" height="15" fill="rgb(238,37,47)" fg:x="333291" fg:w="109"/><text x="100.0703%" y="863.50"></text></g><g><title>CGSDecodeEventRecord (105 samples, 0.03%)</title><rect x="99.8215%" y="837" width="0.0314%" height="15" fill="rgb(214,202,54)" fg:x="333295" fg:w="105"/><text x="100.0715%" y="847.50"></text></g><g><title>mach_msg (71 samples, 0.02%)</title><rect x="99.8532%" y="853" width="0.0213%" height="15" fill="rgb(254,165,40)" fg:x="333401" fg:w="71"/><text x="100.1032%" y="863.50"></text></g><g><title>mach_msg_overwrite (70 samples, 0.02%)</title><rect x="99.8535%" y="837" width="0.0210%" height="15" fill="rgb(246,173,38)" fg:x="333402" fg:w="70"/><text x="100.1035%" y="847.50"></text></g><g><title>mach_msg2_internal (70 samples, 0.02%)</title><rect x="99.8535%" y="821" width="0.0210%" height="15" fill="rgb(215,3,27)" fg:x="333402" fg:w="70"/><text x="100.1035%" y="831.50"></text></g><g><title>mach_msg2_trap (69 samples, 0.02%)</title><rect x="99.8538%" y="805" width="0.0207%" height="15" fill="rgb(239,169,51)" fg:x="333403" fg:w="69"/><text x="100.1038%" y="815.50"></text></g><g><title>CGSSnarfAndDispatchDatagrams (217 samples, 0.06%)</title><rect x="99.8119%" y="869" width="0.0650%" height="15" fill="rgb(212,5,25)" fg:x="333263" fg:w="217"/><text x="100.0619%" y="879.50"></text></g><g><title>SLEventCreateNextEvent (273 samples, 0.08%)</title><rect x="99.7963%" y="901" width="0.0818%" height="15" fill="rgb(243,45,17)" fg:x="333211" fg:w="273"/><text x="100.0463%" y="911.50"></text></g><g><title>SLSGetNextEventRecordInternal (269 samples, 0.08%)</title><rect x="99.7975%" y="885" width="0.0806%" height="15" fill="rgb(242,97,9)" fg:x="333215" fg:w="269"/><text x="100.0475%" y="895.50"></text></g><g><title>PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (308 samples, 0.09%)</title><rect x="99.7874%" y="917" width="0.0922%" height="15" fill="rgb(228,71,31)" fg:x="333181" fg:w="308"/><text x="100.0374%" y="927.50"></text></g><g><title>MessageHandler(__CFMachPort*, void*, long, void*) (310 samples, 0.09%)</title><rect x="99.7874%" y="933" width="0.0928%" height="15" fill="rgb(252,184,16)" fg:x="333181" fg:w="310"/><text x="100.0374%" y="943.50"></text></g><g><title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (315 samples, 0.09%)</title><rect x="99.7868%" y="965" width="0.0943%" height="15" fill="rgb(236,169,46)" fg:x="333179" fg:w="315"/><text x="100.0368%" y="975.50"></text></g><g><title>__CFMachPortPerform (315 samples, 0.09%)</title><rect x="99.7868%" y="949" width="0.0943%" height="15" fill="rgb(207,17,47)" fg:x="333179" fg:w="315"/><text x="100.0368%" y="959.50"></text></g><g><title>__CFRunLoopDoSource1 (316 samples, 0.09%)</title><rect x="99.7868%" y="981" width="0.0946%" height="15" fill="rgb(206,201,28)" fg:x="333179" fg:w="316"/><text x="100.0368%" y="991.50"></text></g><g><title>mach_msg (39 samples, 0.01%)</title><rect x="99.8820%" y="965" width="0.0117%" height="15" fill="rgb(224,184,23)" fg:x="333497" fg:w="39"/><text x="100.1320%" y="975.50"></text></g><g><title>mach_msg_overwrite (39 samples, 0.01%)</title><rect x="99.8820%" y="949" width="0.0117%" height="15" fill="rgb(208,139,48)" fg:x="333497" fg:w="39"/><text x="100.1320%" y="959.50"></text></g><g><title>mach_msg2_internal (38 samples, 0.01%)</title><rect x="99.8823%" y="933" width="0.0114%" height="15" fill="rgb(208,130,10)" fg:x="333498" fg:w="38"/><text x="100.1323%" y="943.50"></text></g><g><title>mach_msg2_trap (38 samples, 0.01%)</title><rect x="99.8823%" y="917" width="0.0114%" height="15" fill="rgb(211,213,45)" fg:x="333498" fg:w="38"/><text x="100.1323%" y="927.50"></text></g><g><title>__CFRunLoopServiceMachPort (47 samples, 0.01%)</title><rect x="99.8820%" y="981" width="0.0141%" height="15" fill="rgb(235,100,30)" fg:x="333497" fg:w="47"/><text x="100.1320%" y="991.50"></text></g><g><title>__CFRunLoopRun (378 samples, 0.11%)</title><rect x="99.7859%" y="997" width="0.1132%" height="15" fill="rgb(206,144,31)" fg:x="333176" fg:w="378"/><text x="100.0359%" y="1007.50"></text></g><g><title>CFRunLoopRunSpecific (387 samples, 0.12%)</title><rect x="99.7850%" y="1013" width="0.1159%" height="15" fill="rgb(224,200,26)" fg:x="333173" fg:w="387"/><text x="100.0350%" y="1023.50"></text></g><g><title>_NSEventThread (388 samples, 0.12%)</title><rect x="99.7850%" y="1029" width="0.1162%" height="15" fill="rgb(247,104,53)" fg:x="333173" fg:w="388"/><text x="100.0350%" y="1039.50"></text></g><g><title>std::__1::this_thread::sleep_for(std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000000l&gt;&gt; const&amp;) (53 samples, 0.02%)</title><rect x="99.9039%" y="997" width="0.0159%" height="15" fill="rgb(220,14,17)" fg:x="333570" fg:w="53"/><text x="100.1539%" y="1007.50"></text></g><g><title>nanosleep (51 samples, 0.02%)</title><rect x="99.9045%" y="981" width="0.0153%" height="15" fill="rgb(230,140,40)" fg:x="333572" fg:w="51"/><text x="100.1545%" y="991.50"></text></g><g><title>tracy::Profiler::CompressWorker() (61 samples, 0.02%)</title><rect x="99.9018%" y="1013" width="0.0183%" height="15" fill="rgb(229,2,41)" fg:x="333563" fg:w="61"/><text x="100.1518%" y="1023.50"></text></g><g><title>tracy::ListenSocket::Accept() (173 samples, 0.05%)</title><rect x="99.9329%" y="997" width="0.0518%" height="15" fill="rgb(232,89,16)" fg:x="333667" fg:w="173"/><text x="100.1829%" y="1007.50"></text></g><g><title>poll (171 samples, 0.05%)</title><rect x="99.9335%" y="981" width="0.0512%" height="15" fill="rgb(247,59,52)" fg:x="333669" fg:w="171"/><text x="100.1835%" y="991.50"></text></g><g><title>all (333,891 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(226,110,21)" fg:x="0" fg:w="333891"/><text x="0.2500%" y="1087.50"></text></g><g><title>thread_start (217,717 samples, 65.21%)</title><rect x="34.7940%" y="1061" width="65.2060%" height="15" fill="rgb(224,176,43)" fg:x="116174" fg:w="217717"/><text x="35.0440%" y="1071.50">thread_start</text></g><g><title>_pthread_start (217,717 samples, 65.21%)</title><rect x="34.7940%" y="1045" width="65.2060%" height="15" fill="rgb(221,73,6)" fg:x="116174" fg:w="217717"/><text x="35.0440%" y="1055.50">_pthread_start</text></g><g><title>tracy::Thread::Launch(void*) (328 samples, 0.10%)</title><rect x="99.9018%" y="1029" width="0.0982%" height="15" fill="rgb(232,78,19)" fg:x="333563" fg:w="328"/><text x="100.1518%" y="1039.50"></text></g><g><title>tracy::Profiler::Worker() (235 samples, 0.07%)</title><rect x="99.9296%" y="1013" width="0.0704%" height="15" fill="rgb(233,112,48)" fg:x="333656" fg:w="235"/><text x="100.1796%" y="1023.50"></text></g><g><title>tracy::Profiler::ProcessSysTime() (51 samples, 0.02%)</title><rect x="99.9847%" y="997" width="0.0153%" height="15" fill="rgb(243,131,47)" fg:x="333840" fg:w="51"/><text x="100.2347%" y="1007.50"></text></g></svg></svg>